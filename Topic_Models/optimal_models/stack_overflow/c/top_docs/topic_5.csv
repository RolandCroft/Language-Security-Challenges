answers,creation_date,len,postid,question,ratio,raw,tags,title,uniq,words,probability
happen indic program alreadi invok undefin behavior i.e state entir program undefined/indeterminate/invalid practic possibl abl recov keep run guarante danger asveikau mention signal handler try clean make even wors mess crash happen middl function modifi state global data data share thread access cleanup code destin state corrupt/inconsist and/or lock held left perman unreleas ensur happen - exampl misbehav thread never call async-signal-unsaf function - safe signal handler call altern perman freez thread signal handler ad signal write signal handler 100% safe leav process deadlock state lock held crash thread perhap less bad expos corrupt state thread clobber data hell,2011-09-03 05:05:49.96 UTC,130,7291273,applic start multipl thread use signal handler catch signal want applic quit want termin thread incur signal continu flow full applic thread possibl,0.12307692307692308,16,c signal-handling,possibl termin one thread receiv sigsegv,6,signing|validate|danger|unsafe|safe|deadlock,0.9919717907905579
obvious know undefin behavior territori mention sig_atomic_t said see exact exampl work modern unix-lik system signal sa_nodef mutex enough ensur proper synchron differ thread includ signal handler run anoth thread sigmask prevent signal handler thread recurs mutex said deep water lock insid signal handler one signal handler safe enough two signal handler trick differ lock end lock order deadlock somewhat mitig appli process sigmask instead thread sigmask simpl debug fprintf signal handler definit violat lock order exampl back away redesign applic stuff signal handler sign get complex easi break signal handler touch one sig_atomic_t defin thing c standard explod complex get anyth els right found paper https://www.cs.purdue.edu/homes/rego/cs543/threads/signals.pdf discuss run as-unsaf code sig handler safe mask signal as-unsaf block normal-context code explor less effici protect as-unsaf block normal-context code global sig_atom volatil flag prevent as-unsaf code handler enter explor effici approach satisfi part posix standard say call as-unsaf function sig-handl deem unsaf sighandl interrupt as-unsaf function http://pubs.opengroup.org/onlinepubs/9699919799/functions/v2_chap02.html#tag_15_04_03_03 scroll 1st paragraph function list think toy essenti fine-grain version idea sinc tri prevent run sig-handl clash as-unsaf code rather same/similar as-unsaf code deal mutex variabl unfortun posix seem code-onli concept signal-safeti function either safe unsaf regardless argument howev imo semaphores/mutex good reason oper data os handl contain mutex/semaphor pass think call / signal handler ought safe guarante never clash / mutex even though posix standard technic say safe counter-argu welcom,2013-01-20 05:27:06.587 UTC,336,14421951,first awar mutex consid async-saf normal question concern make mutex safe multithread program async signal signal handler code conceptu follow global variabl larg fit singl updat normal code read signal handler control code chain signal handler must run signal handler context consequ access control via sort synchron mechan complic matter program multithread thread receiv question combin possibl guarante synchron use code following? logic goe follow within block cannot interrupt within cannot rais current thread -protect critic region interrupt either assum signal alway block signal problemat lock/unlock alway proceed normal uninterrupt fashion current thread lock/unlock ensur thread interfer right avoid approach,0.13988095238095238,47,c posix signals synchronization,guarante mutex safeti async signal,7,signing|safe|access control|protect|deadlock|violate|unsafe,0.9226679801940918
test mutex function trylock kind undefin situat safe necessarili need block need two lock one use insid one protect process signal mask make mask unmask signal atom lock around thread like corrupt process sigmask execut overlap want multithread version sampl pseudo code total sure need block signal one thread thread remiss say refactor code number thing signal handler [asid this] limit e.g etc dedic one thread signal handl signal handler signal handler volatil global e.g monitor base level thu heavi lift signal handler done base task level anyth,2016-07-11 18:38:39.733 UTC,130,38313916,program pseudocod deadlock tri acquir lock func alreadi acquir main caller wonder suspend signal handl c languag specif exampl enter func acquir lock resum signal handl call handler upon exit func,0.11538461538461539,15,atomicity c mutex posix signals,ensur atom multithread program signal handler,4,signing|deadlock|safe|protect,0.9121465086936951
directli answer op issu glibc wrapper e.g malloc arena printf file access low-level-lock concurr signal handler enter function call grab lll_ interrupt re-ent function call deadlock possibl solut 1 first alreadi discuss above2 glibc wrapper - go straight kernel syscal e.g printf write glibc malloc syscallsbrk.. - probabl good idea unless realli to...3 dynam memori alloc handler alloc main task access handler implement grab intern glibc lock know signal handler call asynchron thread normal execut interrupt handl signal problem signal handler function use signal handler try lock avail thread got normal execut deadlock reason signal handler lean non-as-saf function call async-signal-saf function safe call within signal handler per posix standard function [ replic ]tabl unsaf respect signal implement make interfac async-signal-saf presenc signal function defin volum posix.1-2008 shall behav defin call interrupt signal-catch function except signal interrupt unsaf function equival process equival perform return initi call main signal-catch function call unsaf function behavior undefin addit except specifi descript individu function call unsaf function within signal handler behavior undefin linux man page state async-signal-saf function signal handler function must care sinc process elsewher interrupt arbitrari point execut program posix concept safe function signal interrupt execut unsaf function handler either call unsaf function handler termin via call longjmp siglongjmp program subsequ call unsaf function behavior program undefin linux man page provid list async-signal-saf function linux differ list posix specif - compar standard implement chang time.th safe function posix tabl first quot consist follow function function safe call signal handler async-signal-saf function never call malloc signal handler allow call limit functon signal handler.se man signal-safeti list function safe call signal handler look gdb output appear hold lock call result deadlock,2016-10-14 18:22:33.93 UTC,319,40049751,first sorri call malloc insid signal handler :.i understand time consum task/thi kind nasti stuff insid signal handler curiou know reason crash ? got similar core report https://access.redhat.com/solutions/48701 oper system rhel,0.15047021943573669,48,c linux rhel signals,malloc insid linux signal handler caus deadlock,6,signing|deadlock|availability|safe|unsafe|scripting,0.9076812267303467
type ctrl c normal caus shell send program add handler signal via ctrl c press altern care cleanup program exit set exit handler via appropri signal macro exampl deal sampl output press ctr + c oper system send signal process mani signal one sigint sigint program interrupt one termin signal kind termin signal interest thing sigint handl caught program default action sigint program termin program specif handl signal press ctr + c program termin default action chang default action signal regist signal caught regist signal c program least posix system two function signalint signum sighandler_t handler sigactionint signum const struct sigact *act struct sigact *oldact function requir header signal.h includ c code provid simpl exampl function comment note call safe/author function signal handler exampl avoid call printf signal handler compil code gcc execut shell infinit loop code run send signal press ctr + c,2013-07-20 20:47:26.19 UTC,180,17766550,develop applic use c++ compil use linux gnu c compil howev want invok function user interrupt script use ctrl c key do? answer much appreci,0.11666666666666667,21,c c++ linux signals,ctrl + c interrupt event handl linux,4,signing|scripting|safe|authorise,0.9032325744628906
"bit-mask - notic standard signal valu ? edit 0 queue standard signal bit-mask per thread signal post yet deliv given bit post signal lost bit clear i.e signal deliv edit 1 reliabl reap child process mechan reli signal kernel keep detail inform process ancestri child process disappear exit left process tabl parent reap breed zombi right pend mean least one children chang state dip kernel collect corps race signal queue process table/tree/whatev kernel job protect one signal process time thread signal handler run signal automat block possibl queue multipl signal singl thread mani differ signal howev appear queue suppos possibl signal handler unblock signal exit case risk overflow signal stack call stack use signal handler signal queue signal gener faster process specif signal block multipl instanc signal queued? depend whether sa_siginfo flag signal use structur function whether system valid definit _posix_realtime_sign modern linux kernel instanc true arriv signal fit two condit queu per-process queue deliv accept limit impos oper system number item given signal queue point signal arriv signal-typ drop either one situat true current arriv signal handl signal signal type arriv current signal handler run drop block signal two signal arriv process deliv merg togeth singl signal event two condit met . otherwis multipl signal event type queu one note . two condit state posix specif linux queue real-tim signal even sa_siginfo signal mean signal correspond rang sigrtmin sigrtmax signal queued,a process specif locat global location? store per-process queue queu signal handl possibl two signal process time,or guarante signal process one one? depend setup signal handler strutur function guarante signal block signal handler run signal mask within strutur determin signal block signal handler run signal block signal handler complet differ signal interrupt current signal handler block signal mask signal handler strurctur therefor anyth signal handler async-saf call non-async-saf function signal handler etc guarante signal handl fifo order i.e signal interrupt signal interrupt current signal handler intent block keep mind set signal mask insid signal handler attempt block signal interrupt handler bad idea atom oper want signal block signal handler run provid signal mask structur pass signal deliv signal handl handler invok right return current invoc multipl signal deliveri cours signal sent multipl time still process first one one signal queu one repeat handler invoc occur signal mark pend proc struct kernel separ signal bitmask process one signal kind sigbu sigint sigusr1 etc pend sever differ signal pend simultan",2011-06-14 13:02:35.063 UTC,452,6343871,"contrast multipl instanc standard signal deliv signal current block one instanc queu think descript clear caus ambigu specif signal block multipl instanc signal queued? signal queued,a process specif locat global location? queu signal handl possibl two signal process time,or guarante signal process one one? actual 3 question",0.19247787610619468,87,c linux signals,deliveri standard signal,4,signing|scripting|protect|validate,0.882202684879303
,2019-05-03 17:48:06.283 UTC,60,55974853,applic basic serial mitm want three thread serial port serial port reader thread - read serial port writer thread - write ioctltiocmset thread monitor modem control signal ioctltiocmiwait - ioctltiocmiwait ioctltiocmget understand read/writ thread safe play well togeth ioctl thread safe play well togeth read/write? run block issu,0.11666666666666667,7,c c++ multithreading serial-port thread-safety,serial port ioctl call thread safe read/writ,4,thread-safe|safe|mitm|signing,0.865805983543396
thread-saf code need serial concurr execut say thread-saf function need reentrant accord posix definit cite consid follow exampl two thread safe function two defin anoth thread safe function contract function guarante return valu equal valu inc_count larger function still thread safe reentrant accord definit two call function two differ thread return valu never case execut serial reentranc thread-safeti orthogon properti function posix.1c definit reentrant function impli thread-safeti sinc function reentrant thread-saf neither reentrant function guarante invoc interfer modifi state invoc depend invoc necessarili thread-saf thread-saf function necessarili reentrant consid e.g function intern state protect mutex thu make thread-saf howev function call er re-entrantli thread deadlock occur common exampl function malloc malloc thread-saf reentrant call malloc within signal handler instanc,2013-05-31 07:25:44.503 UTC,188,16851948,consid follow extend definit reentranc posix posix.1c reentrant function defin function whose effect call two thread guarante thread execut function one anoth undefin order even actual execut interleav iso/iec 9945:1-1996 §2.2.2 sourc http://www.unix.org/whitepapers/reentrant.html sinc thread-saf function serial concurr execut thu thread execut function one anoth undefin order even actual execut interleav impli thread-saf function reentrant consid posix definit,0.12234042553191489,23,c concurrency multithreading posix thread-safety,posix extend definit reentranc cover thread-safeti,5,thread-safe|safe|protect|deadlock|signing,0.860379695892334
understand fork sourc glibc use signal state critic section sure fork procedur interrupt signal handler execut critic section lock - becom automat signal safe wrong appreci correct https://www.securecoding.cert.org/confluence/display/seccode/sig30-c.+call+only+asynchronous-safe+functions+within+signal+handl fork list async-sign safe use posix follow tabl open group base specif [open group 2004] defin function asynchronous—signal-saf applic invok function without restrict signal handler asynchronous—signal-saf function fork ad answer look like longer consid async-saf least seem case perhap support longer exist posix answer current mark accept seem come conclus safe least like case build question thread-saf fork implement intern system librari use idiom suggest pthread_atfork obtain lock prefork handler releas lock parent child postfork handler fork ever safe signal handler thread program? possibl thread handl signal middl call malloc fopen/fclos hold global lock result deadlock fork? indeed! look open group resolv remov list reason ieee 1003.1c-1995 interpret request #37 regard interpret committe believ . follow explanatori addit made pg 78 line 864 addit invoc fork handler pthread_atfork fork call signal handler requir async safe bug 4737 identifi resolut evict async-saf function list use fill place unfortun resolv even manpag updat tri best answer sub-quest apologis vaguer ideal possibl librari code regist pthread_atfork handler async-signal-saf negat safeti fork? yes fork document explicitli mention cours mean actual intend purpos make multi-thread librari transpar process believ single-thread none pthread synchronis function async-signal-saf note defect spec see http://www.opengroup.org/austin/aardvark/latest/xshbug3.txt search l16723 answer depend whether thread signal handler run middl use resourc atfork handler need? said differ atfork handler make synchron resourc mutex etc fork call signal handler execut thread never access resourc program conforming? strictli speak answer accord spec function either async-signal-saf concept safe certain circumst practic well away vulner clunky-but-correct implement partit resourc expect build question thread-saf fork implement intern system librari use idiom suggest pthread_atfork obtain lock prefork handler releas lock parent child postfork handler fork ever safe signal handler thread program? possibl thread handl signal middl call malloc fopen/fclos hold global lock result deadlock fork? implement right signal handler never safe attempt obtain lock deadlock call thread alreadi held impli implement use method conform look glibc one exampl - rather take two approach firstli lock obtain recurs current thread alreadi lock count simpli increas child process simpli unilater overwrit lock - see extract function ultim call glibc intern equival effect reset mutex regardless waiter think theori obtain recurs lock guarante thread touch data structur least caus crash reset individu lock ensur resourc perman block reset current thread lock safe sinc thread contend data structur inde whatev function use lock return 100% convinc cover eventu least if/when signal handler return function lock stolen try unlock intern recurs unlock function protect unlock mani times! - seem workabl scheme built top async-signal-saf recurs lock final even fork safe signal handler safe fork signal handler return signal handler call fork signal handler alway necessit subsequ call _exit one exec famili function signal handler returns? assum talk child process? async-signal-saf mean anyth possibl return parent! found anyth spec state otherwis though miss believ safe - least safe sens return signal handler child impli undefin behaviour though fact multi-thread process fork impli probabl safest cours action use fork signal handler fine pthread_atfork sound bad idea ever answer origin question pthread cannot guarante safeti call pthread_atfork function async-sign safe kernel implement signal make imposs oh fork signal handler allow child return signal handler undefin,2010-12-15 19:08:43.453 UTC,684,4453822,realli uncertain requir posix place safeti presenc thread signal list one async-signal-saf function possibl librari code regist handler async-signal-saf negat safeti ? answer depend whether thread signal handler run middl use resourc atfork handler need? said differ atfork handler make synchron resourc mutex etc call signal handler execut thread never access resourc program conforming? build question thread-saf fork implement intern system librari use idiom suggest obtain lock prefork handler releas lock parent child postfork handler ever safe signal handler thread program? possibl thread handl signal middl call / hold global lock result deadlock ? final even safe signal handler safe signal handler return signal handler call signal handler alway necessit subsequ call one famili function signal handler return,0.11988304093567251,82,c deadlock fork pthreads signals,fork suppos safe signal handler thread program,7,deadlock|signing|safe|thread-safe|security|vulnerability|protect,0.8521952629089355
"first thought incorrect signal process enough inform post write test code replic failur give place look pardon cover signal basic alreadi know futur reader first know use legaci signal new posix sigact signal routin catch signal sigset use gnu legaci signal -- signal near imposs imposs guarante air-tight signal processor use origin signal processor environ unix system enter signal handler reset handler default condit subsequ signal guarante lost unless handler explicitli reset signal signal handler must assum call signal handler must loop signal found legaci signal bool condit indic least one signal outstand actual count unknown handler must allow signal found prior loop process signal allow signal unknown processes. program start start grandchild process inherit process child exit quickli advic hold nose flee legaci signal lack loop legaci handler multipl sigchild one sudo one unexpect grandchildren fire sudo one sigchild handl grandchild signal come first expect program signal caught posix signal -- sigact posix signal clean failur legaci signal handler without restor restor part posix signal often,at least mind evil one signal handl sigact signal sticky. live expressli chang wonderful! none troublesom requir reset signal handler againin handler mask mask current signal process signal paranoid mask signal pass handler lack mask caus weird stuff loos track signal sigchild sigchild handler gnu -- sigset gnu provid use in-between call signatur signal remov problem addit control function avail use sigset easi fix mani signal problem remind think signal handler thread program,even otherwis use thread code day old need absolut minim process signal handlers. call librari code,such printf side effects.i still follow legaci signal handler alway multithread caution newer handler",2011-11-22 01:05:13.1 UTC,361,8220729,current process write shell execut process util signal handler clean wait complet everyth work -- except execut process escal privileg case never signal -- never know process complet execut receiv command execut program provid paramet perform execut take look shell execut see follow ran got assign child ls assign child complet task sit zombi state seem want reap zombi process sit know caus behavior -- tri differ techniqu cleanup zombi process run shell wait directli execut 4796 exampl none techniqu work alway advis appreci,0.12742382271468145,46,c exec shell sigchld sudo,receiv sigchld process execut sudo,4,signing|privilege|signature|availability,0.8436331152915955
know answer accept alreadi made tini chang op question follow accord comment success result foo call everi 2 second ad infinitum note addit memset variabl chang sigvtalrm sigalrm happen anoth signal arriv signal handler function running? handler particular signal invok signal automat block handler return mean two signal kind arriv close togeth second one held first handl handler explicitli unblock signal use sigprocmask want allow signal type arriv see process signal mask howev handler still interrupt deliveri anoth kind signal avoid sa_mask member action structur pass sigact explicitli specifi signal block signal handler run signal addit signal handler invok signal normal block process see block handler handler return block signal restor valu handler ran use sigprocmask insid handler affect signal arriv execut handler signal arriv handler return portabl note alway sigact establish handler signal expect receiv asynchron want program work properli system v unix system handl signal whose handler establish signal automat set signal’ action back sig_dfl handler must re-establish time run practic inconveni work signal cannot arriv success howev anoth signal arriv right away arriv handler re-establish second signal receiv default handl termin process 24.7.3 process signal mask collect signal current block call signal mask process signal mask creat new process see creat process inherit parent’ mask block unblock signal total flexibl modifi signal mask prototyp sigprocmask function signal.h note must sigprocmask multi-thread process thread signal mask singl process signal mask accord posix behavior sigprocmask multi-thread process “unspecified” instead pthread_sigmask function preliminari | mt-unsaf race:sigprocmask/bsdsig_unblock | as-unsaf lock/hurd | ac-unsaf lock/hurd | see posix safeti concept sigprocmask function use examin chang call process’ signal mask argument determin signal mask chang must one follow valu block signal set—add exist mask word new mask union exist mask unblock signal set—remov exist mask mask ignor previou valu mask last argument oldset use return inform old process signal mask want chang mask without look pass null pointer oldset argument similarli want know what’ mask without chang pass null pointer case argument signific oldset argument often use rememb previou signal mask order restor later sinc signal mask inherit fork exec call can’t predict content program start run invok sigprocmask caus pend signal unblock least one signal deliv process sigprocmask return order pend signal deliv specifi control order explicitli make multipl sigprocmask call unblock variou signal one time sigprocmask function return 0 success -1 indic error follow errno error condit defin function einval argument invalid can’t block sigkil sigstop signal signal includ sigprocmask ignor instead return error statu rememb block program error signal sigfp lead undesir result signal gener actual program error oppos signal sent rais kill program broken abl continu execut point signal unblock see program error signal,2015-03-25 16:13:39.887 UTC,508,29260911,follow case want everi 2 second foo call foo actual stuff while1 assum foo run take 2 second 2 second foo inde call call made until foo return tri play signal mask henc sigfillset simpli call chang made result tri itimerv sigact variabl declar outsid main quit affect anyth thing tri even possible? thank,0.11811023622047244,60,c setitimer signals,c setitim send signal outsid call scope,4,signing|unsafe|safe|validate,0.8406630754470825
technic call write function insid signal handler noth prevent reason discourag signal handler handl oper anoth signal rais make signal handler jump higher prioriti signal handler kind lead race hard debug problem awar order handl signal that reason signal handler suppos light avoid hard debug race condit usual flag indic signal rais handl main anoth thread read flag call non async safe function within signal handler? impossible? safe result undefin behavior - like deadlock thing happen reason function call label async signal safe purpos mark safe call within signal handler linux man page async-signal-saf function signal handler function must care sinc process elsewher interrupt arbitrari point execut program posix concept safe function signal interrupt execut unsaf function handler call unsaf function behavior program undefin posix.1-2004 known posix.1-2001 technic corrigendum 2 requir implement guarante follow function safe call insid signal handler . function call list safe call within signal handler,2015-12-25 18:20:57.95 UTC,185,34465275,call non async safe function within signal handler? impossible? look set flag within signal handler print someth main code case signal handler defin logic flow program,0.1837837837837838,34,c c++ c++11 function signals,signal handler async safe function,5,signing|safe|race condition|deadlock|unsafe,0.8334798216819763
signal handler violat standard 7.1.4 librari function paragraph 4 function standard librari guarante reentrant modifi object static thread storag durat note footnot 188 thu signal handler cannot gener call standard librari function posix allow call async-signal-saf function within signal handler per ** 2.4.3 signal actions** . behavior undefin . signal handler call function defin standard one function list follow tabl function tabl unsaf respect signal note broken glibc async-signal-saf linux like happen signal handler interrupt call loop lead deadlock main loop hold lock signal handler get call block call wait lock come free - call hold lock interrupt signal safe call within signal handler follow propos code cleanli compil perform desir function violat need signal handler thread safe function note poor choic variabl name due reserv word c++ post code alway post need statement propos code typic run code result signal catch,2019-11-18 19:30:31,164,58921625,code see simple.i want program print dot catch sigprof signal.but program seem working.how fix,0.13414634146341464,22,c signals timer,troubl use sigact timer c,5,signing|violate|unsafe|deadlock|safe,0.8285166025161743
think issu analyz https://lwn.net/articles/176911/ reason posix.1g committ devi enhanc version call major differ latter call signal mask addit argument argument configur signal interrupt collect signal current block call signal mask process signal mask creat new process see creat process inherit parent’ mask block unblock signal total flexibl modifi signal mask sourc https://www.gnu.org/software/libc/manual/html_node/process-signal-mask.html https://linux.die.net/man/2/pselect https://www.linuxprogrammingblog.com/code-examples/using-pselect-to-avoid-a-signal-rac second question multipl algorithm process synchron see i.e https://www.geeksforgeeks.org/introduction-of-process-synchronization/ link page https://en.wikipedia.org/wiki/sleeping_barber_problem associ page basic signal one path ipc linux cf ipc signal linux ignor signal part question answer thread produc consum consumerthread pselect interrupt one consumerthread anotherproduc thread? sinc titl impli signal easiest know thread expo file descriptor alway includ p/select monitor descriptor alway monitor least one thread write p/select call return eventfd avail replac classic verbo pipe similar commun mechan,2020-03-30 08:06:21,161,60926336,accord manual timeout paramet wait file-descriptor chang option interrupt signal howev obviou manual signal abl interrupt pselect? thread produc consum consumerthread pselect interrupt one consumerthread anotherproduc thread,0.13043478260869565,21,c multithreading signals,interrupt pselect wait - multithread,4,signing|scripting|forge|availability,0.8065928816795349
describ async signal safe code unsaf function use global insid outsid signal handler never safe atom one type guarante atom wrt signal handler forget declar well async signal safe guard mistak,2018-07-21 06:48:07.28 UTC,65,51453570,function definit function expect pointer struct wonder async signal safe pass global variabl struct ? e.g main program call signal interrupt happen call pass global struct pointer interf,0.2153846153846154,14,c multithreading,clock_gettim async signal safe,4,signing|safe|unsafe|forge,0.7905343770980835
first printf insid signal handler printf signal safe second call open make sens leak filedescriptor even use close [post answer sinc cannot comment yet] invok undefin behavior call unsaf function signal handler unless signal interrupt unsaf function,2013-04-02 10:22:53.853 UTC,68,15761687,need emul system call receiv signal tri invok open system call reuslt core dump dont understand code use,0.17647058823529413,12,c linux linux-kernel signals,code dump try invok open system within signal handler,5,signing|safe|leak|scripting|unsafe,0.7885070443153381
send chang signal work gener bad idea signal handler sinc async-sign safe case danger interrupt regular-context code async-sign safe name busi loop posix appear guarante special except though perfectli safe refrain make async-sign unsaf call signal handler replac,2019-02-18 15:47:45.55 UTC,75,54750876,look stack exchang question call function automat regular intervals? tri run code first answer understand appear print alarm clock 2500 millisecond understand possibl sinc print statement effect increment counter everi 2500 millisecond suppos,0.14666666666666667,11,c,understand output program,4,signing|safe|danger|unsafe,0.7499269247055054
none,2020-02-13 11:34:41,24,60206878,function call arriv implement? need protect lock? otherwi exampl 2 signal ariv time code cala wrong,0.20833333333333334,5,c linux multithreading thread-safety,sa_sigact thread safe,4,thread-safe|safe|protect|signing,0.7499101161956787
creat new process new process child sampl code handl error work command exactli 1 paramet understoode.g signal handler invok undefin behavior call async-sign safe function within signal handler per posix standard . behavior undefin . signal handler call function defin standard one function list follow tabl follow tabl defin function shall async-signal-saf therefor applic call without restrict signal-catch function . [tabl async-signal-saf functions] function tabl unsaf respect signal . signal handler multipl non-async-signal-saf function function safe call within signal handler given code like place signal handler call process block - tri read like involv lock mutex kind yet signal handler call tri read lock indetermin state main thread block asynchron call signal handler deadlock corrupt intern structur use,2017-05-14 10:31:59.537 UTC,153,43962876,question regard execlp c follow programm print user name@hostnam folder$ take linux command argument ls -alaft start execlp work think read articl regard command guess still understand appreci someon help,0.12418300653594772,19,c execl,usag execlp c-program,5,user name|signing|safe|unsafe|deadlock,0.7383297085762024
unsaf call async-unsaf function signal handler signal interrupt async-unsaf function main program async-unsaf function need anyth one anoth -- result undefin pretti much safe call async-unsaf function signal handler ensur signal never occur call aysnc-unsaf function one wrap everi call async-unsaf function appropri sigblock/sigsetmask call ensur signal deliv unsaf function run anoth main program set/clear flag call async-unsaf function signal handler check flag tri call async-unsaf function thing bit better synchron signal thing abl ensur async-unsaf function never trigger signal allow care sent signal asynchron requir care howev -- signal handler catch write write-protect memori need ensur never pass write-protect memori async-unsaf function trigger handler yes inde unsaf call non-async-signal-saf function insid signal handler case unless dive implement code -e.g perhap compil gener code perhap prove call function fact safe proof imposs take month year time even help static analyz à la frama-c . requir studi implement detail concret probabl intern call intern data etc.. standard function obvious global state e.g vector link list bucket relat previous -d memori zone reus futur call rememb unix signal occur everi machin instruct c sequenc point well defin semant bad luck signal occur machin instruct updat global state futur call -e.g indirectli signal handler break havoc i.e undefin behavior misfortun unlik evalu probabl practic imposs code detail heavili implement specif depend compil optim flag kernel processor architectur etc. care async-signal-saf function bet disast happen accept debug purpos e.g often alway insid signal handler practic work time gcc compil intern use async-unsaf libbacktrac librari signal handler code wrap good product code realli add code handler mention comment know wrongli call non-async-signal-saf function prepar curs futur colleagu work code base typic trick handl situat simpli flag signal handler read posix signal.h document check flag safe place loop -outsid handler- write2 one -or few- byte pipe7 previous setup applic initi read end pipe period poll2 -ed later read event loop -or thread- taken exampl think wide use non-async-signal-saf function even implement specif routin e.g 64 bit arithmet 32 bit processor etc.,2015-08-24 15:14:46.003 UTC,484,32185822,figur whether call non-async-saf function signal handler quot linux man page signal7 signal interrupt execut unsaf function handler call unsaf function behavior program undefin tlpi susv3 note function list tabl 21-1 list async-saf function consid unsaf respect signal point function unsaf invoc signal handler interrupt execut unsaf function handler call unsaf function interpret quot safe call non-async-saf function signal handler signal handler interrupt non-async-saf function exampl instal handler sigint call unsaf function suppos non-reentr name unsaf call infinit loop main thread run question simpl exampl see bad thing happen handler interrupt execut call unsaf function afak acquir consol lock intern buffer perform buffer i/o state consist exampl although return static alloc string share function thread misunderstand something? want someon clarifi alway unsaf signal handler interrupt execut unsaf function main program call unsaf function safe situat e.g simpl exampl,0.1384297520661157,67,async-safe c linux signals,alway unsaf call non-async-saf function signal handler,4,safe|signing|unsafe|protect,0.7350491285324097
program block insid signal handler call signal handler interrupt call seem reintrant signal handler call specif function scroll https://pubs.opengroup.org/onlinepubs/9699919799/functions/v2_chap02.html#tag_15_04_03 within signal handler short simpl thread format log exampl via pipe fed signal handler necessari inform format log function list within link notic appear call stack twice? two core problem call signal handler allow look wrong thread stack thread got stuck deadlock caus thread interrupt get stuck deadlock victim deadlock twice! perpetr anoth thread go log signal handler need tight control code run signal handler need pass heavi lift anoth thread safe call non-reentr function,2019-12-18 07:27:20,162,59387283,seen mani question go deadlock call stack differ code call case log class tri print log log make thread go deadlock see call stack sj_init daemon monitor live statu daemon system daemon dieswhich close connect sj_init tri restart daemon tri print log call intern call edit threadsaf tri lead thread go deadlock acc descript threadsaf function wrong,0.12345679012345678,20,c c++ deadlock,localtim function invok ___lll_lock_wait_priv make thread go deadlock,5,deadlock|threadsafe|scripting|signing|safe,0.7266350388526917
signal safe alreadi found howev posix.1-2008 mark gettimeofday obsolet recommend clock_gettime2 instead sourc signal-saf thread-saf altern defin async-signal-saf pass 0 second timezon argument anyth offici async-signal-saf matter qoi async-signal-saf case deadlock insid intern libc function appear call directli tail call document api function four function gnu libc call grep sourc code therefor problem call call one function obvious async-signal-saf sinc write global variabl async-signal-saf either look global databas timezon inform yes even — possibl chang need still thing reli cross-platform think good workaround format output async signal handler go trip kind problem advic restructur code never need call log function async signal handler,2018-11-05 13:15:45.083 UTC,223,53155166,previous ask question regard termin thread block i/o use instead write pipe consid advantag implement code send signal sigusr2 target thread use initi work fine face issu recent notic deadlock issu thread tri log statement block stacktrac function call logger modul function invok function intern call gettimeofday print current time log suspect function call call insid signalhandl caus deadlock issu confid issu get reproduc frequent inform state async signal safe gettimeofday thread safe consid async signal safe list async signal safe function 1 consid async signal safe root caus deadlock ? 2 known issu caus deadlock ? edit definit function stack trace thread interrupt signal,0.14798206278026907,33,c c++ linux multithreading signals,gettimeofday async signal safe ? caus deadlock use signal handler,4,signing|safe|deadlock|thread-safe,0.7069816589355469
suppos thread call standard io function lock mutex protect stream data structur unlock mutex signal deliv signal handler call signal handler call attempt lock mutex thread standard io stream deadlock forev signal handler wait mutex never becom avail thread block signal handler return classic deadlock differ thread signal handler thread attempt lock mutex find alreadi lock go sleep thread run sooner later thread hold mutex unlock signal handler thread go sleep let interrupt thread run - thread simpli block signal handler return exampl never,2016-04-30 19:14:57.383 UTC,134,36959118,basic sketch implement multithread web proxi idea network admin flush buffer log entri log file use command send signal web proxi howev sure good idea call insid signal handler know thread-saf think async-signal-saf concurr problem aris call insid signal handler multithread,0.13432835820895522,18,c fflush multithreading,call fflush insid multithread signal handler,5,signing|thread-safe|protect|deadlock|availability,0.7055730223655701
answer two actual question program continu run signal handler return noth written signal handler caus program termin program continu normal want program termin need call reason second caus program termin outdat unreli interfac standard across unix-lik platform origin behavior regist signal handler signal actual deliv first disposit signal reset signal handler run first deliveri signal signal handler regist anymor unless call signal deliv program second time signal handler call default action taken case stop process behavior differ bsd-deriv system signal handler remain regist realli reliabl thing disposit anyth els modern reliabl signal interfac problem program first along standard librari function safe call signal handler posix defin complet list asynchronous-signal-saf function safe call signal handler instead case flag type handler second particular danger suppos current contain next iter loop copi last charact overwrit exist termin null charact signal deliv string get pass even without problem call signal handler send array termin null charact incur undefin behavior probabl segfault better version exampl use interfac call unsaf function signal handler output see delay input actual deliveri signal perfectli normal expect base kernel actual deliv signal,2016-10-18 01:35:28.137 UTC,224,40098170,came across exampl code studi appar someth wrong code compil ran attempt gener sigtstp ctrl+z instead print one word num exit instead print number expect continu run take anoth sigtstp signal keyboard actual make program exit,0.12053571428571429,27,c signals,handl sigtstp signal c,4,signing|safe|danger|unsafe,0.6976072788238525
danger thread program unless follow sinc current thread fork littl fork multi-thread program probabl make sure take lock sinc + safe fork danger multithread program copi run thread ok system signal handler multipl thread wait mess function necessarili thread-saf posix.1-2008 specifi well posix.1-2001 system function need thread-saf exampl solari 10 document thread-unsaf system function manipul signal handler sigint sigquit sigchld therefor safe call system multithread process sinc thread manipul signal handler thread concurr call system interfer destruct manner man page suggest thread-saf work-around note chang signal handler linux thread-saf note necessarili call implement instead linux directli call even although fork multi-thread program challeng fork directli follow exec safe gener modulo open file descriptor,2012-11-20 10:42:25.52 UTC,137,13471489,function implement use functions.i heard function danger multi-thread programs.so function danger multi-thread programs? problem caus,0.13138686131386862,18,c fork linux multithreading,safe call system3 multi-thread process,6,safe|danger|signing|thread-safe|unsafe|scripting,0.6829741597175598
"avoid use signal handler? alway avoid say signal handler least posix conform system instead format easi howev print int signal handler use write async-saf function primari problem signal interrupt similar function intern state temporarili inconsist move block memori free use list similar oper code signal handler call function invok complet wreck memori manag c standard take conserv view signal handler iso/iec 9899:2011 §7.14.1.1 function ¶5 signal occur result call function behavior undefin signal handler refer object static thread storag durat lock-fre atom object assign valu object declar signal handler call function standard librari function function function function first argument equal signal number correspond signal caus invoc handler furthermor call function result return valu indetermin 252 252 signal gener asynchron signal handler behavior undefin posix lot gener signal handler signal concept posix 2008 edit say process multi-thread process single-thread signal handler execut result process call gener signal block pend signal unblock deliv call unblock return behavior undefin signal handler refer object static storag durat assign valu object declar signal handler call function defin standard one function list follow tabl follow tabl defin function shall async-signal-saf therefor applic invok without restrict signal-catch function function tabl consid unsaf respect signal presenc signal function defin volum posix.1-2008 shall behav defin call interrupt signal-catch function singl except signal interrupt unsaf function signal-catch function call unsaf function behavior undefin oper obtain valu oper assign valu shall async-signal-saf signal deliv thread action signal specifi termin stop continu entir process shall termin stop continu respect howev famili function notabl absent list call safe signal handler posix 2016 updat extend list safe function includ particular larg number function particularli valuabl addit particularli frustrat oversight list result either end use without format support provid et al end set flag test period appropri place code techniqu abli demonstr answer grijesh chauhan standard c function signal safeti chqrlie ask interest question partial answer come string function charact class function mani c standard librari function list above? implement need purpos evil make unsaf call signal handler mani function hard see declar async-sign safe agre prime exampl along etc hand function rather complex like async-sign safe retain state call signal handler easili tell whether part code use mess function work locale-sensit data load local involv sort state set function macro locale-sensit therefor run issu find hard see mathemat function async-sign safe unless affect sigfp float point except though time see one day integ divis zero similar uncertainti aris function exempt — exampl other specif problemat famili prime exampl similar assess made header standard c 2011 use posix environ standard c restrict interest analyz pure standard c environ mark locale-depend unsaf manipul local requir memori alloc etc — probabl safe — possibl safe — safe — safe — probabl safe — function — locale-sensit function unsaf — function — function — locale-sensit function unsaf — possibl safe — safe — allow — function — function — possibl safe probabl safe — function — function — function — safe — safe allow other — function — safe — possibl safe — probabl safe — locale-depend explicitli allow — locale-depend — locale-depend — locale-depend analyz posix header … harder lot function safe mani … simpler posix say function async-sign safe mani note header three safe function mani unsaf function nb almost assess c function header posix environ semi-educ guesswork sens definit statement standard bodi one techniqu especi use program select loop write singl byte pipe receipt signal handl signal select loop someth along line error handl detail omit breviti care signal byte pipe signal number implement async-signal-saf bad thought convert int string c? sever implement sinc two interest type data signal handler access global signal argument basic cover interest case fact signal safe make thing even better posix program print stdout number time receiv sigint far trigger signal id exit program sigquit main.c compil run press ctrl + c fifteen time termin show signal number test ubuntu 18.04 github upstream flag variabl flag insid signal handler base flag call function main part program normal oper safe call function within signal handler use techniqu signal handler check main program print messag requir notic exampl signal handler ding flag 1 sigalrm caught main function valu examin condit call printf correctli refer begin linux program 4th edit book exactli code explain want chapter 11 process signal page 484 addit need take special care write handler function call asynchron handler call point program unpredict two signal arriv short interv one handler run within anoth consid better practic declar type alway access atom avoid uncertainti interrupt access variabl read atom data access signal handl detail expiat read defin signal handler :to learn write signal handler function establish function list author function manual page call function insid signal handler safe debug purpos wrote tool verifi fact call function list print warn messag unsaf function call within signal context solv problem want call non async-saf function signal context least help find case done accident sourc code github work overload temporarili hijack entri unsaf function caus call unsaf function redirect wrapper printf signal handler use pthread librari unix/posix specifi printf atom thread cf dave butenhof repli https://groups.google.com/forum/#!topic/comp.programming.threads/1-bu71nygqw note order clearer pictur printf output run applic consol linux ctl+alt+f1 start consol 1,rather pseudo-tti creat gui",2013-06-03 06:23:45.32 UTC,896,16891019,sinc reentrant suppos safe signal handler seen lot exampl code use question need avoid use signal handler recommend replac,0.12053571428571429,108,c linux signals,avoid use printf signal handler,5,signing|safe|unsafe|authorise|hijacking,0.6630071997642517
much safer altern posix 2008 mark olet posix timer timer expir function run thread rather signal handler restrict use async-signal-saf function document http://pubs.opengroup.org/onlinepubs/9699919799/functions/v2_chap02.html#tag_15_08_05 posix timer api instead creat thread mere sleep loop block timer signal thread except thread free whatev function signal handler sinc run separ thread danger interrupt async-signal-unsaf function good start realli want go asynchron signals? otherwis main loop appropi timeout,2011-03-25 19:32:26.793 UTC,105,5437240,need functioneg signal handler c/c++ linux get activ everi n millisecond setup signal etc...to regist timer event millisecond resolut accuraci super critic need within hundr ms new linux realli know start,0.12380952380952381,13,c c++ linux signals timer,linux c/c++ timer signal handler userspac,4,signing|safe|danger|unsafe,0.6586599349975586
document state pretti clearli call glib complet thread safe global data automat lock individu data structur instanc automat lock perform reason exampl must coordin access multipl thread hash tabl thread safe,2012-01-12 15:42:14.41 UTC,49,8837822,multipl thread ad modifi look data ghashtable.i threadsaf need implement threadsafeti,0.22448979591836735,11,c glib thread-safety,ghashtabl glib2 thread safe,4,thread-safe|safe|hash|threadsafe,0.6430484056472778
actual sigwait chang mask restor see advanc program unix environ signal thread oracl multithread program guid,2015-11-10 20:37:44.89 UTC,71,33639135,look write multithread applic one thread wait anoth signal continu accord mt-safe race condit accord use case tri understand base man page descript appear that. actual chang process signal mask affect thread wait one indic signal without chang thread process signal mask understand correct? block without chang signal mask,0.14084507042253522,10,c linux multithreading,sigwait mt-safe sigsuspend,4,safe|signing|race condition|scripting,0.6413333415985107
hmm best found far seem work depend function structur remov signal handler first third argument -type signal handler respect thought whether correct usag horribl hack,2011-04-03 16:54:23.917 UTC,143,5531006,got situat signal handler need certain condit return without unmask i.e return signal remain block thread signal mask jump signal handler work need return exact point interrupt normal signal handler return conform short use remov standards? cannot chang signal handler disposit effect must local thread purpos code atom oper potenti race condit deadlock basic potenti interrupt code look flag counter decrement well signal handler noth signal possibl arriv two instruct case signal handler want immedi return let decrement proceed process bombard signal intend receiv thread arcan synchron purpos possibl loop forev least unbound time process signal thread never receiv signal leav signal block signal handler return problem,0.15384615384615385,22,atomic c posix signals synchronization,return signal handler leav signal mask,4,signing|race condition|deadlock|hack,0.6408566236495972
,2017-05-11 09:21:31.407 UTC,227,43911379,work implement driver linuc cryptoapi encryption/decrypt perform hardwar want asynchron oper cryptoapi perfectli suitabl purpos main purpos driver use ipsec citat document asynchron oper provid kernel crypto api impli invoc cipher oper complet almost instantli invoc trigger cipher oper signal complet invok cipher oper caller must provid callback function kernel crypto api invok signal complet cipher oper furthermor caller must ensur handl asynchron event appli appropri lock around data kernel crypto api perform special serial oper protect caller’ data integr common mechan work driver queri process data make child process commun hardwar drivernot child process return special codein progress caller caller creat one els queri anoth use work data process complet child process call callback function regist caller die caller driver kill exampl data handl hardwar caller process exist anymor system execut callback function corrupt system besid execut callback function child process encrypted/decrypt data hardwar write buffer provid caller one scenario system corrupt caller exist anymor driver buffer kernel develop plan resolv issue? mechan synchron driver custom applic use? want go back upper citat :furthermor caller must ensur handl asynchron event appli appropri lock around data kernel crypto api perform special serial oper protect caller’ data integr know concern issu research case problem driver control data integr mayb problem ipsec level? exampl xfrm subsystem? comment idea pleas,0.11894273127753303,27,c cryptoapi ipsec linux-device-driver linux-kernel,data integr asyncron cryptoapi linux,7,crypt|ipsec|integrity|encrypt|cipher|signing|protect,0.6267439126968384
fcntl altern flock gener async-signal-saf system call semant make hard implement differ posix list async-signal-saf function posix like need explicit unlock lock releas automat file descriptor refer open file descript close call replac appropri call stdio function list async-signal-saf function often strongli async-signal-unsaf call probabl best replac set signal default action resend self shell know program exit signal abort command sequenc appropri instead signal handler put unsaf function exit handler use atexit updat gener put potenti block system call signal handler one avoid flag signal handler perform function want context main loop,2013-06-06 16:29:06.963 UTC,131,16967365,follow handler function someon told async-signal-saf find altern async-signal-saf function list accord link signal interrupt unsaf function signal-catch function call unsaf function behavior undefin make async-signal-safe? anoth solut execut receiv signal,0.183206106870229,24,asynchronous c c++ linux signals,make function async-signal-saf,4,signing|unsafe|safe|scripting,0.6243555545806885
one thread receiv signal! one? see quot detail http://www.linuxprogrammingblog.com/all-about-linux-signals?page=11 thread receiv signal? interest question two case process-direct signal sent pid use function kill2 thread separ signal mask manipul use pthread_sigmask2 similari sigprocmask2 signal deliv thread signal block deliv one thread process signal unblock unspecifi thread thread signal block queu per-process queue signal handler defin signal default action termin process without dump core whole process termin thread-direct signal special function send signal specif thread pthread_kill2 use send signal one thread anoth signal deliv queu specif thread per-thread direct signal gener oper system sigsegv signal handler defin signal default action termin process thread-direct signal termin whole process quit conceptu error program signal standard signal i.e non-realtim signal sigint queu process receiv one signal type thrown away one alreadi deliv somehow process signal anyway deliv process whole absenc program take action otherwis signal deliv arbitrari thread within process resend signal catch thread requir make thread id avail everi thread use instanc global tabl tid unclear realli tri accomplish program almost certainli want fifo seem know use fifo commun thread dubiou design told correctli 1 fifo open w/o specifi non-block mode go block reader writer end fifo mean 3 thread block respect fifo open call signal handler - see problem - run open fifo write 2 even past open one thread go read consum string signal handler wrote thread go sit block tri read empti fifo never process anyth current call thread read fifo end program realli go for? 3 need open fifo thread creat thread either pass fifo file descriptor thread make global 4 open close fifo thread everi time loop run file descriptor quickli signal handler non-async safe call signal handler least 3 - fopen fput fclose ideal want simpl thing global switch signal handler anyth brain dead class assign rethink entir suggest elabor exactli goal program advic reach,2014-06-30 09:36:59.6 UTC,353,24487099,tri creat simpl signal handl - let say someth termin process three separ thread program + main thread problem invok signal caus current thread termin other still run send signal remain threads? differenti signal send them? fifo got far,0.11898016997167139,42,c linux multithreading posix,send signal thread,4,signing|availability|scripting|safe,0.6214495897293091
think list cover posix function bsd/svid list henc new thread-saf function probabl focu list list old thread-unsaf function appear posix.1-2008 specifi thread-saf sinc posix.1-2008 function list function allow non-threadsaf howev posix.1-2008 preclud thread-saf case glibc appear sourc actual thread-saf sinc return global rather return glibc-defin member type return call even though glibc call still appear thread-saf,2013-11-18 18:13:35.513 UTC,101,20054795,unix® system thread refer head thread-safeti list function guarante thread-saf unix system function scandir absent list readdir appear list howev glibc sourc scandir clearli appear call readdir thread-saf readdir_r scandir omit list reason thread-saf reason miss,0.1485148514851485,15,c io readdir scandir thread-safety,scandir realli thread safe,4,thread-safe|safe|unsafe|threadsafe,0.6010046005249023
async safe much stricter requir thread safe write thread safe code use primit protect global data critic section signal handler reli exampl insid critic section within sem_wait simultan someth caus segfault break thread-saf protect sem_wait applic receiv signal valu semaphor zero thread receiv signal happen one suppos increment semaphor valu sem_post? call sem_wait signal handler process deadlock no? anoth argument cours sem_wait list async-signal-saf function implement free invok nasal demon sem_wait cannot use signal handler reason thread call sem_wait sem1 thread done post sem1 howev finish signal receiv handler enter call sem_wait sem1 sinc one post sem1 handler never return deadlock good rule never wait anyth signal handler problem asfaik deadlock crash violat ideal purpos signal handler handl extern interrupt back quickli lastli better goal rid sigsegv instead handl,2011-12-13 17:31:24.167 UTC,161,8493519,cannot use insid signal handler particularli sigsegv signal per thread? someon give exampl scenario crash application? guess reentrant thread safe problem here? async safe,0.16149068322981366,26,c linux semaphore signal-handling signals,sem_wait signal handler,6,signing|safe|protect|thread-safe|deadlock|violate,0.5973362922668457
system ? know behavior function signal handler return flag though pessimist skip async-unsaf call signal pend first question signal handler? well-defin answer consid follow code said techniqu answer question meaning mani program choos signal intend add signal handl instal signal handler use check current signal mask design signal signal mask mean signal handler invok yet return return restor origin signal mask easiest log via name pipe write upto pipe_max atom via udp socket idem messag origin function gener messag cours need process actual read process messag kept outsid context signal handler btw need separ process reciev messag send messag process add read end pipe fd_set given program sit select poll loop poll period,2010-03-05 21:06:19.327 UTC,193,2389919,work log modul call variou place larg project problem sometim modul call code execut insid signal handler normal log modul includ time data use localtim strftime cours call async-sign safe caus deadlock call within signal handler gnu/linux system tell whether code current execut signal handler context apart e.g everi signal handler flag processing? think better simplifi signal handler case choic log modul call nice test omit timestamp inform modul call signal handl,0.13989637305699482,27,async-safe c signal-handling signals,test whether signal handler,4,safe|signing|deadlock|unsafe,0.5905466675758362
caus jump locat return signal handler mean signal still block default behavior signal mask return signal handler fix indic want signal occur clear signal mask handler flag prevent mask first place / function save mask call sigprocmask either longjmp unmask warn danger thing catch sigsegv longjmp signal handler almost imposs anyth use memori access error occur function async signal safe reentrant abl continu kind sane anyway sinc multipl similar question site guess kind exercis relat question catch segment violat get life use longjmp signal handler? longjmp signal handler,2014-03-24 14:30:30.357 UTC,119,22612307,tri handl sigsegv signal code written follow code c fedora 15 problem signal handler get call second segment fault anybodi kindli point wrong,0.13445378151260504,16,c fedora sigsegv,cannot handl consecut sigsegv signal,4,signing|danger|safe|violate,0.5592424869537354
see two quit clean solut linux-specif creat dedic thread handl signal catch signal use signalfd handl signal regular thread limit handler portabl dedic thread sleep signal receiv pipe creat pair file descriptor thread read2 first descriptor signal handler write2 second descriptor use write signal handler legal accord posix thread read someth pipe know must perform action access share data signal handler find inform signal follow articl linux signal applic programm linux signal handl model linux signal look safest deal signal linux far signalfd consid mmap -ing fuse file system user space actual happi gnu hurd support extern pager perhap hack read binari search tree signal handler often work practic non-port kernel version depend perhap serial access low-level non portabl trick e.g futex atom gcc builtin work read machin specif sourc code nptl i.e current linux pthread routin help probabl case etc fact usabl insid linux signal handler. probabl atom instruct assum sh access share data directli mayb indirectli global variabl signal handler write read elsewher even within thread sh set flag invok thread poll flag middl modifi bst find process requir origin signal use whatev synchron necessari rais differ signal sigusr1 indic process done sh signal reset flag worri overlap sigsegv add counter mix keep track hey! built semaphore! weak link obvious poll start,2011-12-13 16:00:39.603 UTC,265,8492208,situat need read binari search tree bst insid signal handler sigsegv signal handler accord knowledg per thread base bst modifi thread applic sinc signal handler semaphor mutex etc therefor access share data solv problem? note applic multithread run multicor system,0.1169811320754717,31,c linux mutex signal-handling signals,read share data insid signal handler,4,signing|scripting|safe|hack,0.5412413477897644
"take look msdn help question whether delphi compil remov zeromemori optim result,athough doubt delphi compil avail right think need rememb delphi win32 api functions/macro ident implement pointer version rtl function henc remark msdn refer page say must rather block overlap irrelev delphi alway make right thing think thing appli first implement #0 function deplhi think #0 ignor time realli document delphi refer pleas correct wrong! far understand differ implement inlin function ensur optimis compil think delphi perform level compil optimis call optimis sinc accord msdn securezeromemori actual defin declar follow mere alia",2010-10-27 07:43:54.133 UTC,118,4030945,understand function c.the function implement defin function qns use delphi? delphi releas librari contain function? use delphi 7,0.03389830508474576,4,c c++ delphi memory security,use securezeromemori delphi,2,security|availability,0.5126476883888245
focu state question shall limit suggest signal handl aspect consid use realtim signal inclus instead standard signal queu lose one alreadi pend anoth signal trigger realtim signal queu much reliabl see real-tim signal section detail consid save begin signal handler restor return otherwis possibl corner case signal deliveri corrupt signal handler modifi implicitli hard debug -- simpli put case think assign due fail syscal actual reset signal handler language-lawy point access thread-loc variabl typic one non-async-sign safe least theori practic safe especi thread-loc variabl access thread prior signal detail regard glibc see thread libc-alpha mail list person creat pthread smaller default stack default larg typic worker thread ensur thread function read write thread-loc variabl first thing avoid thread-loc non-async-signal-saf issu practic appli main thread short thread-loc variabl known alloc avail prior signal deliveri practic async-signal-saf final async-signal-saf function modifi intern without special handl async-signal-saf restor describ man page mention andrew henl comment origin question async-signal-saf function safe signal handler neither async-signal-saf note async-signal-saf use eg anonym socket pair transfer inform packag describ event event-process thread print debug inform standard output standard error descriptor respect absolut need non-async-signal-saf function block signal creat helper thread use handl signal necessarili work thread-target signal linux person signal handler gcc atom builtin support c compil fortun maintain queue event e.g wake event-process thread sever design option thu far even oddbal problem come across alway solvabl use rel straightforward approach describ man page examin find reason signal aio complet / / / / / sigio signal kernel-s signal examin find process sent signal recommend clear entir via e.g prior set field field union clear entir structur zero ensur safe valu unus field hmm forget something? notic someth miss pleas let know comment fix answer,2016-01-31 17:51:18.027 UTC,343,35117180,implement asynchron file read use gnu asynchron i/o signal handl result use signal callback handler sigusr1 target wonder happen someon send sigusr1 process obviosli popul instanc structur therefor read garbag lucki situat program immedi end segfault bad scenario data corrupt error detect protect that? complet sourc,0.13119533527696792,45,c linux posix signals,make posix/linux signal handl safe,6,signing|safe|protect|availability|scripting|forge,0.510445237159729
gener signal handler flag make system call happen sever restrict iso c regard signal handler librari entri point api even remot 100% multi-thread-saf approxim 0.0% signal-handler-saf absolut prohibit call almost anyth signal handler particular ghashtabl api element even thread-saf none signal-handl safe actual iso-c allow signal handler modifi object declar coupl librari routin call us consid thread system intrins danger practic radioact sourc subtl bug good place start worri problem thread note signal handler much wors one think api safe there.,2012-04-23 04:45:01.837 UTC,209,10274902,got system level code fire timer everi signal handler manag signal arriv work fine seem complet reason two separ thread run alongsid main program share variabl glib async queue pass messag one direct code use glib store well key/valu pair signal code comment system hash tabl appear oper fine enabl howev strang race condit call actual return null mean entri key use look inde entri actual yes made sure print whole list key/valu pair occur time? glib hash tabl implement buggy? sometim lookup call success particular situat clarifi make sens hope someth wrong actual fix info code segment within signal handler scope access g_hash_tabl variabl surround signal block call signal handler access variabl process origin access,0.1339712918660287,28,c glib signals system thread-safety,glib hash tabl issu signal handl code,6,signing|thread-safe|safe|hash|race condition|danger,0.5088633298873901
get address ip within signal handler? defin signal handler directli access local variabl function implement larg enough accommod pointer valu without truncat creat file-scop variabl type cast assign variabl signal handler safe read variabl even accommod howev seem unlik whatev function mind chang memori permiss async signal safe cannot safe call signal handler case moot whether safe data signal handler uncertain whether alreadi need permiss yet confid suffici privileg obtain obtain front preemptively? one intend use three-argu signal handler field argument contain address inaccess memori word provok fault note field mean signal garbag instead point offend instruct fix permiss page contain return signal handler resum execut,2018-01-26 21:38:27.983 UTC,128,48469928,get address ip within signal handler? want abl chang permiss page signal keep fire,0.1484375,19,c,access address protect page within signal handler,4,protect|signing|safe|privilege,0.4930921792984009
minim sampl program use catch infinit recurs comment call flag signal handler abl run stack left program crash sophist actual perform jump signal handler back point infinit recurs avoid valid async-signal-unsaf librari call use data left unsafe/unrecover state perform pure arithmet comput valid perhap better task signal handler perform emerg dump valuable/crit data alreadi save disk difficult call async-signal-unsaf function usual possibl put effort,2011-04-26 03:57:31.543 UTC,85,5785746,"anyon know sigaltstack real signal handler program,a simpl complet code great help me!thank advanc",0.16470588235294117,14,c posix signals,sigaltstack signal handler program,4,signing|validate|unsafe|safe,0.4873035252094269
glibc function thread-saf man page say like thread safe variant document see exampl synopsi #includ reentrant thread-saf variant unfortun man page make habit state function thread safe mention thread-safeti issu function give pointer share resourc becom thread-unsaf handl lock find list chapter http://pubs.opengroup.org/onlinepubs/9699919799/functions/v2_chap02.html#tag_15_09_01 list function posix requir thread safe function requir thread safe posix includ standard c librari typic unix interfac full list http://pubs.opengroup.org/onlinepubs/9699919799/functions/contents.html memcpi specifi posix part list 2.9.1 therefor consid thread safe variou environ linux least tri implement posix best abil - function linux/glibc thread-saf even posix requir - though rare document functions/librari posix cover left author documented. tell posix equat thread safeti reentranc guarante intern data race howev respons possibl extern data race - protect call e.g memcpi memori updat concurr depend function take exampl gener thread safe copi data sourc destin privat singl thread write data read from/written anoth thread longer thread safe protect access,2013-11-14 09:57:40.937 UTC,204,19974548,definit answer whether use eglibc implement come ubuntu thread safe? - honestli realli find clear yes doc thread safe mean safe concurr whenev safe copi date byte byte concurr possibl least read-onli data copi region overlap ideal see someth list bottom page arm compil doc,0.11764705882352941,24,c glibc multithreading thread-safety,function c standard librari thread safe,5,thread-safe|safe|unsafe|authorise|protect,0.4773942530155182
"inher mean exist someth perman noth inheritance..bi default,or alreadi method thread safe...in order protect avoid multitask problems. vector,hash tabl ..are exampl class inher thread safe..nothing..confusing..ther functions..which thread safe default case singl thread abl provid write specif sourc specif destin thread-saf initi design inher mean without need tune base function achiev goal case thread safeti multipl thread interfer channel time end problem thread-safeti relat share chuck data inher thread safe function safe without take specif design decis regard thread thread safe simpli virtu task perform oppos redesign forc thread safeti say write simpl function inher thread safe read write share memori howev make function thread safe make thread safe specif design synchron say similar function thread safe entir possibl valu x chang well actual unlik realiti x cach let say optim howev make thread safe pseudo code real mutex complic howev inher thread safe forc redesign real exampl often far complic hope give idea taken simpl possibl level question pleas comment bellow context interpret without design achiev still thread-saf direct link concept inherit although cours word relat exampl inherit object-ori program sens cours function core natur get properti thread-saf cours noth magic inher thread-saf either function without intern state share side-effect function program function suppos pure lack side-effect lend well parallel program practic hard typic comput real work done without side-effect particularli i/o much defin side-effect even pure function languag often non-funct corner updat cours free side-effect core purpos manipul memori share thread certainli safe assumpt long destin area distinct matter one thread run parallel contrast e.g gener charact singl process output stream explicitli implement requir posix thread-saf wherea relat inherit inform express mean function thread-saf natur exampl function touch share values/st thread safe anyway i.e inher thread-saf",2014-04-07 09:30:56.427 UTC,323,22908520,came across line function inher thread-saf exampl wikipedia defin thread-saf piec code thread-saf manipul share data structur manner guarante safe execut multipl thread time ok inher mean? relat inherit,0.1238390092879257,40,c java multithreading thread-safety,inher thread-saf mean,5,thread-safe|safe|protect|hash|signing,0.41471412777900696
say yes read incorrect valu assign atom thu byte int valu written other yet come within singl assign,2014-12-11 13:21:11.31 UTC,59,27423889,suppos function execut logger thread thread start / stop log logger thread set share variabl thread check logger log see singl statement assign return valu check loop need access protect lock,0.13559322033898305,8,c c++ multithreading pthreads,need protect singl assign statement threadsafeti,4,protect|signing|threadsafe|safe,0.38588443398475647
pari/gp sourc download use git examin sourc onlin link lll section http://pari.math.u-bordeaux.fr/cgi-bin/gitweb.cgi?p=pari.git;a=blob;f=src/basemath/lll.c#l504,2014-07-22 04:48:48.63 UTC,41,24879127,know pari/gp function perform lll algorithm base howev possibl look code pari/gp library? anyon know lll algorithm work pari/gp librari,0.024390243902439025,1,c c++ cryptography mathematical-lattices pari-gp,code lll algorithm pari/gp,1,crypt,0.3855034410953522
function linux crypto framework simpl theori linux crypto framework assum hw chip machin cryption / decrypt work aes des construct request hw chip chip work parallel cpu hw chip done request notifi cpu complet event usus irq irq handler well actual bottom half time execut callback function specifi request callback function encrypt / decrypt request real exampl suppos run ipsec protocol follow logic construct packet encrypt request callback function encrypt done pleas transmit packet submit encrypt request hw chip driver hw chip hw chip done encrypt packet hw chip driver run callback function transmit encrypt packet ======================================================================= ipsec use aead_givcrypt_set_callback ablkcipher_request_set_callback ablkciph mean block cipher aes standard asynchron run parralel cpu aead consid combin algorithm ablkciph + comput hash valu ipsec case hash valu packet crc add ipsec code fragment # $kernel/net/ipv4/esp4.c static int esp_outputstruct xfrm_state *x struct sk_buff *skb --- well much detail cover said undocu caus lot troubl us kernel header file header realli intend normal applic assumpt work kernel write devic driver read sourc better understand anyth suppos applic linux directori man page explain document includ function ask,2014-02-20 06:26:38.573 UTC,200,21899904,saw code code onlin hardli clear direct descript zero comment anyon give insight function,0.125,25,api c linux linux-kernel,ablkcipher_request_set_callback,8,cipher|scripting|crypt|aes|encrypt|ipsec|hash|crc,0.38258445262908936
abl disabl hook instal hook call hook correctli want make sure hook first hook go call order hook call seem document easi enough check trial error instal sever hook differ process see call first like case first hook instal first call easi option make sure instal hook soon possibl first hook call instal last one tricki make sure time last hook instal hackish creat thread everi second remov hook add solut far perfect consid order document conceiv chang point futur possibl hook invoc order complet random case solut much good,2011-10-10 23:11:46.463 UTC,118,7719693,process secur permiss disabl window load global window hook dlls?i want disabl setwindowshookex want disabl hook dll load process,0.025423728813559324,3,c c++ setwindowshookex winapi windows-security,prevent hook dll load,2,security|hack,0.37650108337402344
gener answer question api function differ method achiev result.1 api hook hook function system writeprocessmemori check somebodi tri chang someth process .2 debug debug breakpoint function memori chang,2012-01-05 16:53:07.013 UTC,106,8746360,studi window program question saw secur modul defend memori data.if one process go chang process memori detect turn process often use anti-cheat engin game bank applic programsi live korea think best exampl almost everi on-lin game bank applic self-def algorithm question api function detect this? thank p.s.i make exampl 0x01000000 memori data differ process chang b .when first thought thought make thread check data chang turn process.but think good idea suggest,0.018867924528301886,2,c security windows,detect memori data chang,1,security,0.368486613035202
safe share singl x509_store multipl thread verifi certificate? yes string attach yes openssl provid lock store howev string attach need manual instal lock non-trivi see openssl thread-safe? openssl faq threads3 man page openssl thread-safety-callback-funct registr direct call indirect call stack overflow,2016-11-01 22:43:51.097 UTC,118,40369759,case want connect accept serv network thread deleg certif check anoth thread even thread pool ca certif check store singl basic certif receiv client creat new initi singl say global feed worker thread check routin call question kind thread-shar need extern lock provid application? particularli worri take non-const pointer probabl function modifi refer counter insid store thread-saf provid lock callback initi librari non-const access store right,0.15254237288135594,18,c multithreading openssl,safe share singl x509_store multipl thread verifi certif,5,openssl|safe|certificate|delegation|thread-safe,0.358643114566803
thread-saf quot found simpli state implement requir make function thread-saf therefor call simultan multipl thread bad thing happen respond old post let know freebsd head read 12.0 provid copi thread-saf enjoy! freebsd man page,2013-12-12 14:49:40.807 UTC,81,20546643,read bug http://www.freebsd.org/cgi/man.cgi?query=crypt&amp;sektion=3 scare lock time call sourc http://pubs.opengroup.org/onlinepubs/009695399/functions/crypt.html read crypt function need reentrant function requir reentrant requir thread-saf sound plausibl mean gener reproduc hash anoth thread put valu flow belong together? true function need thread safe work correctli,0.14814814814814814,12,c crypt freebsd multithreading,freebsd c crypt threadsaf,5,crypt|threadsafe|thread-safe|hash|safe,0.34581273794174194
code sampl clear thread relat other? place epoll_wait show normal argument typic singl thread call epoll_wait servic multipl fd howev multipl thread epoll_wait refer back hash tabl like hash need mt-protect,2013-04-02 01:19:27.853 UTC,89,15754582,mutli thread applic worker thread use hash tabl rout messag two opend sdsocket descriptor thread wait epoll_wait new connect new sd creat ad hash start rout messg ok remov hash mutex lock? assumpt correct? reason think becuas remov hash safe new sd # sd # save hash unless close closesd,0.12359550561797752,11,c epoll linux multithreading,epol hash tabl thread,4,hash|scripting|safe|protect,0.3409562408924103
secur mean better protect buffer overrun must one counter maintain implement use ident code base secur non-secur function theoret secur version must slower maintain one addit counter howev cpu usag thereto neglig compar complex base function word bother even measur suffix i.e bound check function specifi behav non-check version except addit requir perform addit check runtim guarante precondit met non-check version instead free assum check alreadi made usual someth take time one expect possibl implement non-check version effici check version howev differ insignific nonexist exampl implement chosen perform check non-check version - forbidden standard cours case addit inform pass check function non-check function necessarili preform check check function requir p.s bound check function introduc tr 24731-1 document option part c standard librari sinc c11 tag question c++ probabl need know part c++ standard - even option standard make requir rel speed function mention intrins reason measur differ suffix version plain one answer alway depend implement,2016-12-07 12:14:41.03 UTC,186,41017227,exampl swprintf vs swprintf_ wcstomb vs wcstombs_ faster/slow ? give inform beleav faster someth secur must kind trade-off,0.053763440860215055,10,c c++11 function security string,secur function c faster unsecur one vice versa,3,security|protect|signing,0.2946867346763611
ssl_set_fd ssl_get_fd let set/retriev file descriptor avoid bio still need ssl_read/ssl_writ instead read/writ implement sockets.h interfac requir easili go fd ssl object non-trivi wrapper come openssl highli doubt third-parti wrapper exist either,2011-10-24 15:50:29.363 UTC,96,7878327,deal larg custom network app written c++ linux use sockets.h --- code involv pass around filesocket descriptor use struct set socket option etc etc rather rewrit wonder anyth avail use function prototyp socket.h use openssl protect comm channel obvious one still need thing key verifi locat etc great avoid chang everyth bio whatever. thank,0.14583333333333334,14,c c++ openssl sockets ssl,openssl wrapper mimic socket.h c,5,openssl|ssl|scripting|availability|protect,0.2884633541107178
array huge typic l1 cach least 10s kb total memori say appl ii move array header function go chang cach local store appropri form comment make sens go fit l1 cach data perhap use anoth thread chanc stay - need 2 byte per valu idea introduc extra cost compar use nativ size int realli critic look code gener optim first make sure declar array compil know never chang second oli charlesworth suggest comment realli need full store valu element array 7-bit 9-bit unsign integ either enough either want benchmark whether differ use sign unsign type although realli expect final realli want rid array entir possibl implement kasumi s-box directli without lookup tabl use bit oper specif xor detail see page 13&ndash;16 kasumi specif howev strongli suspect use softwar implement unless use bit-slic encrypt mani block parallel,2013-11-28 11:24:07.977 UTC,177,20264862,tri optim algorithm written c.there s-box use encrypt data repres array huge encrypt access array frequently.on optim done move array header file local function cach miss happen suggest optim either chang array data structur,0.04519774011299435,8,c cryptography lookup-tables,optim kasumi cipher s-box,4,crypt|cipher|encrypt|signing,0.24465133249759674
