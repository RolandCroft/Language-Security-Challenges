postid,links,tags,title,question,answers,uniq,raw,words,len,ratio,probability
14,https://api.github.com/repos/multiformats/multihash/issues/14,issue,first byte use repres encod settl base bitcoin multihash,probabl go mani differ encod howev consid first byte shown ascii char repres encod e g etc exampl page chang multihash truli self describ instead settl appear de facto base encod elimin need e paramet hashpip program work look current gener multihash exist possibl implement backward compat clever charact chosen differ encod intersect possibl number wild e g hex sha q etc multihash mean case either encod put multihash differ encod probabl ought drop altogeth avoid confus univers scheme mayb superset multihash call unihash multihash use hash name realli contain multipl hash someth quit support easili,realli idea gener thank post realli want someth figur make work ship standard without constraint want fill encod charact fine encod mean say bit use defin hex print valid hex hard thing found explor much failur case agre alphabet base equal extend lot encod though admittedli mayb focus number base probabl best emerg handl serial encod probabl fine base multihash truli self describ instead settl appear de facto base encod elimin need e paramet hashpip program yes huge win work look current gener multihash exist possibl implement backward compat clever charact chosen differ encod intersect possibl number wild e g hex sha q etc yeah realli want chang backward compat standard ipf node definit handl multihash without encod byte ensur link break suggest think incompat requir encod print encod encod current use actual multihash right think think base bitcoin mayb hex well base bitcoin almost size compress benefit someth base say mayb hex think encod drop left futur engin challeng avoid overengin overal realli matter multihash resili digest fall favor accomplish quit well encod space limit hex base bitcoin practic current multihash current exist base bitcoin defin hex base bit byte current use encod function bit toggl hex base say hex start charact base current emit first byte given digest current hope byte one f f think think base bitcoin mayb hex well base bitcoin almost size compress benefit someth base base pain expens math default base cannot made copi pastabl easili need alphanum ascii thought use charact alphanum utf accent someth make hard type realli find good support standard base somewhat tricki oh thought base base use utf char benefit super screen compress copi pastabl string even realli ineffici true bit size mayb thought implement base safe use dns use cjdn nice support critic though base problemat clear agreement want suppos much idea think scope multihash realli multihash fear ad encod ad much thing idea multihash alway binari string hash digest digest differ way encod transmit differ encod specif transmit binari protocol want includ binari want pars base textual format pass around path url want textual format format depend url path prefix specifi absolut want binari string give multipl text represent path case hash path compon must decod path normal standard encod want compar path case want encod path binari exampl ipf spec detect hash length know stop pars hash howev idea user interfac perspect protocol lower layer support base alreadi nice one encod lowercas uppercas problem hexadecim perhap instead make part multihash separ layer use user face code lower level someth multicodec except byte header instead idea multihash alway binari string hash digest digest differ way encod transmit much agre hear ad multihash want make sure correctli alway binari rep space matter disk wire base human ui matter copi past base base dns filesystem char limit case speed matter mayb realli companion spec multicodec small specif base dare say multibas multicodec base make section multihash spec describ case link whatev defin thing perhap instead make part multihash separ layer use user face code lower level someth multicodec except byte header instead oh perfect wrote read post think total right like best go think encourag peopl store transfer display multihash along thing multibas multicodec base idea fulli self describ encod attract analog hash function output alway fix length binari string compel suspect desir self describ format partial due observ often term multihash without specifi encod requir exampl within field document multihash target object believ fact must binari encod within api document mani argument describ multihash specifi requir base encod file hex encod multihash place hex encod find weak argument probabl agre truth hard figur exactli kind multihash context summari guess idea formal defin multihash function produc binari string idea make clearer encod use either make encod self describ clear via document multihash valu canon binari encod agnost encod alway part multihash use protocol standard ipf url alway go includ bitcoin alphabet b multihash specifi ipf url spec multihash spec fenc fact idea encod part hash descript somewhat attract thank help make mind argument one quibbl base alreadi nice one encod lowercas uppercas problem hexadecim least three differ alphabet base bitcoin flickr rippl plu comment ipf document often use multihash without specifi encod give good reason decid multihash protocol encod agnost b rest ipf standardis bitcoin alphabet use b state explicitli everi time base mention document c ipf document specifi encod whether b hex binari whatev everytim multihash part specif respond later want remind alreadi face multipl encod binari base hex ipf store file disk repo use hex encod multihash file system case sensit cannot base b hex faster encod base base base least encod hundr thousand hash slow thing place opt raw binari hash instead string tight loop encod mani hash slow ipf dramat much easier reason thing encod alway specifi left spec satisfi e specifi band vs band agre necessarili part multihash spec think use ipf prefer right encod job without caus major confus prefix fri jan javier candeira notif multihash valu canon binari encod agnost encod alway part multihash use protocol standard ipf url alway go includ bitcoin alphabet b multihash specifi ipf url spec multihash spec fenc fact idea encod part hash descript somewhat attract thank help make mind argument one quibbl base alreadi nice one encod lowercas uppercas problem hexadecim least three differ alphabet base bitcoin flickr rippl plu comment ipf document often use multihash without specifi encod give good reason decid multihash protocol encod agnost b rest ipf standardis bitcoin alphabet use b state explicitli everi time base mention document c ipf document specifi encod whether b hex binari whatev everytim multihash part specif repli email directli view github still think becom multiformat multibas,7,123,encode|hash|sha|validate|safe|decode|scripting,1056,0.11647727272727272,0.9098604917526245
16,https://api.github.com/repos/multiformats/multihash/issues/16,issue,rfc digest size hash function output handl,multihash implement handl call digest longer specifi output hash function e g pseudocod convers follow multihash valid hex encod space ad legibl code field declar hash function sha x length field declar digest byte long receiv digest field byte long howev sha produc byte digest multihash librari call encod decod input signal error stop encod decod b length field len digest continu process c truncat digest field continu process behaviour current unspecifi e implement whatev want afaict go multihash b propos requir behaviour standard conform implement think miss specif document prefer sent mail list e g ipf user,thank great bug catch think probabl error though defin extra byte alway zero compar sha sha length someth defin extra byte alway zero compar sha sha length someth follow case compar digest two differ algorithm oh exampl kademlia dht xor distanc digest kademlia dht xor distanc digest nich otherwis case realli multihash encod digest directli dht given bias occur first two byte worri pad byte introduc lead vulner error base fals sens secur much prefer behaviour e abort signal error conform behaviour leastt strongli encourag default behaviour pad allow standard explicit choic pass flag invok instead nich otherwis case uncommon im sure either yet hear error creat mislead level bit secur like right answer return error lenght lenght digest algorithm comput sum util function call go multihash implement pack digest multihash valu pad handl applic requir comparison hash differ lenght inde pad need instanc kademlia implement decid rehash multihash order uniform hash length key comput distanc pad hash instead zero add entropi avoid cluster shorter hash etc anoth option actual produc mani byte hash exampl byte bit sha hash foobar blob case foobar useless instanc kademlia xor comparison look content correspond sha multihash origin exampl understand correctli mean say pad multihash done applic receiv multihash oper multihash absenc correspond blob sorri clearer earlier well usual one end hash find alway gener someon data time hash use dht hash data structur dag file need found well sure case preclud thing mention sure thing mention use case feel fool argu go put pin mayb need understand better use discuss cc feedback honestli need variabl length output longer hash fundament want hash want kdf nov basic attempt construct kdf scratch strongli recommend recogn sensibl option multihash collaps hkdf hmac base key deriv function effici one pass ikm support context salt paramet produc arbitrari length instanti hash addit consid essenti multihash includ target length input kdf reason without attack silent truncat multihash order permit incorrect data pass undetect even strict minumum hash length necessari order prevent attack cut realli short bruteforc honestli anyth part multihash syntax thu band includ calcul hkdf part context avoid truncat attack algorithm substitut attack etc anoth benefit use hkdf use stage api one call two function extract ikm salt prk extract fix size pseudorandom key variabl size input key materi salt expand prk context okm expand prk arbitrari length output key materi bound specif context allow expens part hash data done cheap part gener rel short output reus result describ follow constraint current multihash remain valid function defin bit default function dont defin bit well defin hkdf sound given think add length input avoid silent truncat btw silent truncat still run expect length valu attack modifi expect length valu truncat modifi hash digest sure practic attack depend abl modifi one byte make len tini instead mani replac whole digest attack chosen one mayb trttd defin differ function multihash hkdf give multihash code given secur multihash function construct hkdf function emb multihash code sub function use digest exampl origin question digest size hash function output handl look error mayb trttd defin differ function multihash hkdf agre assess howev recommend use expand output multihash valu specif suggest multihash valu prk inform underli multihash pass salt case requir specif length order deriv need dht use bit ids forth hash function output length explicitli known implement anyth case see fix given inform say either multihash must fill digest length byte exceed hash function output length byte add explicit warn make multihash illeg definit explicitli allow kind valu addit byte add explicit warn,11,83,hash|validate|encode|sha|decode|signing|vulnerability|security|hmac|salt|attack,695,0.11942446043165468,0.8558183908462524
2308,https://api.github.com/repos/quicwg/base-drafts/issues/2308,issue,handl coalesc packet decrypt error creat dos opportun,spec say exampl decrypt fail key avail reason receiv either discard buffer packet later process must attempt process remain packet make sens continu process key avail howev key avail decrypt fail mean peer sent invalid packet deal path attack anyth anyway seem equal valid stop process datagram case sinc possibl coalesc quic packet singl byte datagram attack caus peer attempt aead oper singl datagram,howev key avail decrypt fail mean peer sent invalid packet deal path attack anyth anyway decrypt failur happen packet get corrupt transmit consid coalesc packet sent client contain initi ack serverhello handshak packet assum prefer process handshak packet even initi corrupt sinc possibl coalesc quic packet singl byte datagram attack caus peer attempt aead oper singl datagram matter consid fact attack forc aead oper everi byte use short header packet type byte space byte aead tag decrypt failur happen packet get corrupt transmit assum rare treat whole datagram corrupt valid respons number though mayb ask share measur matter consid fact attack forc aead oper everi byte use short header packet type byte space byte aead tag assumpt send lot small packet expens send one larg packet payload size first udp ip overhead count second probabl importantli need singl syscal look number think mess calcul mani coalesc packet fit singl datagram sinc fail account aead tag bring number quic packet per datagram assumpt send lot small packet expens send one larg packet payload size first udp ip overhead count second probabl importantli need singl syscal true though still sure need talk specif attack exampl attack send packet success decrypt contain mani tini crypto frame byte assum process costli aead decrypt everi byte said state endpoint guarante progress even follow quic packet coalesc datagram discard due corrupt etc therefor disagre relax requir must true though still sure need talk specif attack suggest add languag attack suggest stop process datagram unprotect one quic packet fail although key avail encrypt level exampl attack send packet success decrypt contain mani tini crypto frame byte assum process costli aead decrypt everi byte understand process crypto frame expens implement assembl stream crypto stream data expens oper exampl attack send packet success decrypt contain mani tini crypto frame byte assum process costli aead decrypt everi byte understand process crypto frame expens implement assembl stream crypto stream data expens oper everi byte crypto frame contain octet data need decod varint length offset field check newli receiv data write buffer data new call tls stack caus tls stack see entir handshak messag avail turn true tls stack buffer data transport layer remov newli receiv data transport level buffer assumpt amount process heavyweight run two aes oper one gcm oper per everi byte base think need statement specifi handl tini crypto frame similar type attack e g packet payload contain mani ack frame goe specifi handl tini quic packet experi decrypt failur extraordinarili rare suffici worth worri optim case one quic packet decrypt anoth talk kista use coalesc packet pmtu probe e coalesc short long header packet decrypt contain server connect id short header packet actual payload udp datagram deliv long header packet discard short header packet ack udp datagram run mtu problem respons icmp contain server connect id rout correct backend discuss tokyo make pr prohibit sender coalesc packet differ encrypt level permit requir receiv enforc constraint permit requir receiv enforc constraint fine long violat dos connect sinc middl box add random data udp datagram good point think idea connect error permiss multipl packet encrypt level success authent endpoint otherwis permit drop extra packet note drop extra packet without check decrypt prohibit sender coalesc packet differ encrypt level go prevent man side record packet differ encrypt level send coalesc packet decrypt want kill connect believ meant prohibit sender coalesc packet differ encrypt level correct yes point made reconsid think rule need sender must coalesc packet encrypt level need basic op requir b receiv must discard packet packet encrypt level receiv datagram unfortun attack complet control coalesc realiz dovetail nice requir alreadi ad requir exactli one retri version negoti respons packet sender must coalesc packet encrypt level need basic op requir b receiv must discard packet packet encrypt level receiv datagram think b agre interim understand concern use attack vector peopl care includ attract way enforc server calcul good compromis understand concern use attack vector peopl care includ attract way enforc server calcul concern calcul concern disconnect either due chang attack due random error packet bit worri hear suggest disabl coalesc differ encrypt level initi ch rtt fairli common use initi sh handshak initi ack handshak ack handshak finish rtt yes see attack christma tree packet contain mani coalesc segment mitig obviou implement free drop packet whatev reason rare case fals posit funni coalesc packet fact attack peer resend time rare case fals posit funni coalesc packet fact attack peer resend time resend christma tree exampl probe sourc cid think issu warrant chang protocol specif want document potenti attack secur section suggest mitig imho one mani way client nasti server vice versa mani exampl ack packet one one send multipl byte stream frame randomli altern multipl stream etc gener pattern find oper expens particular server implement abus possibl document way point hard defin valid abus filter without risk abl connect client send well intend ill conceiv christmass tree packet alway troubl think difficulti implement free drop packet whatev reason rare case fals posit funni coalesc packet fact attack peer resend time iirc one concern regard approach see deadlock receiv drop key necessari process first packet within datagram decid drop entir datagram due abl process first packet sender simpli retransmit coalesc datagram start packet type previou datagram datagram get drop receiv therefor view benefici specifi minimum requir guarante connect make progress iirc prefer defin minimum number packet within singl datagram receiv process fine text right make implement complic sensibl sender never send datagram contain one packet encrypt level detect receiv side implement choic land case receiv drop key necessari process first packet within datagram imagin see corner case like transient state lead deadlock agre like deadlock think benefici specifi server drop coalesc packet perform issu disagr possibl endpoint one concern pmtu probe use coalesc packet note suffic someth endpoint coalesc packet risk peer process packet think need stronger rfc languag note sensibl implement adequ think person think suffici though understand alreadi rough consensu proceed see incorrect understand statu base understand wonder new inform make wg reconsid thank remind discuss tokyo arriv agreement consensu per read agreement among particip room gentli poke write pr bit skeptic idea use coalesc packet pmtu discoveri receiv handshak packet handshak finish probabl ignor key anymor cannot remov header protect packet protect packet treat decrypt error whatev coalesc like ignor understand goal coalesc find cid icmp payload seem somewhat brittl pars icmp base tupl much robust requir play game packet coalesc bit bias rather complet ignor icmp packet reli end end ack remov need find portabl obtain icmp messag socket api prevent attack icmp spoof receiv handshak packet handshak finish probabl ignor key anymor cannot remov header protect packet protect packet treat decrypt error whatev coalesc like ignor point draft say quot section decrypt fail key avail reason receiv either discard buffer packet later process must attempt process remain packet understand goal coalesc find cid icmp payload seem somewhat brittl pars icmp base tupl much robust requir play game packet coalesc agre endpoint reli tupl whenev possibl howev stateless load balanc use cid becom identifi rout packet mechan text quot realli wish quic coalesc kind semant avoid roundtrip coalesc pmtu discoveri reduc number small datagram use reduc network bandwidth cpu cost especi short connect kind analysi possibl attack weigh christma tree coalesc packet vs receiv coalesc packet separ coalesc make send packet cheaper sender make equal cheaper server receiv view packet coalesc neutral effect attack resili protocol one actual say slightli benefici network link sinc reduc bandwidth requir send packet separ yeah meant reduc udp packet count roundtrip discuss london still make pr prohibit sender coalesc packet differ encrypt level permit requir receiv enforc constraint clarifi london sender packet cannot coalesc multipl packet type receiv multipl packet type datagram oblig process,16,98,crypt|availability|validate|attack|protect|encrypt|decode|tls|transport|aes|violate|authentication|attack vector|security|deadlock|spoof,1366,0.07174231332357248,0.8412933945655823
1575,https://api.github.com/repos/quicwg/base-drafts/issues/1575,issue,consid simplifi packet number encrypt,current pne encrypt variabl length packet number least two way implement decrypt decrypt first byte place comput pn length decrypt remain byte place decrypt max pn length byte separ buffer comput pn length copi amount byte back downsid wors perform caus time attack simpler alway encrypt max length alway decrypt byte place apolog discuss abl find,send short messag ping risk overlap aead tag start interest figur decrypt packet number sure understand elabor decrypt four byte flow tag problem think pure editori draft actual describ process decrypt point consider suggest recommend specif method think option fine sorri meant chang amount encrypt alway encrypt four byte instead pn think understand comment encrypt sampl hard time decrypt reason reduc size sampl short packet see realli reduc sampl size valu strength encrypt either necessari agre necessari wonder propos make implement simpler safer propos alway encrypt four byte pn offset pn offset alway sampl start pn offset sampl overflow payload tag happen bit aes pn len payload len pad sampl zero worst case scenario sampl contain two byte zero still bit secret key unaccept say unaccept lower birthday bound discuss nyc follow within two week prefer current approach iiuc propos condit branch test sum pn length payload octet creat zero pad copi sampl think simpler current approach use condit branch determin sampl offset convers yesterday wonder follow propos us best world requir quic packet must verifi pad payload need alway pne encrypt byte start packet number follow byte nonc practic pad overhead low impact small number frame type sent without ack frame wors case scenario lone ping frame packet number case suffer byte pad byte ipv packet nice properti obfusc packet number length observ longer tell packet number term implement simplest decrypt pad ad right encrypt payload code need access packet number nonc anyway peopl thought sound good stipul packet must alway contain least octet frame ad coupl pad octet probabl good idea note probabl chang encod packet number yeah sorri precis sure whether mean alway xor octet mean xor encrypt payload packet number whether xor octet packet number propos move packet number length first octet probabl better xor octet packet number touch payload octet sampl think requir octet frame restrict need prefer say quic packet must verifi implementor want alway ensur byte frame fine meant xor payload packet number length encrypt pn sure distinct pn payload relev noth wrong chang start payload mind simplifi implement put hold land pn encod look think requir octet frame restrict need prefer say quic packet must verifi implementor want alway ensur byte frame fine sound neat approach meant xor payload packet number length sure idea addit complex hardwar decod current design payload decrypt aead cipher chang mean decrypt twice first ctr cipher aead cipher point discuss new york move pn length bit first octet assum adopt chang think reason prefer alway ctr decrypt octet differ differ order pick specifi length appli ctr someon pleas point issu pr pn length bit chang propos new york exist minut link slide avail,12,39,encrypt|crypt|attack|safe|aes|nonce|obfuscate|encode|decode|signing|cipher|availability,508,0.07677165354330709,0.8137437701225281
1079,https://api.github.com/repos/quicwg/base-drafts/issues/1079,pr,packet number encrypt,littl rough think bone proud analysi secur hack think disclaim valu without seem throw unlink connect migrat bus know discuss remov short packet type favor put length encrypt separ keep size changeset someth manag close close close close close close close enabl,section receiv protect packet need updat part pr least failur unprotect packet necessarili indic exist protocol error peer attack truncat packet number encod use quic caus packet number decod incorrectli delay significantli longer hold suggest ad depth outlin receiv given packet section went exercis allevi mani concern complex approach statement still true note suggest monday mention variat design mail list thought better make note well packet number remov header aead protect content safe packet number iv aead last octet aead messag typic full tag aes encrypt use traffic key deriv purpos tag store need encrypt valu temporarili encrypt tag valu truncat length packet number packet number encrypt xor ing valu encrypt packet number append packet content aead tag lenght packet number must known fix length length store packet header variabl length last octet remaint unencrypt bit packet number use without tag tag use without packet number make sens store togeth typic singl cach line speak keep packet number length encod last fix length approach avoid modif aead packet content therefor decod without modif good hardwar offload cach synchron friendli multi processor system approach consum space unencrypt packet number due linear depend packet number encrypt estim latenc ns current hardwar aes cannot take advantag parallel oper howev multipl queu packet possibl packet number decrypt effici feed aes pipelin multipl packet send result relev receiv thread without addit bus traffic caus buffer modif modif help cpu cach help hardwar want decrypt receiv data entir packet seen achiev move encrypt packet number aead content therefor packet header packet number first encrypt byte packet rather aead tag feed encrypt clean allow process start full packet seen addit octet checksum ad packet number packet number decrypt quickli reject random packet content addtion benefit pay addtion encrypt overhead dos reject note land retarget rebas onto master assum packet number variabl length pne scheme modifi attach pn end propos earlier follow extens handl length encod provid fast saniti check packet valid given cleartext pn bit word assum never encod length given bit number length store last octet packet encrypt pn remain bit use follow c std lib fast low qualiti prng int rand return holdrand holdrand l l x fff modifi algorithm pn checksum pn l l xfc pn len pn len length octet exact detail vari point singl fast bit multipl length packet number immedi decod tail octet packet number checksum verifi immedi decrypt packet number fail roughli bias chanc packet random content match pn checksum weed trial decrypt entir packet fast turn use fast packet filter even without full traffic key less sensit pn key note expos pn length contribut connect linkag sinc say someth connect data volum age note fast packet reject use time attack conclud whether packet number like valid must balanc dos risk ask clarifi placement pn propros modif simplifi dicuss mostli exclus refer place pn last sinc simpler softwar concern hw stream pleac first issu invari pn place anywher long includ neither authent data encrypt data specif place two today give take exclud pn aead keep roughli encrypt happen xor ing current propos decrypt happen without modifi packet buffer decrypt pn need verifi decrypt content seed iv place pn earli requir modfi packet buffer packet length discuss pr microsoft cedric fournet nick bank comment current propos point review pr lot ambigu regard whether packet number length encrypt current pr formula comput make sens packet number varint howev propos chang alter short packet header pn length indic last bit flag byte restrict one bit assumpt redefin length packet header think reason keep pn length public avoid fuzzi limit packet header content sourc side channel process packet pn decrypt particular consid point given packet number short packet byte encrypt without authent extrem vulner malleabl use xor mask encrypt ctr mode chacha keystream compound problem even adversari select flip bit interest low weight one find use side channel posit reader stream discuss pr comment concern implement try perform optim base decrypt pn without first first decrypt packet instanc implement chose decrypt packet decrypt sn ack threshold optim side channel extrem effici use recov pn think weak pn encrypt scheme allow implement fall trap use bit permut cipher rather aes ctr chacha make attack less effect cipher speck bit block well suit purpos much faster current design pn encrypt tri avoid open aead abstract use packet content encrypt cost brittl custom construct top ineffici need expand separ key non uniform use ctr block cipher stream cipher directli possibl much effici construct open aead box extend someth akin authent stream unreli encrypt data authent key encrypt packet header content straightforward extens aead insid aead construct cipher function use prf special valu domain comput mask e constant coeffici wegman carter shoup polynomi mac possibl refin domain prf gener packet number encrypt mask instanc aes gcm prf aes iv counter special counter valu use mac sinc packet much smaller byte possibl aes iv xff x disjoint prf gener packet number encrypt tag instanc aes iv xff header flag sampl work well purpos reason quic header flag byte includ determin length packet number implicitli authent note even hardwar implement aes gcm capabl comput comput extrem long plaintext block counter xff header flag sampl howev typic part interfac aead implement cryptograph argument justifi safeti extend construct mask wcs tag separ prf domain note will bake permut go back kazuho origin propos aes ecb pn place ekr wrote tue apr antoin delignat lavaud notificationswrot discuss pr microsoft cedric fournet nick bank comment current propos point review pr lot ambigu regard whether packet number length encrypt current pr formula comput sampl offset make sens packet number varint howev propos chang alter short packet header pn length indic last bit flag byte restrict one bit assumpt sampl offset redefin length packet header think reason keep pn length public avoid fuzzi limit packet header content sourc side channel process packet pn decrypt particular consid point given packet number short packet byte encrypt without authent extrem vulner malleabl use xor mask encrypt ctr mode chacha keystream compound problem even adversari select flip bit interest low weight one find use side channel posit reader stream discuss pr comment concern implement try perform optim base decrypt pn without first first decrypt packet instanc implement chose decrypt packet decrypt sn ack threshold optim side channel extrem effici use recov pn think weak pn encrypt scheme allow implement fall trap use bit permut cipher rather aes ctr chacha make attack less effect cipher speck bit block well suit purpos much faster note will bake permut go back kazuho origin propos aes ecb pn place sure understand cedric propos speck variant chang block cipher speck instead stream cipher aes ctr clearli use block cipher exactli length pn advantag term implement straight win malleabl still sinc permut affect low bit sequenc number still reason chanc decrypt random number result accept sequenc number risk goe stream cipher permut cipher current propos bake crypto agil use stream cipher content encrypt pn encrypt thu negoti time need specifi permut cipher associ content encrypt method aes ecb inde option use aes content chacha aes ecb propos effect hardwar acceler probabl even drastic current design sinc bit decrypt twice cedric concern implement try perform optim base decrypt pn without first first decrypt packet provid side channel extrem effici use recov pn describ optim standard defens denial servic attack filter implaus sequenc number avoid cpu cost decrypt forg packet sure trade mayb help recov pn exposur dos christian huitema given packet number short packet byte encrypt without authent extrem vulner malleabl use xor mask encrypt ctr mode chacha keystream compound problem even adversari select flip bit interest low weight one find use side channel posit reader stream discuss pr comment concern implement try perform optim base decrypt pn without first first decrypt packet instanc implement chose decrypt packet decrypt sn ack threshold good point person object forbid pn decrypt payload consid fact decrypt done multi core special cpu instruct much faster wire speed side note explicit nonc approach discuss imposs pn decrypt payload aes ecb propos effect hardwar acceler probabl even drastic current design sinc bit decrypt twice true though hard estim done hardwar exist today futur otoh posit side aes ecb approach compar short block cipher altern requir rekey everi n packet n number bit use express pn wire pm kazuho oku wrote otoh posit side aes ecb approach compar short block cipher altern requir rekey everi n packet n number bit use express pn wire yes aes ecb pn byte encrypt byte practic robust aes ctr pn byte encrypt byte use nonc robust advantag non malleabl downsid bit harder hardwar christian huitema agre propos use ecb improv term malleabl caveat mention agre belief requir process decrypt pn decrypt packet content follow without pn encrypt implement option discard packet without even decrypt base pn observ somewhat use slightli mitig brutal dos attack spam larg random packet random sourc address connect ids short enough brute forc ask implement alway perform larg aead decrypt packet content authent pn know cannot valid go unapp like smart implement bother check consid matter maintain pn confidenti flimsi best appar order packet essenti leak inform anyway prove formal statement secur pn encrypt go though concern doubt secur perform trade current pn encrypt propos high perform cost provid littl use secur outsid import multi path unlink scenario see two approach improv trade either improv effici secur pn encrypt extend aead construct provid step pn decrypt full packet authent follow option packet content decrypt use key oper weaker variant propos authent pn encrypt ad byte packet header discuss wiki page pn encrypt secur wors perform decid scenario worth protect unlink across differ connect id non cryptograph secur obfusc pn within connect id think possibl much better current gap system essenti deriv random offset connect id current quic secret use offset mask packet header pn believ winquic team plan submit propos along line comment pr suggest ad small bit checksum packet number ad variabl length field one alway add bit checksum strong proof provid fast dos reject without assum anyth valid packet number packet aead tag verifi includ pn encrypt scheme cost singl bit multipl mention go creat pr modifi exist packet number gap solut provid solut privaci linkabl problem separ solv greas ossif problem differ non cryptograph solut shuffl instanc either improv effici secur pn encrypt extend aead construct provid step pn decrypt full packet authent follow option packet content decrypt use key oper differ singl secret two secret seem even construct still easili decrypt pn without actual valid tag packet miss someth ps asid fact understand use secret solv pn without verif issu think good idea secret pn encrypt payload encrypt describ agre make pne hardwar friendli retain crypto agil far tell pn scheme try encrypt pn iv cannot secret short must permut secur encrypt requir repeat valu base longer key anyth shorter trivial brute forc question bruteforc suffici sinc middlewar time onlin pn verif believ either check entir aead packet add short checksum suggest short checksum reject dos attack quickli without access full traffic key case privaci contain short aead independ scheme easi crack least want encrypt pn iv therefor separ discuss privaci without encrypt shuffl pn verif believ either check entir aead packet add short checksum yeah far understand pne scheme without accompani checksum fragil side channel attack probabl receiv drop packet without decrypt payload proport valu decrypt pn field attack access side channel inform inform guess valu pn field bit pn fragil trivial brute forc regardless pne scheme use bit pn attack determin pn overflow period inject random packet observ probabl earli drop switch almost almost bit longer pn becom harder overflow attack vector howev still possibl probabl earli drop roughli estim pn suggest short checksum reject dos attack quickli without access full traffic key requir checksum checksum becom avail receiv time pn decrypt block cipher trivial meet requir say pn field encrypt construct seri zero octet pn receiv decrypt encrypt pn field checksum e alway seri zero octet becom avail moment pn decrypt sure construct avail stream cipher sure mean stream cipher pn context cannot next pn depend previou due packet loss possibl checksum see earlier comment pr essenti reason multipl shift sure mean stream cipher pn context cannot next pn depend previou due packet loss pn leak privaci concern need guarante pn checksum secur cryptograph sens use sever octet block cipher purpos explain secur sens probabl collis depend block cipher downsid use block cipher far none propos use block cipher provid crypto agil propos agil one propos pr howev reli stream cipher e aes ctr chacha issu stream cipher extrem fragil side channel attack point think sever way shuffl bit secur somewhat effici e g determin bit order use output stream cipher bmi instruct shuffl think easi enough us defin standard possibl checksum see earlier comment pr essenti reason multipl shift state checksum need cryptograph secur assum want prevent side channel attack think propos meet goal state checksum need cryptograph secur assum want prevent side channel attack think propos meet goal think need strong pn need segreg per path otherwis yes share concern mention similar concern comment howev side channel attack near imposs avoid degre need dos protect far understand pne scheme without accompani checksum fragil side channel attack probabl receiv drop packet without decrypt payload proport valu decrypt pn field attack access side channel inform inform guess valu pn field pr mandat receiv though conced easili turn must know short checksum look integr check integr aead,32,277,encrypt|crypt|security|hack|protect|attack|encode|decode|signing|safe|aes|checksum|sanitise|validate|authentication|fuzz|vulnerability|adversarial|cipher|defense|forge|nonce|spam|confidential|leak|obfuscate|privacy|crack|inject|attack vector|availability|integrity,2295,0.12069716775599129,0.7998666167259216
823,https://api.github.com/repos/rust-lang/rfcs/issues/823,pr,rfc simplifi std hash,two altern propos pare back api ergnom consum,cc cc lot discuss well cc talk prepar rfc thank great writeup fwiw prefer altern approach particular think resolv almost ergonom complex worri leav program model unlik work io offer greatest potenti dos mitig flexibl hash algorithm particularli fact user data structur easili choos hash algorithm appli sinc best polici depend context default type paramet today provid believ best global default flexibl like help beyond question dos protect downsid implement hash cannot special forc oper gener hash algorithm provid altern api appli main propos gener downsid rel today say somewhat orthogon choic rest design pretti drastic effect simplifi code bound otoh love hear expert area whether global salt enough mitig dos attack otoh love hear expert area whether global salt enough mitig dos attack singl global seed cover recommend siphash applic defens hash flood propos hash tabl switch siphash hash function startup program read secret siphash key oper system cryptograph random number gener program use siphash hash tabl singl global seed cover recommend siphash paper awesom thank refer understand though need go altern rather detail design continu siphash siphash requir state prefer work byte orient style confirm thank weigh understand though need go altern rather detail design continu siphash hashmap siphash requir state prefer work byte orient style confirm depend littl think altern solut allow us siphash key default certainli move key gener per call lazili initi global variabl pretti easili go detail design section guarante standard type string randomli seed siphash instanc guarante data hash siphash realli see perf comparison design experi use altern approach creat hash c found work well even sampl add similar function c standard realli see perf comparison design tri ad benchmark gist number huge amount differ alreadi specif benchmark mind see compar even propos sampl implement add similar function c standard unawar thank link fyi look java work around dos issu turn hashmap bucket mani item balanc tree implement hash function java tend except weak although quit speedi goal ergonom speed seem main propos solid howev secur default goal seem propos make thing difficult key dose hashmap find differ valu hash bucket key defend make sure adversari order make sure adversari need introduc someth calcul hash guess exampl larg random seed affect input valu secur hash function key cryptographi properli well design peer review algorithm intend primari design describ involv calcul hash field combin function field calcul independ method function less stateless refer global variabl depend number element hash previous know hash function design work design fast ergonom unless someon find secur hash function design work mode see said provid dos protect thank clear writeup tend prefer altern definit time sway overli gener one question right bat state explicitli byte orient api today known perform hazard mani hash prefer consum region memori make sens method write slice primit type well confus number gist particular section tabl vs see modul sourc code revis look design fast ergonom unless someon find secur hash function design work mode see said provid dos protect clear think mitig suffici impress exampl least use randomli key siphash string buy us good bit siphash collis nullifi make sens method write slice primit type well agre nice mention well discuss problem today take actual byte add whole new array method write slice primit default method term write byte slice unfortun blowup method opinion hash sip vs hash u see modul sourc code oh sorri forgot updat code gist ad thing benchmark time gist updat benchmark absolut number want taken grain salt idea benchmark c number show rust x c implement believ howev look found perform pitfal fairli surmount honestli one addit method seem present gist probabl enough chunk data e g alway transmut desir oh case altern inde base method crux primit method take away benchmark simpl protocol faster tini amount data siphash inde perform much better big block data work imagin true altern protocol fast simpl protocol sip agre conclus unclear valuabl associ output type altern protocol seem make work gener code bit tediou simpl protocol without necessarili much gain gener eventu hashmap parameter hash size store bit bit hash known small read catastroph huge bit hashmap yield better cach space usag cours necessit associ type hasher one truncat uncondit bit hash secur hash function good directli produc bit insecur hash function catastroph e g hash function u ident function number hash fact go far argu bit default sinc need gigabyt size hashmap realli start run troubl good hash fn even us current wast bit dos attack notabl base small input altern protocol fast simpl protocol sip think depend algorithm implement sure alway case exampl altern protocol requir implement work increment abl feed data time api contract caus slowdown occasion exampl current implement siphash work increment fashion c implement increment oper entir block c version much faster although oper increment suspect least overhead handl increment state even optim implement agre conclus gener though yes believ conclus accur altern protocol vari quit bit speed howev depend hash exampl fast algorithm quit slow wherea siphash opposit unclear valuabl associ output type altern protocol seem make work gener code bit tediou simpl protocol without necessarili much gain gener think depend work hasher exampl want oper gener hasher produc type somewhat pain e g today function care output type howev ferri along usag pretti ergnom refer bad overal found far pain elect keep least amount gener oppos howev make decis output exampl cannot imagin case current produc scalar valu fit smaller suitabl exampl fact go far argu bit default interest think need research reason c chose output hash function see good rational alway use bit java contrast use said hashcod pretti ancient api bit even thing think bit alway use think default gigabyt tier hashmap need start think hard data structur tune opt bit mode trivial tweak especi import basic hashmap search time spent linear search array hash reduc element size half wonder cach effici although case averag search length short see real benefit think java made number mistak chose bit prematur cough array length cough qualifi evalu non standard hash scheme look scheme either say look ident someth peer review design purpos look someth new case scheme look fall nd categori current struct two field b hash struct defin let assum keep use siphash hash individu field propos hash struct propos becom believ mean creat fulli new hash function use standard part known secur guarante siphash ad new compon function definit function spell propos think need order evalu secur propos exampl let look potenti implement trivial case function alway return case method clearli resist dos attack slightli interest exampl xor two argument togeth secur sinc case alway b point function specifi way entir insecur think even expert abl evalu propos without concret propos specif function cours propos suggest either two definit suggest potenti definit boost function secur certainli know break let assum secur compress compress function basi mani cryptograph hash md sha sha famili use merkl damg rd potenti definit function faster compress function use hash howev definit cryptograph strong expect someth sha use someth similar instead sha defin much complex much slower compress function reason sha definit secur exactli proof someth think anoth thing consid everi cryptograph hash function know take length input account propos howev said qualifi say secur howev reason think someth new differ even siphash use hash string think secur proof siphash appli new construct realli know leav us claim protect dos attack use siphash current case due work around siphash think pretti reason say rust resist attack someth differ though know say without someon qualifi evalu scheme think period rotat global key run program valu key disclos hashmap poison point make new key start start lazili rekey still poison one sit around exploit simplest solut problem reboot app grab brand new key os gener come secur less complex better think sort harden attempt introduc respons real world problem needlessli ad complex often caus problem solv tl dr one global siphash key obtain os secur rng hashdo resist hashmap specif key userspac csprng one global key fine thank much comment quit illumin updat rfc switch detail design altern section rfc propos api similar today person think hit reason sweet spot flexibl usabl wonder said regard downsid hardcod think say impli must select arbitrarili number bit want hashtabl use hash selector seem true alway true sinc must hash select bucket much smaller list bucket debat question whether make hasher fn parametr trait want object type hashabl make hasher fn parametr certainli make harder least want object respect hasher hashtabl use pass object sinc think object safe seem aw slow sinc virtual call word data think realli someth altern design object hardcod hash fn return otoh made hasher trait parametr object type fulli particip hashtabl howev ergonom penalti cite seem pretti substanti much implement hasher trait one cannot fn parametr hashabl thing must rather parametr hashabl thing hash fn overal suspect rfc make right call want tradeoff fulli describ allud rfc import thing keep mind soft hard hash collis term make discuss soft collis occur two hash happen equal truncat bit hard collis occur two hash genuin equal note hard collis impli soft collis truncat method current design look ideal even soft collis everyth goe bucket everyon happi howev soft collis occur fast path search compar hard collis need compar key hard collis bit realli bit good hash function basic guarante occur element want access pattern look element contain howev hard collis access pattern look regardless contain wors cach simpli work eq call bad hash function provid hard collis guarante e g u hash truncat storag convert soft collis truncat hard collis catastroph cours slow mean grow never reliev collis pressur resolv soft collis everyth say make sens sure much matter practic particular truncat fit number bucket alreadi favor hash function place entropi low order bit assum seem aw favor said pure ergonom ground seem superior keep associ type mean take one weird type paramet rather separ take hasher hash size one trivial wrap hasher produc truncat hasher give user control concentr entropi design written discuss irc record one problem suggest without extend trait ad method actual allow underli implement made faster sinc call must still boil invoc primit method hm think actual lean toward suggest clarif point make first think ad trait improv perform quit bit today gener hash almost alway quit slow due one element time hash strategi allow slice pod data cast quit benefici term perform exampl translat one direct call instead n call right though make underli implement faster allow oper larger block data inde often faster bit piec one part nice howev translat hash call bring problem endian though today translat scalar littl endian call ensur constant hash across platform propos remov behavior instead allow cast pass similarli scalar type respect particular hash valu think ok say hash valu even use algorithm guarante precis within process cross machin think probabl fair say hash valu primit subject chang even use algorithm allow endian chang segu nice modifi someth nonstandard basic mean valu return hash slice guarante across process case type guarante within one process one particular type favor extens although confirm variou tweak semant first think ad trait improv perform quit bit confus irc last night propos add exampl translat one direct call instead n call bit confus perhap relat confus exactli call respect particular hash valu think ok say hash valu even use algorithm guarante precis within process given case outlin trait seem quit reason bit confus perhap relat confus exactli call implement deleg implement call slice case perform improv allud previous well end kinda weird seri indirect slice hash slice write idea allow implement special move implement implement trait kind went past head last week occur discuss conflat hash code hash java scheme hashcod method differ element produc hash hash want x hash x hash x bit hash x uncorrel bit hash give truncat properti want hash code need x hashcod x hashcod x hashcod x probabl hashcod hash code basic weak hash function hashmap hash one nice truncat properti work great bit integ hashcod x x map hash use theoret aggreg valu faster run siphash whole dataset weaker theoret need proper hash function see detail unfortun well vers actual realiti hash code work theoret perf gain realiz practic realiz perf guard dos attack caus collis hash code caus collis hash henc classic error care dos worth allow slice pod data cast u rememb talk faster mention fact abl treat one contigu chunk pad byte undefin valu problem propos scope rfc leav regardless interest standard librari export two type securehash fasthash securehash protect dos use industri standard techniqu random seed strong hash function fasthash provid fast insecur determinist hash bit awkward today provid sip secur random default nowher point want go fast determinist stuff crate io know mainten stori sure newtyp securehash defaulthash hashmap strictli default securehash full newtyp theoret let us chang default fasthash argu realli break chang secur perspect explicitli state default secur hashmap type declar hint user mayb want consid overrid default need secur warn overrid default potenti danger replac secur fast chang standard sign api use sha md technic valid unlik affect horribl catastroph case gone unnot ignor compat issu md complet broken absolut reason use need secur guarante want perform someth crc want fast cryptograph secur hash function blake b allow slice pod data cast u rememb talk faster mention fact abl treat one contigu chunk pad byte undefin valu problem propos primit guarante pad true gener convert one call reason implement though select whether possibl know pad alway requir block even primit interest standard librari export two type securehash fasthash plan expos type continu avail today move want perhap add think sort addit backward compat add futur long want remov exist type one benefit move method instead trait actual declar hash algorithm use implement detail thank everyon fantast discuss clear consensu basic thrust rfc detail ad perform optim later sinc involv default method decid merg rfc try bring line alpha possibl track ack sad miss overal agre discuss clear though accept design one mention detail mani peopl spoke like altern design believ comment made altern ad rfc benchmark treat non slice pod type possibl llvm optim away us cast type hash slice ident perform replac method yes detail design section current implement quit sure follow look benchmark though mean cast type said transmut pod type fix size slice exampl ah case think trough benchmark basic depend hash algorithm see whether llvm optim doubt howev overwrit abl optim well enough case need handl increment state possibl receiv byte want expos helper trait though suppos realli boil optim one particular hash algorithm one mind sure poke around hello anyth guarante behavior look clearli state implement behavior defin behavior good someon confirm nice relat rust hash hasher write result,21,261,hash|protect|signing|salt|attack|defense|crypt|security|adversarial|forge|insecure|sha|disclose|poisoning|exploit|safe|delegation|danger|validate|crc|availability,2479,0.10528438886647842,0.7688995599746704
1666,https://api.github.com/repos/rust-lang/rfcs/issues/1666,pr,extend hasher trait fn delimit support one shot hash,rich wip hash hasher updat faster common case make short string hash faster split hash hash end implement adapt hash use special,thank rfc expand rfc detail implement usag chang least person littl fuzzi detail benefit see concret instanc chang addit possibl prototyp chang take look perform benchmark well probabl convinc ensur chang merg quickli rfc concern current usag definit implement chang word rfc confus sinc mention usag introduc anoth rfc revisit tomorrow came order test outcom chang result better graph linear axi good sip core even need algorithm hash byte special form good old write finish probabl enough motiv talk one shot hash lot motiv seem follow addit help one shot case even rfc propos addit standard librari still help go explicit detail consum api benefit made updat hope motiv clear implement altern list rfc main goal rfc basic refactor noth benchmark sip fast enough purpos good question mean consum api specif see updat right give realist preview speedup unlock propos thank reviv need discuss drawback make possibl farmhash multi part thing either without drawback remain hash trait formul use stream byte hasher slice byte implicit protocol matter slice byte equival stream byte hash usual farmhash algorithm support either hasher togeth hash trait break rule hash trait bit lib team talk awhil ago conclus motiv seem sound littl confus affect standard librari right seem ad bit complex take advantag expand bit standard librari e g chang refer benchmark rfc text agre bit confus current form tri show anoth face improv edit better graph linear axi commit test modifi write usiz skip first delimit done write delimit give big improv small key cours appli hasher oneshot hasher benefit even finish involv littl work still mix possibl n part hash said yeah basic think good rfc encod perform win chang attack problem special reach one shot hash precis type support yeah basic think good rfc encod perform win chang hashmap exactli substanti chang rfc attack problem special reach one shot hash precis type support trait method default definit reach one shot hash hasher need use special possibl give advantag special trait type compat one shot hash exampl compound type contain str string yes plan make marker trait special code trait unfortun though lib team hesit consid merg clear detail follow work relat possibl rfc text expand plan pursu pr think onto someth hash usiz everi slice ridicul perform wise prevent write u xff string provid signific gain idea hash function offer special delimit input afaik common hash function offer delimit input one cannot provid use hash function exist api hide state allow delimit fake discuss hash recent rehash direct taken suggest hash built writer trait cannot fail perhap gener purpos writer trait associ error type ala whatev writer trait make sens protocol requir cross platform hash includ specifi endiann care around hash algorithm fail startup say argon cannot alloc enough memori possibl gigabyt mayb ignor afaik none fail oper though hasher input method cannot fail rule exist writer method crate byteord wider array hash output simpli return anoth associ type ala exampl almost cryptograph hash function probabl return sever differ mode differ sha shake mode return arbitrari byte stream mayb reader trait cannot fail pair base cryptographi commonli use hash function produc element ellipt curv mean big fix size struct rsa signatur sometim full domain hash mean integ mod rsa modulu return closur take addit argument vein one handl delimit trait provid function fact whose function mutabl borrow hash second delimit input mayb needlessli complex afaik common hash function offer delimit input one cannot provid use hash function exist api hide state allow delimit fake sure mean propos function implement default use alreadi exist writer method propos motiv seem orthogon even deal trait object avoid hash addit stuff need delimit creat use hash function exist writer method input craft fake delimit possibl invalid secur assumpt say nice idea support delimit cannot fake sinc afaik current hash function provid one anoth separ trait say stronger nice idea support delimit provabl cannot fake rel cryptograph assumpt even hash function cryptograph secur speed reason hash good perform know user cannot tweak launch attack base fake exactli hmac construct use two ish call siphash key protect properti siphash give desir secur yet modern cryptograph hash function sha much resist extens attack etc without use hmac mayb worth ask say siphash author djb et al delimit effici hmac donno hash function well conceiv ad cryptograph delimit siphash almost doubl speed hmac construct anyway want secur delimit right need compos two three invoc siphash hmac make anoth result see mean interest case never cross mind rust case take type account eras trivial easi creat collid hash stream differ valu exampl type use delimit xff byte ensur anoth valu produc byte stream type system ensur contain xff cannot fake case need contain fake contain matter come hash function collis resist cryptograph sens siphash collis resist provid crypograph protect key okay violat delimit tough probabl involv numer attack howev key compromis say run code embed devic init process etc creat hash collis done offlin cool tool interpret type type byte stream configur interpret secur delimit within type actual think mayb nice ordinari delimit exactli guy propos creat special type rekey outer siphash siphash valu contain want immun attack instead sound big perform win hash togeth multipl user control valu need cryptograph separ reread siphash paper better understand badli fail collis resist mayb specif assumpt make irrelev mayb protect key part offer collis resist condit user abl observ hash result collid easier hmac busi factori oppos build intern wrapper idea anyway think document clear delimit meant provid cryptograph protect mayb mention hmac use one want cryptograph assur need hash api capabl produc specif result say exist protocol requir hash seri hash length hash break trait need support case design use need hash api capabl produc specif result say exist protocol requir hash seri u hash length hash break yes incorrect current trait trait work type implement someth need secur problem use trait feed data cryptograph non cryptograph hash function go roughli recal true worri endian present manual unpack struct digest method mostli see digest construct one place easi enough manual newtyp endian convers favor address endian issu correctli within exist famili hash trait use cleanli across board rememb still hash tabl one write disk benefit fix endian issu anyth benefit memori hash tabl notic current alreadi hash length actual propos count improv implement noop disabl endian think easi solut wrap follow cannot use wrap hasher someth strang sign valu afaik none suppos one implement secur delimit suggest thread rather happi still wonder want pass richer inform associ constant ad default perhap updat ad implic exist use eg rfc text nice even say chang involv look variou block find via github search seem disagr use implement actual write new block data extend stream exact behavior specifi doc yet reli proper qualiti e g length pad string issu think exact thing rfc tri solv solv simpli specifi write new block data e implicit delimit natur thing consid rare need construct block stream fasion variabl length chunk furthermor perform advantag mean need left chunk complet enough commit state valu yet hurt perform lot extend stream version hash function x slower static version good point suppos need fine grain control block fill need specif hash function non gener enough build simpl wrapper handl left over anyway reread rfc associ discuss still clear addit method provid valu exampl implement farmhash incorrect even end hash last valu slice slice whole version exampl hasher help assess actual impact chang propos fundament inappropri one shot hash signatur simpli make sens rfc seem propos addit allow one shot hash support correctli support incorrectli faster trait exist use make chang appar noth standard librari abl take advantag person inclin fcp close cc less rigor hasher fnvhasher similar choos skip hash delimit margin notic improv fcp close team member propos close next step review rest tag team x x x x x x concern current list review reach consensu enter final comment period spot major issu rais point process pleas speak see info command tag team member give post benchmark upthread give speedup siphash back hashmap benchmark use short string skip first delimit hasher stay correct case multi part key apliabl hasher remain correct rfc text motiv focus entir one shot hash actual motiv chang chang made benchmark seem break third parti type implement case agre rfc motiv written sound appeal part defend singl line altern rfc think break call hasher remain understand right say better two api stream one shot hash instead one gener hasher api addit method agre former api messi latter add duplic code right thing chang rfc motiv focu speedup convinc benchmark think speedup matter real case import optim siphash adapt hash work without siphash time close rfc extra clear realli want see propos rfc merg defend differ pov avoid hash stuff thu perform gain cours pov allow non multi part ish type realli hash singl shot argu end motiv perform current trait implement non stream hash ex farmhash mix intermedi hash result good hash qualiti fast ping work reach resolut hasher fundament inappropri one shot hash signatur simpli make sens rfc seem propos addit allow one shot hash support correctli support incorrectli faster implement correctli mix intermedi hash still correct even qualiti wise optim fnv fx farmhash other make singl compon case optim hasher hash trait exist use hashmap hashset make chang appar noth standard librari abl take advantag hasher probabl take advantag ad requir fix str hash u later use length base delimit instead posit go merg think rfc text need updat reflect current thought motiv exampl rfc still incorrect still bit worri downstream breakag chang str impl see work fine probabl someth resolv without much pain come day talk specif opinion need alway return result fact rustc contain implement equal requir mind suppos pure return result sequenc call requir almost inject type compat input hash collis occur first differ function call exist call differ function differ length non stream hasher implement fnv biggest exampl crate io ping checkbox bell enter final comment period per review bell final comment period complet go close rfc time per commentari definit still interest motion area pleas ping take mantl,16,173,hash|fuzz|encode|attack|signing|crypt|sha|rsa|signature|validate|security|hmac|protect|authorise|violate|inject,1721,0.10052295177222545,0.7437465190887451
892,https://api.github.com/repos/quicwg/base-drafts/issues/892,issue,potenti prng attack via stateless reset,editor draft stateless reset state alreadi discuss follow stateless reset discuss close concern regardless concern unqualifi peer elicit stateless reset packet order entropi inform prng use gener random packet number prng use key materi prng fulli protect attack possibl guess futur key adversari suffici resourc place quic random number expos stateless reset particularli easi trigger high volum stateless reset easier trigger without attract unwant attent compar proper connect establish motiv behind ad random packet number,server first flight includ serverhello random valu easier elicit thu oct mikkelfj wrote editor draft stateless reset state stateless reset packet number field random valu alreadi discuss follow stateless reset discuss close concern regardless concern unqualifi peer elicit stateless reset packet order entropi inform prng use gener random packet number prng use key materi prng fulli protect attack possibl guess futur key adversari suffici resourc place quic random number expos stateless reset particularli easi trigger high volum stateless reset easier trigger without attract unwant attent compar proper connect establish motiv behind ad random packet number receiv subscrib thread repli email directli view github mute thread problem seem necessari difficult hide spuriou connect attempt send data nonexist connect random data strictli need avoid perhap need guidelin serverhello produc random via hkdf somewhat protect prng look hard implement anyway need random need indistinguish non reset bit torn beliv previous claim quic ought abl trust prng sure safe thing gener advic regard random expos separ csprng instanc one use gener privat key materi said believ much valu paranoia around safeguard bad prng prng reveal state result output seen worthi call cs method ensur happen pretti simpl implement note text requir cryptograph secur random mostli agre regard paranoia sure guess point reduc attack surfac without overengin e g paranoid offpath attack recommend implement stateless reset secret someth hash local secret connect id typic implement initi server n byte prng bad connect arriv comput hash connect id yes attack packet oracl guess local secret valu send bogu packet chosen id observ hash stateless reset break hash abl back secret big typic implement sha abl revers valu mean sha realli broken attack avail point revers hash find byte prng output unspecifi time past concern token assum hash properli random data expos intern state underli prng sometim crypto librari default os prng broken deliber flaw claim larg tabl exist attack prng good entropi exhaust better prng someth ctr mode encrypt deriv valu short entropi realli think quic concern fix prng still conserv approach exposur taken feasibl concern larg number random pad byte ok suggest practic algorithm reli much prng yet meet goal detect observ stateless reset aead encrypt includ connect id encrypt content pad connect id zero encrypt aead key packet deriv random valu instead use previous random connect id roughli good prng alreadi think aead packet consist significantli safer broader context cleartext aead handshak packet help protect againt prng attack except alreadi point one attempt creat lot connect altern connect id hash hmac use random key pad counter input byte examin client seem need specifi protocol go close one clear mani way random bit need obtain without expos state prng key gener implement safeguard implement fwiw care specif issu encourag pursu gener solut perhap revis rfc everyon benefit quic,14,41,attack|protect|adversarial|trust|safe|private key|crypt|security|hash|sha|availability|encrypt|signing|hmac,545,0.07522935779816514,0.7378407120704651
1030,https://api.github.com/repos/quicwg/base-drafts/issues/1030,issue,random packet number skip still relev opportunist ack protect,still need randomli skip packet number protect opportunist ack know handshak protect connect id encrypt consid protect earli connect close inject path attack predict linear packet number space asid infrequ connect migrat simplifi certain data strutur larg unexpect gap use receiv detect abus massiv failur transport first initi packet sent client contain random packet number subsequ packet contain packet number increment one see section transport sender intent skip packet number introduc entropi connect avoid opportunist acknowledg attack sender close connect unsent packet number acknowledg format ack frame effici express even long block miss packet allow larg unpredict gap,chang handshak chang anyth opportunist ack attack attack alway possibl unverifi connect migrat think main defens explicit path verif prefer remov gap entir mean chang linkabl defens want reason realiz comment week ago wrong optimist ack attack quic come two variant first traffic redirect attack third parti solv explicit path verif second resourc exhaust attack server client mount attack send optimist ack order server open congest window send data symmetr attack ack contain packet encrypt connect id attack must known connect id guess effect attack abl listen transmiss path verif improv handshak complet attack observ traffic spoof sourc client ack packet receiv server increas congest window connect flood network packet packet lost sinc client ack everyth none loss report thing client need take care attack ack packet actual sent yet unsent packet number sinc connect error hard sinc increas congest window predict point symmetr attack server client correct ok forgot part issu connect id protect path attack random gap protect malici client server seek trick peer believ bandwidth avail ack ing fast lead congest denial servic peer even without consum consider resourc attack endpoint directli work includ spin bit ack thu rid random gap cannot rid random skip least place constraint skip one random packet number everi insuffici skip one four current formul skip realli improv smaller skip smaller skip allow effici simpler data structur support trivial reject obvious incorrect packet number variabl length packet number keep packet number represent small optimist ack mitig suffici skip singl packet number see advantag skip packet number optimist ack attack one motiv reason entropi old gquic eventu agre intern interest attack look past work ask around made clear potenti vector present tcp well interest enough exploit note sender alway skip packet number test co ordin receiv need skip singl packet number import spec limit size jump otherwis implement must support arbitrarili larg jump implement support need ack frame encod arbitrarili larg gap special code think need situat two implement one use bitmap one use sort binari search much rather bitmap everi second packet jump packet number heck still handl arbitrarili larg gap plain packet loss right differ differ larg finit bitmap condens whereev gap fill map need cover packet flight handl randomli larg gap even larg loss bitmap still effici point connect unus due loss whether document transport draft skip packet number pretti viabl option implement want protect ok remov text relat defens believ still perfectli valid implement close connect packet number never sent acknowledg mikkelfj artifici limit implement like much larger want bdp worth packet anyway like still deal packet fall outsid bitmap given occasion case easier consid slow path implement handl separ case receiv packet fall outsid bitmap see implement someth complet without code oh absolut dumb bitmap larg gap assumpt one packet land packet follow shortli index exampl use second level binari tree use second level bitmap someth els given proper name cannot effici handl everi packet larg gap cours gener slow path need two complet effici implement everi packet still larg gap everi singl one fact close,13,41,protect|encrypt|inject|attack|transport|defense|spoof|forge|malicious|availability|exploit|encode|validate,616,0.06655844155844155,0.72465580701828
1651,https://api.github.com/repos/quicwg/base-drafts/issues/1651,issue,order crypto stream packet,interop test self test new crypto stream encod draft pr think order problem rtt packet contain eo messag lost quic server receiv client finish messag receiv eo submit messag tls exchang fail eo receiv server keep client finish messag memori submit eo receiv server realli know without insid knowledg tls state one goal new crypto stream design avoid requir knowledg cours one solut explain problem detail server know rtt negoti refrain submit epoch cs data epoch data receiv note work theori fin mark cs frame server realli know epoch data finish work practic server assum epoch data alway sent singl frame big wart stack anoth solut send eo epoch order natur anoth solut make sure offset cs frame comput begin session instead begin epoch client minim risk ensur eo finish alway transmit retransmit coalesc segment easi initi transmiss quit natur retransmiss sinc differ packet context differ timer sequenc number etc detail consid follow typic session exchang basic connect rtt connect rtt connect inconveni packet loss,consid error tls stack suppli epoch read key earli mean argu tls stack provid key process eo yes suppos help mayb worth write appendix quic tls draft sat aug pm christian huitema notificationswrot yes suppos help mayb worth write appendix quic tls draft time happen imagin server send sfin nst reorder gener fix implement maintain singl read level tls stack given time spec tri tell given time tls stack endpoint current send encrypt level receiv encrypt level encrypt level associ differ flow byte reliabl transmit peer crypto frame tls provid handshak octet sent append current flow packet includ crypto frame protect use key correspond encrypt level endpoint receiv quic packet contain crypto frame network proce follow packet tls receiv encrypt level sequenc data input flow usual stream frame offset use find proper locat data sequenc result process new data avail deliv tls order packet previous instal encrypt level must contain data extend past end previous receiv data flow implement must treat violat requir connect error type protocol violat packet new encrypt level save later process tls tls move receiv encrypt level save data provid provid data new encrypt level tls data previou encrypt level tls consum must treat connect error type protocol violat note matter key rather prepar pass tls stack mayb text clear enough though ekr think text mix two issu receiv packet deliv tls stack implement attempt made two mistak initi thought offset cs frame comput stream offset e continu initi finish realiz independ offset start zero epoch made mistak deliv packet stack soon receiv think seri concept need specifi spec separ exchang seri epoch encrypt key spec explain well map messag cs frame comput offset within epoch current left unsaid ensur tls packet deliv right order tls stack find current text bit ters inde got wrong initi see chat propos enforc deliveri sequenc tls refrain provid epoch decrypt key tls stack readi absorb input epoch event indic quic stack previou epoch finish data expect arriv new data treat protocol violat debat whether overload provis decrypt key right mechan pass key soon avail allow stack receiv acknowledg packet immedi effici long data deliv tls right order clearli need mechan tls stack signal epoch consid close think spec least present issu issu provid epoch handshak decrypt key epoch data receiv suppos server flight long need carri sever packet client need send acknowledg mayb challeng respons server quic stack need process acknowledg access epoch decrypt key yet client normal send eo server flight receiv think overload decrypt key provis mean end previou epoch work well agre let retract previou comment client expect acknowledg server epoch packet span across multipl rts certif huge send eo epoch receiv server entir epoch packet fact turn mean server need activ epoch read key receiv eo server need activ epoch read key receiv eo problem case server accept rtt send handshak messag epoch find send datagram huge certif point read epoch tls stack continu get eo client send got entireti server handshak yet handshak deadlock fix make epoch key avail quic retain constraint epoch use data pass tls tls handshak clear transit point key avail mean key readi use make want reconsid patch nss let ekr convinc two transit coupl fix simpl enough refus accept epoch data epoch done annoy make want reconsid patch nss let ekr convinc two transit coupl fix simpl enough refus accept epoch data epoch done annoy situat picotl think three option expos current read epoch tls stack let quic stack buffer handshak messag higher epoch think suggest approach tls draft point draft state packet new encrypt level save later process tls tls move receiv encrypt level save data provid approach simpl tls stack side complex quic stack viewpoint b let tls stack buffer handshak messag receiv eo approach simpl quic stack viewpoint requir new buffer layer c tls stack manag receipt eo use separ flag tls stack substitut eo process handshak messag arriv delay chang state deliv quic stack actual receiv eo approach simpl quic stack viewpoint requir addit buffer howev logic tls stack complex nss best plan seem let quic stack feed data tls stack start data oldest separ call data differ epoch allow tls reject data epoch quic hold onto time quic data epoch start earliest unconsum data feed tls trick three return code got thank sorri readi yet explod mayb think much imo restrict approach work well quic stack provid peek api access crypto data receiv buffer without peek api quic stack requir introduc new buffer store data reject readi tls stack think need specifi specif far implement go minq alreadi buffer data option straightforward need send key soon readi rather instal separ instal call sure agre martin assess best nss think issu spec say need updat draft though think benefici discuss api tls stack provid one style api design lead less confus handshak deadlock server receiv ack handshak packet let egress complet handshak sender handshak decrypt key cannot data cannot pn handl ack given sever us start implement made wrong assumpt one think spec add clarif yes local implement issu want standard detail api quic tls appendix implement make sens alreadi fair bit text thread quick question actual necessari reset crypto stream offset packet number space chang guess solv problem argu imo better explicit design least quic layer folk argu feel agre make harder valid thing receiv correct tls epoch tls layer alreadi stack singl stream small translat layer add subtract offset whenev send receiv packet work realli well compact simpl layer quic layer quic tls interact realli complic imo thank current review transport draft found logic weird crypto stream reset data stream oversight design current go say data stream reset exist one packet number space howev rtt rtt separ encrypt context packet number space crypto offset reset two bit unintuit mike agre unintuit understand separ one thing sent crypto frame rtt end earli data sent rtt reason rememb believ relat crypo theori proof unlik everyth els rtt retransmit rtt key odd transport perspect nice fix told infeas last time ask yes counter intuit rtt packet appear lost crypto frame insid resent new rtt packet stream frame resent data packet rtt packet acknowledg rtt packet mean consid lost handshak complet server chanc send ack hand exchang cannot complet eo messag lost rtt packet contain crypto shall consid lost acknowledg time whole thing ugli big wart see issu,13,103,crypt|encode|tls|signing|encrypt|protect|availability|violate|certificate|deadlock|nss|validate|transport,1231,0.08367181153533712,0.7101991772651672
13,https://api.github.com/repos/multiformats/multihash/issues/13,issue,add ident hash function,sometim valu hash smaller cryptograph hash digest merit actual store data hash valu exampl case multihash ed bit pub key implement add code ident hash function add sha pro store ecc pub key easier project multihash ids ipf store valu smaller hash type con worsen keep thing uniform expect peopl hash hand ellipt curv point typic sent bit bit hash save space send r instead h r advantag allow batch signatur verif typic twice fast verifi one signatur time ed compress,idea remind today add particularli use exampl usecas nice see typic exampl represent object valu probabl shorter b let say ident hash function code standard tabl let say ident hash function ad give week complaint declar part spec spec address follow two point maximum length data implement suppos handl unbound variabl size data mayb reason maximum size suggest encod data exampl valu get automat decod string impli utf default encod data depend context maximum use sure choos though wont obsolet implement paramet sure bad secur perspect leav well defin sorri exampl mean decod encod utf meant byte buffer maximum length data mayb data length prefix client sane max mbyte came case write variou ethereum ipld format resolv ethereum statetri leaf node contain binari blob ethereum account order provid path statetri node current ipld format resolv need includ logic ethereum account provid path trienod account resolv implement much simpler abl say path account data account resolv resolv account provid cid indic type data inlin via ident hash basic uri implement use liter code id ok great pr add multicodec tabl codec name use go impl sorri mess ad ident multibas encod know multihash ok remov pr ident multibas encod binari pass case rest stream data binari encod need multihash merg multicodec think need ident encod anymor say data idea reevalu usecas long sinc fix,7,29,hash|crypt|sha|signature|encode|decode|security,309,0.09385113268608414,0.7041925191879272
1796,https://api.github.com/repos/rust-lang/rfcs/issues/1796,pr,adapt hash,visual robin hood ijulia relat rfc extend trait support one shot hash,want say rfc delight read familiar robin hood hash part choos constant foreign regardless felt rfc made real easi see motiv benefit implement thank complex one iamgin two tier hash map infrastructur bottom tier implement hash map throw complaint get upset probe length whatev upper tier act combin decid rebuild new hash function hash tabl simpler allow tweak includ switch anoth hash tabl even expand api look guess add second hasher type paramet deprec favor new version take hasher agre support one hash much thing mention hand thing requir rfc implement bunch subtl concern farmhash problemat certain embed target due larg code size easi switch hash function want two hash function version set either extra tabl tabl rebuild problemat scenario present avoid rebuild specifi capac correctli must disabl switch behavior switch hash function mayb switch robin hood hash cuckoo hash less sixth cach line expect robin hood consider faster due cuckoo caus second cach miss fetch distant bucket yet cuckoo hash second independ hash function sound pretti nice alreadi attempt resist dos attack cuckoo hash leak less time inform due multi element bucket evict element independ hash key seem secur signatur hashmap stay randomst handl fast safe hash backward compat randomst defin std collect hash map guarante specif hash function think two tier make sens better implement imagin farmhash problemat certain embed target due larg code size easi switch hash function want two hash function version set either far know peopl write embed target alreadi rememb optim code size chang default easi guid embed program rust optim mention siphash alon add code size round inlin speed bit embed system good need measur think code size prioriti extra tabl tabl rebuild problemat scenario present avoid rebuild specifi capac correctli must disabl switch behavior excel question adapt hash problem realtim system suggest chang hashmap load factor increas threshold run length small number realloc less like hope chang hasher get hashmap extern crate easi enough case need guarante cheap insert chang load factor propos thing rfc probabl distribut run length wrong idea fix math soon make correct rfc chang chang ok write actual chang sinc appar clear rfc written suggest ad altern abstract interfac trait code easili built gener particular implement implement current singl two hash function base hash map leav default choic unstabl say draw back kinda boost ish involv lot discuss new trait vs specif implement kind trait necessari cover map function defin reason without hkt earli resiz indirectli help right need adapt hash simpl key caus mix function rfc easili extend strong enough seed variant bit seed simpli appli even mansour scheme adapt hash still use complex key rfc need fast hash function complex choic fast hash function think farmhash right choic recommend someth exploit ilp disclaim author fo think farmhash exploit ilp seahash differ much xxhash metrohash say seahash bad uniqu say almost perform achiev without multipl say first cancel third one previou block ie third excess make interblock dependeci wors bother hash flood attack need second per block multipl shift function twice faster need final step add remov multipl shift fo think farmhash exploit ilp partial optim seahash differ much xxhash metrohash right differ minor still abl beat perform say seahash bad uniqu never claim fairli standard highli optim dm construct say almost perform achiev without multipl need look avalanch diagram say first cancel third one previou block ie third excess make interblock dependeci wors multipl bother hash flood attack need second per block multipl shift function twice faster diffus function yes destroy statist properti comment code contain fairli detail inform chose essenti need move entropi wrote design construct bad flip high bit flip lower one ask qualiti matter adapt hash want accident switch secur hash function unexpect bia output lose entropi everi round pretti bad say almost perform achiev without multipl need look avalanch diagram yes alreadi achiev byte per clock without multipl best multipl achiev byte clock even non multipluc spookyhash achiev byte per cycl use variabl state variabl hidden temporari variabl need xor shift publish yet want multipl multipl block first xor shift block n cancel result third xor shift block n diffus function yes destroy statist properti need great statist properti interblock diffus unless concern secur add least proper seed yes singl multipl ok take suggest back easi construct interblock collis yes alreadi achiev byte per clock without multipl best multipl achiev byte clock even non multipluc spookyhash achiev byte per cycl use variabl state variabl hidden temporari variabl need xor shift number wrong spookyhash outperform seahash xxhash benchmark matter remov cycl two want replac whole function return excel benchmark matter fact qualiti wors remov multipl remov bic invari well avalanch criterion multipl block first xor shift block n cancel result third xor shift block n true observ implement mistak affect result seem though llvm got cover remov instruct still bad code yeah btw look non assembl version golang hash function use two multipl per block use singl rotat instead three xor shift bet implement c rust faster seahash statist properti mention best multipl hash function seed fact realli believ properli seed golang hash function yes seahash safe siphash usag hash tabl seed fact realli believ properli seed golang hash function yes seahash safe siphash usag hash tabl wrong trivial break gener collis easili golang xxhash seahash think mostli interest number wrong spookyhash outperform seahash xxhash benchmark said said number seen comput comput xxhash slightli faste spookyhash believ seahash say non multipluc hash compar perform statist properti spookyhash great statist properti multipl murmur broken remov multipl remov bic invari well avalanch criterion need great avalanch block need sure simpl make collis block everi bit state everi bit block affect sever bit state difficult cancel predict doubl multipl hash seahash golang one easi cancel effect previou block seed hard guess effect choos hard cancel use spong construct state bit block bit everi bit state block affect least bit state note approach use siphash state bit block bit everi bit affect bit state round function siphash run round function per block even siphash consid secur usag siphash work achiev cryptographi secur caus mac function result statist properti achiev final siphash result statist properti achiev final siphash simpl proof reli inter block diffus sinc cannot simpli assum final fix bias exampl bit never chang diffus xor cancel end collis matter final wrong trivial break gener collis easili golang xxhash seahash great claim give gener seed independ multicollis golang quit easi check build bit golang asm hash disabl fill hash first random string static string notic differ execut time anyth say ebay amazon within destin address give sent paypal know xxhash vulnur murmurhash xxhash seahash vulnur caus seed seed strong random seed safe golang function almost seahash faster caus less oper per block simpl proof reli inter block diffus sinc cannot simpli assum final fix bias exampl bit never chang diffus xor cancel end collis matter final achiev look siphash alreadi repeat understand siphash work understand talk theoret attack need money diffus block satisfi bic control certain bit final final neither unbias problem higher bit reflect chang lower reduc call e less bruteforc seahash vulnur caus seed seed strong random seed safe suppos mix prove mere permut output mean secur go look golang function almost seahash faster caus less oper per block similar faster afaict one instruct add per round said benchmark right certainli pass statist analysi though achiev look siphash alreadi yeah special case deliber put effort make sure bias cannot exploit believ word without fact theoret attack golang function pass smhasher check yeah special case deliber put effort make sure bias cannot exploit read paper try reduc siphash variant smhasher siphash pass smhasher avalanch test siphash minim usabl configur paper say cite exact quit difficult find bad rotat number almost distinct number produc strong function perhap increas number round chosen number give faster avalanch great avalanch consequt block siphash yes effort appli spend sever day chose right rotat number caus round function hash less work per byte siphash give anoth find seed independ collis function probabl much easier golang function confid compar golang one deal non cryptograph function bit affect per round function loos write articl blog tada seahash support seed hash sure give link code look golang one diffus block satisfi bic control certain bit final final neither unbias caus unknown strong seed block round function everi byte everi bit block affect least larg part higher bit next block begin know seed almost imposs predict one bit miss affect bit posit chang state almost unpredict next round function combin final last block alter almost permut function similar faster afaict one instruct add per round exactli code function said deal versu articl blog deal btw seed seed look golang global strong random bit seed combin part seed independ bit variabl discuss move somewher els seem particularli pertin rfc move twitter interest fast non multipl function bit bit slightli faster murmur short string much faster long string bit x faster murmur bit x faster murmur x sorri written c simpl rel fast safe multipl hash notic faster murmur short string compar long string bit bit variant separ permut step function mix string non string data type sorri written c believ resil hash flood properli seed hashsum expos let try discuss back topic work amaz confid earli resiz lot valu requir rfc remov need wrap flag option pursu read even mansour scheme secur increment key current seed two map differ least signific bit known iter order one map attack choos first n entri map increment key construct map key take n time n blowup similar one tradeoff scheme work must seed rng earli resiz fine rather keep earli resiz restrict map default hasher flag move randomst need special valu siphash state glad like instead increment prng use xorshift gener taken effici mix bit state size bit bit bit bit even greater function transform increment prng scheme even alreadi name splitmix exampl still wait updat concret outlin public face api go chang type identifi one shot hashabl user configur fast hasher well slow hasher api one shot hasher incompat trait think propos work current public api implement default hasher imo expos public api cumbersom anoth approach simpli provid api make hash effici reduc number time need done idea think api avoid repeat hash borrow tabl one imagin api instead handl index tabl avoid borrow tabl store identifi tabl index invalid oper one direct normal index invalid tabl rebuilt due identifi chang idea fast hasher tabl wrapper type key add secur hash valu store prehash wrapper slow hash oper correspond user input speed repeat hash oper requir algorithm vein anyon written adapt hash scheme crate provid wrapper still wait updat concret outlin public face api go chang public face api go chang rfc propos api user configur anyth exampl think special borrow string implement special behavior type need chang public face api updat rfc explain ping updat rfc check wip help clarifi remain question love move forward afaikt wip pr includ hash chang adjust load factor long chain encount understand anyon want avoid complex specifi right implement make return object similar object contain rs implement link initi comment prevent anyon seed initi weak hash function right case attack reliabl produc cach miss per queri without set much given network overhead still annoy lot queri pack one packet think consid use someth farmhash whatev make provid key even initi build special type user tune stronger initi option suppos good choic anoth option trait method case propos whatev method expos even left unstabl featur gate find right math describ insert cost made measur real implement result bit disappoint smallest reason forward shift threshold chanc reach random almost threshold mean allow hashmap construct take oper due kilobyt malici input mean copi mb memori kb malici input hashmap construct howev copi memori loop cheap suppos threshold load factor equal decent choic go chang rfc propos addit check earli detect n blowup improv perform map merg whenev detect abnorm long chunk need calcul proport length number entri map see chunk major part map switch safer code draw chart ijulia notebook measur implement spend last hour run simul thank gist agre work fairli well practic got e probabl load factor miss comment forward shift math wrong fix result load factor seen updat rfc sorri delay think one small chang yet done need convert state graph plain ascii coupl problem approach adapt hash conflat one shot hash experi common simpl composit type key map propos setup forc safe hash uncondit imo orthogon concept treat fact public api chang mean total un extens implement forc hardcod special case behavior specif hasher kind approach indic api layer need surfac remov code smell exampl default method ad return fast hasher new type paramet ad fast hasher rfc stall quit realli see improv along line go propos close rfc revis take account variou feedback given pleas feel free reopen revis fcp close team member propos close next step review rest tag team x x x x x x concern current list review reach consensu enter final comment period spot major issu rais point process pleas speak see info command tag team member give particular confus close close postpon postpon mean want thing propos right happi someth propos whenev specif need chang bell enter final comment period per review bell final comment period complet ok look new convers happen fcp go close tag postpon thank rfc,12,181,hash|attack|leak|security|signing|signature|safe|exploit|authorise|crypt|validate|malicious,2249,0.08048021342819031,0.7015430927276611
631,https://api.github.com/repos/rust-lang/rfcs/issues/631,issue,implement fast hashmap hash function,issu jan gmt earlier discuss see issu label interest project lib compiletim slow wishlist rust repositori current hashmap use cryptograph secur hash slow sometim big problem implement anoth hash map fast,current version hashmap still around time slower c unord map int key quit unfortun hash map integ key quit common usual oper trust data dos resist hash map except rule fast hashmap default intent chang behavior still true use btreemap hasher see first code exampl check believ situat improv sinc creation issu yes correct dos resist hash map except rule fast hashmap default current posit lib team understand regardless cannot chang ship sail cc regardless cannot chang ship sail actual chang non break chang actual chang non break chang wors chang behavior guarante without user know suddenli anyon depend strength suscept dos attack wors chang behavior guarante without user know suddenli anyon depend strength hashmap suscept dos attack hashmap guarante thing case hash tabl prone dos attack perfectli adequ remain percent person charg correspond part code expert enough abl choos right implement hash tabl implement default option use collis resist hash function bit stupid case hash tabl prone dos attack perfectli adequ remain percent person charg correspond part code expert enough abl choos right implement hash tabl implement default option use collis resist hash function bit stupid argument made favor secur default someon realli need squeez perform map profil determin inde bottleneck opt map prone dos argument made favor hashmap secur default someon realli need squeez perform map profil determin inde bottleneck opt map prone dos point major case dos problem point major case dos problem true map perform problem major case true map perform problem major case lot actual let give exampl recent chang zfs implement redox use siphash djb gave massiv speed x lot actual let give exampl recent chang zfs implement redox use siphash djb gave massiv speed x right profil applic determin gain increas perform switch certainli case dos concern consciou choic trade secur speed true map perform problem major case one binari search tree list whatnot everi data structur certain benefit drawback hash tabl benefit extrem fast one sacrific secur trust trust question hash tabl hit patholog behavior craft input mean essenc input perfectli fine choos secur hash tabl trade default case esoter imagin binari unzip trade common case perform resili uncommon case cost add larg applic divy tue mar pm andrew paseltin notificationsa lot actual let give exampl recent chang zfs implement redox use siphash djb gave massiv speed x right profil applic determin gain increas perform switch certainli case dos concern consciou choic trade secur speed receiv comment repli email directli view github one binari search tree list whatnot everi data structur certain benefit drawback hash tabl benefit extrem fast one sacrific secur matter pick asymptot slower data structur link list hash map effect applic overal perform hash map dos resist hash applic bottleneck determin tradeoff secur accept switch faster hash function argu exist non dos resist hash function default behavior default chang tradeoff case whether secur default fast default cost add larg applic agre scenario applic opt someth non default case agre chang despit possibl break chang api level think doc pretti hash key thread local random number gener creation default mean order key random make tabl resist denial servic attack hash dos behavior overridden one constructor one improv perform import type think action movement last year close,5,54,hash|crypt|security|trust|attack,573,0.09424083769633508,0.7005192637443542
3294,https://api.github.com/repos/quicwg/base-drafts/issues/3294,issue,make transport paramet id length varint,turn almost everi integ spec varint remov mention tls present languag make sens make transport paramet varint well current uint base encod stick sore thumb said chang cosmet transport paramet main joint extend quicv switch bit ensur run space ever abl chang later quicv use handshak issu origin describ feedback cupertino conflat three differ topic languag use describ transport paramet chang away tls present languag via merg pr polici transport paramet iana registri chang merg pr encod transport paramet id length wire discuss issu associ open pr discuss seen look opposit support open issu convers independ topic,point effect move goal post quot conclus discuss jana propos draw diagram tls present format separ flip alloc spec requir experiment space use track chang space alloc separ pr editori chang chang tps varint chang decis alreadi reach fine long state apolog split hair sinc discuss process quic wg establish consensu meet room decis made consensu call chair mail list describ said cupertino reflect attend opinion decis wg purpos issu establish consensu wg order close issu need establish whether consensu make chang close merg pr consensu close without action larg space expect run k transport paramet quicv apolog split hair sinc discuss process quic wg establish consensu meet room decis made consensu call chair mail list sorri point discuss process case consensu call resolv end monday quot state sympathet argument differ understand agre cupertino process wise finish consensu call base comment conclud replac tls syntax someth easier understand shuffl assign rang registri larg space tri request udp port iana inform find small strongli defend registri becom time acknowledg differ iana procedur udp port given enough time bound hit limit reason point respect understand consensu call cover iana portion issu perhap focu technic reason want want make propos chang alright kid process fight recollect hazi rememb us punt question differ recollect worth come conclus write clearli term scale seem talk equival tcp option equival number applic run tcp ever benefit version think need space transport paramet addit know tcp option use point point everi tp consum space handshak packet endpoint exchang paraphras incent keep number tps use small think ever see endpoint send thousand tps assum case practic reason switch varint point us reus encod decod design tls switch varint base design requir write new codec specif quic burden think concentr fix real issu rather requir everybodi make unneed chang favor make chang valu consist encod across protocol think build parser frame real burden consid implement alreadi parser frame type valu consist encod across protocol understand look inconsist quic current design consist tls transport paramet tls extens think current design draft consist tls mani transport paramet varint valu tls model content transport paramet built quic wherea encod tls fwiw transit current model made time late discuss possibl move tp id length field varint well see decid state alreadi late first time discuss issu model content transport paramet built quic wherea encod tls pretti complic model begin tls noth transport paramet carri opaqu blob cannot see reason use model abl tls present languag remov cannot see reason use model abl tls present languag remov think fair argument state understand agre switch quic base notat preserv uint encod coincid state see disagre case mayb start first go back tls notat case mayb start first go back tls notat rememb correctli main argument give tls notat improv readabl peopl familiar tls represent languag viewpoint consist encod switch back definit improv though said still understand tls involv encod valu never treat anyth opaqu blob rememb correctli main argument give tls notat improv readabl peopl familiar tls represent languag move away tls notat memori consist describ viewpoint consist encod switch back definit improv though think make good point assum keep statu quo help reader explain design mayb someth follow good idea encourag code reus encod valid requir transport paramet follow tls extens rfc section said still understand tls involv encod valu never treat anyth opaqu blob case quic need skip opaqu valu unknown type type length valu requir check paramet appear length known paramet expect requir happen exactli equival requir tls extens therefor benefici exist code tls stack reus consid quic alreadi pretti tight coupl tls think unnatur endors reus anoth advantag use tls present languag tlspl one learn make yapl yet anoth present languag matter fact conveni state explicitli tlspl use put refer tlspl back document fine idea support chang number reason quic layer one read write content tp tls layer quic librari cannot depend tls librari encod decod individu paramet quic tls independ enough evolv parallel without requir chang whenev one chang mention mani tls librari expos type function alreadi els quic code spec need understand tls encod except current encod tls scheme requir extra unnecessari length field whole tp tls present languag specifi list paramet imo make code awkward abl remov heartili agre wrote quic read write tp quic read write integ varint go evid tps varint valu use varint consist rest quic code simpler said understood feedback cupertino decoupl question reject outright pr mix sever chang hard discuss combin pr effect fundament seem case design reflect code pattern pattern quic layer gener binari structur hand opaqu blob tls say payload extens foo make total sens varint everyth part quic code pattern transport paramet known structur tls hand key valu store know serial make total sens tlspl everyth part tls whole first pattern seem like fundament ship code architectur choic easili see quic version tls make tp independ tls fine clear one thing propos chang extens cosmet chang nicer uniform rest quic hear argument space constrain chang debilit anyon expect abl live either decis keen cosmet chang point note sever us said late late make chang late even later think import enough chang handshak yet late stage person think argument made late game make chang effect handshak merg pr complet rewrit whole retri path huge chang folk argu udp checksum enough minut code chang retri chang least half day like chang pure cosmet chang sinc remov extra unnecessari list length person think argument made late game make chang effect handshak merg pr complet rewrit whole retri path two chang differ retri chang address obviou technic defici protocol thu pass late stage filter chang tp ids varint urgenc level minut code chang minut eh better programm better hyperbol fundament seem case design reflect code pattern pattern quic layer gener binari structur hand opaqu blob tls say payload extens foo make total sens varint everyth part quic code pattern transport paramet known structur tls hand key valu store know serial make total sens tlspl everyth part tls think good summari trade fwiw latter approach use helper provid tls someth key valu store exampl picotl provid api encod decod extens provid closur base api encod decod tls block instead use quicli code encod tp quicli c line code decod tps line encod decod process defin callback tls stack directli read append buffer built tls stack state previou encod decod tps complic task happen part tls handshak messag process help allow kind code reus switch varint tp id length much much less chanc code reus structur tlv encod depend varint encod quic case quicli copi past helper function provid picotl chang code handl uint varint certainli possibl addit complex us far cost use uint instead varint caveat someth look closur block code actual macro case c though minut code chang think comment illustr differ pain among parti peopl type length valu codec specif quic pain stick uint small someth modifi minut compar pain much bigger peopl share codec tls decid move varint base design move enforc peopl two codec instead one even though logic equival except integ represent use requir type length valu codec trivial decod requir pars ids block length check block length consist paramet pars detect duplic ids share codec help lot logic kept maintain one place see peopl argu encod differ base view tp belong quic disput deliber decid mix crypto handshak transport negoti quic tp cross layer thing exchang tls handshak addit point mention anoth advantag defin format transport paramet requir list order paramet id suggest somewher yet incorpor suggest make detect duplic paramet due comput complex trivial allow us turn must furthermor reduc profil surfac expos quic implement assum today probabl possibl identifi quic implement look order transport paramet send see peopl argu encod differ base view tp belong quic disput deliber decid mix crypto handshak transport negoti quic tp cross layer thing exchang tls handshak disagre statement reason put transport paramet tls handshak sent initi basic detect modif path attack put tls handshak becom part transcript therefor prevent attack send transport paramet encrypt packet reason defin quic set frame deliber decid mix crypto handshak transport negoti quic tp cross layer thing exchang tls handshak ambival assert section requir crypto handshak protocol one requir carri authent provid opaqu blob use tls extens tls incarn requir sinc decid version tls futur version figur thing choic opt integr packet type encrypt tls record layer key schedul version agre area deliber decid mix layer agre reason make choic clearli implement regardless see bad choic relat version negoti draft requir server capabl process older still popular version initi packet version tls specif lead complex even surfac implement finder simpler leverag tls tool specif version think mostli agre observ draft essenti chang quic tls record layer quic four record type tls key discard design base tls start use new key e handshak key use server first client last moreov anoth instanc uint addit tps function tls quic use deriv protect key traffic secret gener tls deriv protect key specif quic directli invok function defin rfc statu quo quic use defin tls uint field label look exampl encourag code reus much encod tp id length principl go minim interfac tls quic consid chang point state principl encourag leav room code reus tls quic encod tp ids length kept along drop key four epoch question extent consid tp encod part quic stack oppos tls stack one school treat transport paramet opaqu carrier bit lean abstract interfac defin transport tls say implement strategi differ similar tls exploit implement parallel drawn kdf function tls provid clearer least mind distinct tls provid kdf form quic use variou point process consid modif kdf current form clear leav kdf function unmodifi think pertin question rel cost chang improv gain advantag retain current form tightli integr tls stack advoc chang see potenti remov singl instanc bespok encod quic stack plu modest reduct handshak size heard least one implement find chang disrupt separ observ disrupt exist implement great motiv oppos chang knew risk decid build draft specif make argument principl basi say bag bit view hold quic respons construct consum transport paramet opaqu blob realli use basi make decis substant matter stake oppos view like major transport paramet quic version reli tls exampl version optim constrain iot devic argu paramet like server deal tls version non tls version light coupl tp close tls appear sub optim state design quic tie tls mani way deepli enough think decoupl encod tp practic differ amount chang need make support handshak mechan mention go someth tls hypothesi realli dislik gratuit chang stage process agre leav si sun dec pm christian huitema wrote realli dislik gratuit chang stage process receiv subscrib thread repli email directli view github unsubscrib character chang make design protocol self consist gratuit seem reduc implement confus chang encod futur version seem good place parser vulner hide favor make chang discuss zrh propos resolut make chang appli follow feedback room revert prefer address part chang far know readi merg confirm consensu list discuss prefer address requir separ issu whomev propon pleas creat one prefer address chang discuss issu fair outcom document issu minut cupertino decid make chang modifi layout consid part believ consider given mayb advoc chang cursori manner dismiss unsatisfactori ampl opportun given argu includ chang,16,181,transport|tls|encode|signing|decode|validate|checksum|crypt|attack|scripting|encrypt|authentication|integrity|protect|exploit|vulnerability,1983,0.09127584467977812,0.6962250471115112
3120,https://api.github.com/repos/quicwg/base-drafts/issues/3120,pr,add retri integr tag,discuss cupertino pr add integr tag retri packet prevent network packet corrupt break quic handshak close close,ambival implicit odcid thing implicit thing gener succeed right inform seem still fail client check tag complet avoid issu enciph token chang optim option enough worthwhil odcid implicit check properti explicit odcid client ignor field entir said idea make harder check encrypt token encrypt token zero key still suitabl think overhead small long hkdf sha perform penalti use softwar cipher e aesni yes concern worth complex case goe embed microcontrol link hub via bluetooh ip network complet quic endpoint hub interfer deliv proper ip remot endpoint attach local ip devic constrain support chacha poli crypto except retri packet possibl initi packet recal requir addit softwar problem limit flash storag even initi slowdown otherwis accept encrypt use aes gcm zero key zero nonc xor oper known string cleartext perform cost low quicv use aes gcm initi packet quic client need aes gcm support free build differ version quic use chachapoli impact design quicv aes gcm correct crypto part yes encrypt ghash aead edit authent data ghash bit carryless multipl galoi field complet checksum clmul instruct effici otherwis much poli gain clmul common misc control even acceller least time e g esp agre aes gcm right choic given circumst think poli better initi retri work broader rang benefit aes gcm highli load server necessari acceller slow non aes gcm even tini fraction overal connect cost import fend nois broader internet go pr match algorithm use initi stick aes gcm feel free file separ issu discuss use chachapoli think late make chang wrote given circumst agre design choic encrypt use aes gcm zero key zero nonc xor oper known string cleartext perform cost low oh see mean keen observ though think observ show reason us thought encrypt benefici pointless iiuc suggest use encrypt prevent implement use token without check tag assumpt behind aead decrypt go atom oper point particular case interest optim endpoint pre built xor vector gcm reduc motiv encrypt complex appli xor one reason encrypt implement alreadi aes gcm implement want add anoth hash crypto function though simpl easi optim mani implement aes gcm avail independ ghash tap get mask requir effort client predict mani byte mask need quit specul tend think put thumb scale right yeah train thought server stack develop happen work client interest pre built xor mask server side expand constant vector byte decod retri packet said agre stack develop think actual implement agre valu encrypt token rather appli gmac cost small requir xor server side xor ing zero key provid confidenti add overhead fine aes gcm tap ghash logic ad authent addit data requir larg static buffer zero encrypt data overhead server harm expens l cach embed devic requir encrypt usual said ghash ideal hash broader given make sens authent addit data suggest two revis pr let encrypt retri token instead zero key let per version key analag per version salt anti ossif benefit encrypt token discuss pr consensu zero key per version mean quicv use zero key quicv decid differ key discuss pr relat issu indic interest retri integr tag top pr current cover chair latest consensu call therefor suggest pleas file separ issu discuss encrypt token discuss pr land file second issu discuss zero key vs non zero zero key per version mean quicv use zero key quicv decid differ key think chang retri key everi draft version everi time chang initi salt prevent ossif assum run certain number draft version concurr prefer non zero salt upcom draft version indic implementor key constant rather zero endpoint synthet gener e g use discuss pr relat issu indic interest retri integr tag top pr current cover chair latest consensu call yes respond say ought encrypt elabor secur ossif christian huitema nov pm ekr wrote discuss pr relat issu indic interest retri integr tag top pr current cover chair latest consensu call yes respond say ought encrypt receiv comment repli email directli view github unsubscrib ossif reason encrypt initi fri nov pm christian huitema wrote elabor secur ossif christian huitema nov pm ekr wrote discuss pr relat issu indic interest retri integr tag top pr current cover chair latest consensu call yes respond say ought encrypt receiv comment repli email directli view github unsubscrib receiv mention repli email directli view github unsubscrib recap propos morn separ fix key deriv hkdf ing salt good key separ practic publish fix valu spec want think consensu send text encrypt token use fix key top min dcid len byte dcid provid obfusc cost aes oper kdf made separ random key avoid hkdf hope address point regard point care either connect id nonc origin destin connect id sinc sent wire requir known endpoint yes random key fine tue nov pm david schinazi wrote made separ random key avoid hkdf hope address point regard point care either connect id nonc origin destin connect id sinc sent wire requir known endpoint receiv mention repli email directli view github unsubscrib add test vector appendix tls document add test vector appendix tls document pull request appreci one creat js file valu automat gener ideal singapor debat whether checksum versu encrypt initi vector base cid want compar two variant use benchmark design picotl ran littl bit troubl structur picotl encrypt api look initi encrypt context key context iv authent data encrypt messag comput aead checksum api option iv use constant iv exactli cost use variabl iv went compar time encrypt byte versu time authent byte result two implement aes gcm one openssl crypto librari anoth window bcrypt librari measur use bit code window laptop encrypt decrypt authent verifi bcrypt openssl c time measur microsecond averag oper see time fraction microsecond case encrypt oper expens simpl authent brcrypt openssl decrypt oper expens simpl authent brcypt almost openssl let gener discuss pm jana iyengar wrote merg master busi implement doubt tls spec aead key vector deriv master secret someth sender write key hkdf expand label secret key key length sender write iv hkdf expand label secret iv iv length sequenc number per packet nonc encrypt use iv per packet nonc text tls draft say secret key k bit equal xf ed e e c bbbc c nonc n bit zero read equival retri key xf ed e e c bbbc c retri iv x per packet nonc x retri key hkdf expand label xf ed e e c bbbc c key retri iv hkdf expand label xf ed e e c bbbc c iv per packet nonc x christian huitema argu former new text refer rfc aes gcm directli natur hardcod aes gcm particular case unlik initi packet reason gener design ps though understand concern everi tls stack expos direct access aes gcm case api assum tls stack provid aead level e g api take aead algorithm hash algorithm secret input better specifi rather specifi aes key iv directli,19,118,integrity|sha|encrypt|crypt|cipher|aes|nonce|signing|hash|authentication|checksum|availability|decode|confidential|salt|security|obfuscate|tls|openssl,1151,0.10251954821894005,0.6835824847221375
3619,https://api.github.com/repos/quicwg/base-drafts/issues/3619,issue,forgeri limit packet protect,tl dr need recommend limit number fail decrypt introduct quip one side discuss concentr qualiti analysi record limit applic analysi quic felix g nther along marc fischlin christian janson kenni paterson done littl analysi base quip paper felix present paper atul luykx use limit tls two relev limit analysi confidenti bound usual express term advantag attack gain abl break confidenti record packet data valid packet instanc aes gcm analysi show see packet almost million attack better chanc pure chanc win ind cpa game forgeri bound express probabl attack success creat forg record packet thank analysi done previous know aes gcm chacha poli forgeri chanc forgeri attempt respect current text point tls recommend key updat protect confidenti tls forgeri toler singl fail forgeri attempt caus connect break quic dtl allow multipl forgeri ignor need factor propos solut discuss want maintain secur need consid confidenti integr need two independ limit number packet success encrypt decrypt number packet unsuccess decrypt former alreadi latter issu track limit risk exceed updat key forc attack start base felix recommend go suggest limit forgeri attempt confirm close read paper concur signific differ aes gcm chacha poli believ set singl limit best approach creat pull request document approach shortli note split recommend allow larger limit aes gcm believ billion signific barrier refer abl satur gbp link byte ip packet contain plausibl quic packet recipi treat dos traffic take minut assum fastli recent perform like repres potenti packet rate limit goe hour point volum unproduct traffic probabl good reason someth key updat deal sender remind underli analysi assum packet size record size tls time larger typic mtu internet mani quic packet smaller least aes gcm recommend limit conserv necessari howev allow differ limit address question packet size byte packet use deploy chacha poli valu matter number packet avoid question quot felix email refer permiss briefli recal analysi quic dtl record layer term robust handl malici inject packet present quip suggest secur degrad linear regularli sent receiv packet number reject packet taken account e unreli transport natur affect integr bound unnotic henc toler forgeri attempt linearli degrad underli aead scheme authent secur level revisit analysi done tls togeth kenni follow conclus dtl quic aes gcm integr bound aes gcm alreadi calcul v forgeri attempt verif attempt therefor data limit tls appli mayb note ad rfc forgeri attempt count limit practic concern chacha poli integr degrad chacha poli v v verif forgeri attempt order keep safeti margin tls number overal receiv record correctli verifi reject must limit requir count receiv record accord note rfc hope conclus answer open question aead limit pleas let know investig need best contribut ad accord note draft standard best felix christian kenni marc marc fischlin felix g nther christian janson robust channel handl unreli network record layer quic dtl preliminari version quip slide robust channel atul luykx kenni paterson limit authent encrypt tls,request review analysi correct know reserv claim anoth simplier option updat key much often done perform test msquic effect updat key per round trip notic effect perform fact often key updat perf test happen perform slightli better within nois toler without key updat suggest advoc round trip anyth near everi packet byte sent receiv includ fail decrypt understand ultra conserv number far protect kind attack free far perform impact connect ad benefit exercis key updat scenario often hope improv interoper featur support chang qualifi say threshold certainli reason push high limit chang break interoper good one ban ccm break interoper someon concern particularli updat browser offer somewhat bigger concern lack key updat support lot implement read server support tent good news ccm kenni identifi secur analysi paper seem rel simpl go number person concern support key updat bother turn littl fiddli implement peopl decid drop connect hit limit instead effect bad cours want follow nick suggest work rememb dan bernstein serious suggest cipher updat everi record back first propos scheme tls look new bound initi key updat preced ssh rfc rekey everi gb data transfer see point figur base interop matrix client initi earli updat server respond differ thing server initi updat requir spec fewer server base paper analys jonsson calcul bound number forgeri encrypt ccm number great probabl matter much purpos ccm gener put use notat aebound easier type use paper refer q number genuin encrypt l length byte block v number forgeri n key length bit tag length bit confidenti jonsson put advantag attack gener prf assum number aebound paper record packet size consist quic packet much smaller order go high dictat mtu aes keep advantag attack match analysi tls therefor need keep q somewhat unsurprisingli match number aes gcm integr jonsson put advantag attack gener prf first term neglig even larg v consid second term alon aim bound advantag match analysi cipher leav us q alreadi establish say v limit want precis side note aead aes ccm first term becom relev secur bound limit number forgeri probabl bit limit practic good justif enabl aead aes ccm default though differ applic differ target bound caveat cryptograph paper read chicken chicken chicken calcul infal either shape bound seem plausibl start thread cryptograph check everyth reproduc martin analysi ccm base rogaway bound expert produc bound found second level confirm rogaway help essenti agre number except follow metric aebound advantag ideal prp instead prf consid simpli mean lose factor bound confidenti bound yield advantag henc say fine keep tls recommend send max full size record integr bound henc yield advantag match analys importantli concur martin aead aes ccm need either much lower bound differ risk assess appli limit bring advantag incur bound still best approach defin anti forgeri limit across cipher suit even mean go cours happi discuss thank check littl concern prp prf split glad correct ultim went per aead recommend lower limit ccm mainli establish sort uniform around even basic arbitrari choic least defens think use uniformli establish right expect standard comfort specifi differ limit aead specif practic howev expect far lower toler forgeri attempt assum number work review pull request greatli appreci relev paper alway happi pull well realiz respond advic appli limit tls specifi alreadi issu primarili respond forgeri said g pretti good advic howev seen analysi g result lower safeti margin tls aim close enough aead good probabl ok howev depend lot specif aead uncomfort use simpl guid gener case point error calcul base calcul direct map ccm analysi calcul number block messag analysi jonsson defin definit beta ccm function function realli reduc time length messag block plu account addit encrypt ignor extra absorb tag length updat number pr result anoth halv number packet pretti clear depth input highli valu good catch yes doubl pass messag requir factor ad block understand header format correctli guess neglig compar conserv messag size good point ad ad least quic alway sent fit space necessarili need doubl count tini number block say count yield neglig differ larg ad transmit differ agre precis mistaken ad count right account max payload block cours differ still neglig long ad small,21,98,forge|forgery|protect|crypt|tls|confidential|attack|validate|aes|security|integrity|encrypt|signing|malicious|inject|transport|authentication|safe|cipher|ssh|defense,1169,0.08383233532934131,0.6747204065322876
288,https://api.github.com/repos/cloudevents/spec/issues/288,issue,event produc singl requir encod transport,event base system especi one cloudev strive interoper need defin singl encod transport produc give best interoper consum cloud provid ecosystem instanc say spec requir json http although challeng true push use http produc consum environ consum event singular fashion note preclud special consum gateway multi head produc util altern encod transport provid produc event differ encod transport compliant must produc via http json whatev chosen encod transport shall instanc googl choos honor spec publish event via standard publish event parallel via grpc protobuf altern referenc spec base statu broader ecosystem,alreadi conform rule main spec state implement must support json event format leav whether need complianc rule conform produc implement must support http tough low end iot spectrum peopl greedi ad transport stack base kilobyt librari footprint devic gener commun via mqtt event share system alway rout gateway need add http stack pure cloudev conform spite consum consum event via middlewar speak http behalf suffici say consum implement must support json b produc must configur emit json c produc configur send http endpoint think common transport support spec compliant produc requir notic say consum free consum best want specif multi head produc gateway repeat offer transport encod event format great start without default requir transport end user usual consum tri consum event multipl provid ecosystem frustrat imo mention http sinc fit least common denomin believ good match push base high volum system disagre argument easili turn around well produc oper within organ someth mqtt chosen transport frustrat support http never use believ minimum support transport fall outsid remit cloudev cloudev definit http chosen done mqtt chosen specif transport layer forc minimum transport layer good consum opinion produc implement caus add addit complex know certainli add support transport layer know consum never listen referenc legaci produc imo util gateway compliant payload transport peopl want consum directli legaci produc today compliant need gateway tend agre soon start mandat particular transport run risk disenfranchis whole bunch potenti user pleas think comment one need decid v thought one still want push will talk next call cent think necessarili mandat one particular transport mandat binari support mean structur option say realli idea exist event flow realli need chang much add bit metadata requir attribut seem pretti minim bar support know address think look interop transport level mandat everyon support least one common one seem pretti high bar sinc folk want nice goal understand side think org defin standard transport implement believ continu push transport agnost event handler e g serverless need understand encod mayb layer hide transport hide encod deliv structur applic directli think properti semant event broad sens import close issu,2,29,encode|transport,445,0.0651685393258427,0.6596349477767944
766,https://api.github.com/repos/rust-lang/rfcs/issues/766,issue,figur tree crypto stori,issu jun gmt earlier discuss see issu label lib rust repositori previous made decis distribut crypto rust probabl tenabl sinc crypto use everywher current opinion distribut crypto written rust distribut bind well regard crypto fine figur strategi build consensu start implement robust crypto librari tree goal merg main distribut someday exist effort along line evalu purpos,polarssl relicens gpl apach make altern openssl worth mention llvm cannot creat branchless constant time code either one link librari assembl imeplement els pursu anoth compil option perhap see simpler question worth address cryptograph key materi copyabl apper zero cryptograph key drop ensur llvm optim away done sodiumoxid via libsodium follow type containig crpyograph key must drop method zero therefor cannot copyabl follow key move semant correct move drop move practic commonli pointer anyway sinc key materi least byte long seem worth clarifi asid call although impact realiz appear eactli implement full alloc sound heavi hand requir wrapper call libsodium mayb build framework cryptograph crate rather tri pack cryptograph algorithm one big crate basic trait etc handl key materi digest stream cypher block cypher box etc actual algorithm current explor idea start hash function simplest implement trait crate act kind adapt actual crypto librari swap similar rust nativ tls crypto librari need depend framework crate call framework crate depend singl crypto librari one depend cargo featur end result similar common api anyon code implement low level implement need live crate slightli complic make algorithm depend framework crate anyway mani crypto algorithm benefit common base provid constant time oper donno simpli ad core ala start crypto crate mayb start someth similar made write nadeko constant time realli solv core issu constant time high level ast manipul understand intent goe make someth constant time trueli believ cannot opt idea crypto frame work expos hand function zero buffer drop ensur happen time constant time oper function wrap hand code asm make crypt librari author job lot easier let keep two thing separ first implement crypto primit second top helper function constant time oper memori manag call common base certainli help thing sure go core librari separ crate sure call one framework high level api user basic trait make possibl ship api user code guarante code use librari continu work without includ actual crypto primit implement standard librari slow updat etc idea discuss previou issu api well core librari rust lang crate framework java less facad wrapper sth said framework bunch use trait thing hash digest stream cipher encrypt decrypt stream cipher ctr mode etc principl one build upon except design decis seem question disjoint need either improv explain place oper stream cipher imagin omiss stream cipher act iter though donno appropri stream cipher chacha gener purpos iter machineri seek translat iter oper block digest input stuff etc answer question publicli adjust trait thing seem import otherwis everi hash function cipher develop need think question true constant time oper step trait framework stuff similar anyon write crypto primit need think done right elsewher see point save crypto librari implementor reinvent wheel time major benefit framework anoth benefit one singl api crypto user similar jca java hope pretti good api lot work went design clarifi question one rais librari implementor outward face trait low level helper crypto user better abl access low level stuff directli least separ modul argu separ crate crypto librari realli need quit mani actual wrapper c librari openssl boringssl libsodium need constant time oper rust instead base common low level thing libc ffi gener someth work high level trait crypto api implement rust agre good answer question publicli mayb api trait lower level function two separ discuss though differ stakehold probabl neither discuss belong thread mani detail discuss alreadi includ iter cipher api name rust crypto base adapt look other topic discuss rust crypto irc week back seem ring api well regard constant time build block sound small compar say pull extra hash function much less aes rsa everi exist crypto librari struct ring confin gener purpos crypto librari fit well ring histori boringssl cours gener provid tls rust api probabl trait rust crypto say leav stakehold want uber safeti use ring sodiumoxid project make rang safeti decis includ evalu rust code matur enough replac solid c code rust lack foot gun free crypto librari rust weaker flexibl build block though want simplifi build separ crate provid crypto primit without need dig deepli rustc llvm right peopl send pull request rust crypto project respons everyon pet cipher hash function suppos break rust crypto crypto current crypto legaci crate requir expos enough build block new cipher hash function need send pull request want simplifi use crate protocol includ unconvent protocol involv stuff blind signatur axolotl ellig semi privat key mixnet ecqv post quantum etc worri public key algorithm right stand alon crate well enough symmetr crypto stand peopl unusu asymmetr stuff applic increasingli need unconvent usag insist avoid foot gun either import new thing built languag go els everyon maintain privat fork crypto librari doubt good job foot gun free ring anyway vein right approach public key librari mathemat submodul well document export fix size array use everywher help arrayref crate slice etc framework crate depend singl crypto librari one depend cargo featur end result similar common api anyon code implement low level implement need live crate approach make less sens singl trait multipl crypto librari target requir librari want buy common crypto core rewritten trait right answer oppos tri make one size fit wrapper diverg api present exist crypto librari note alreadi good trait extract purpos rust crypto former jca user mani java thing extrem overcompl bad abstract entir java crypto ecosystem stuff nightmar somewhat nobl goal practic perspect giant pain work prefer approach lean rust type system simpl abstract built common trait need lean cargo featur includ crate algorithm want built common trait everyth work think approach potenti still enabl thing ask name instanc cipher runtim crappi algorithm peopl use spun separ crate complet appropri caveat emptor warn user asid call although impact realiz appear tar eactli litani incompat rust librari memori protect secret storag noth els seem someth els benefit common trait implement full alloc sound heavi hand requir wrapper call mlock munlock libsodium add guard page begin end region use protect memori scrape heartble style attack ideal someth sort arena alloc n key store mani buffer anoth popular approach master key encrypt key kek store secret encrypt memori use kek decrypt demand particular oper said realli look anoth case benefit common trait depend paranoia level pick exact strategi crate want safeguard key secret algorithm struct ring confin gener purpos crypto librari fit well ring histori boringssl cours gener provid tls rust api probabl algorithm new trait rust crypto fyi design ring api pretti much noth boringssl ring avoid model everyth use trait thing rust trait support yet surprisingli mani unusu thing ring actual reason explan readili avail anybodi ask ring develop first agre common trait nicer solut come mani advantag exampl higher level librari one mani jwt librari depend someth comput hmac without choos crypto implement user possibl mess build found thing trait yet especi compar cargo featur switch solut downsid see technic challeng mayb solv alreadi build common trait concret trait return type function yet exampl consid ring type return hash function hash trait function need struct defin common librari similar problem aris function gener privat public key place pleas correct wrong see good solut mayb wait abstract return type anoth issu global function use hash exampl simplest job without even let user choos algorithm e g probabl sha algorithm hood everi crypto librari individu implement function impos signatur trait henc possibl write helper function around global function e g one accept file path hash file content problem seem less import think exampl plu default algorithm alias relat issu great implement easili exchang basic case common librari refer implement done build flag imagin achiev crypto librari follow similar structur user want extrem exchang realli necessari show point replac thing still work achiev disciplin quit lot restructur exist librari cannot enforc trait far tell need structur guidelin librari develop ring call instead trait return type function yet exampl consid ring digest type return hash function hash trait function fn hash digest digest need struct defin common librari particularli interest case ergonom ring type work end user hood bound max length digest size fine hash function sure work key hash function act kdf variabl length output intern reli fix size byte array perhap thought per comment know ring design decis common struct standard librari seem good thing provid one size fit solut perhap rust crypto provid byte slice write output fit bill better ring call digest instead hash imo digest output hash function correct term ring call digest instead hash done mostli distinguish hash map stuff thing need cryptograph hash ergonom ring type work end user hood bound max length digest size fine hash function sure work key hash function act kdf variabl length output intern reli fix size byte array kdf output digest messag make sens output ring current output type kdf oper like chang soon make sens blake b probabl specif concern byte equal ring provid carri still good point hash exampl provid byte slice write output ergonom terribl unergonom opinion go find right size alloc first search document probabl call method dynam alloc vector retriev data sometim even truncat result length got elsewher result actual return valu anoth one even use inlin function pointer function program style return valu definit fix size ciphertext someth librari implement perform sensit user regular result function e one work call hood current still solut associ type trait everi implement need specifi want thing probabl mean everi crypto librari copi implement see provid gener api crate imo digest output hash function correct term agre right term result modul name yet insid find digest find digest function even though cryptograph seem term averag user look cryptograph hash function expect find modul agre right term result modul name ring digest yet insid find digest find digest function even though cryptograph seem term result type result type averag user look cryptograph hash function expect find hash modul openssl seem prefer term digest e g see see pkc e g agre often best pass data around prefer work mode sinc requir almost ring regard whether digest implement etc plan ring least implement peopl want featur hope abl rid futur though plan familiar far tell environ correct heap return ciphertext function correct mayb see right well ring librari work environ among goal common api trait usabl misus resist though doeesn go far without vector friend unless pretti high number crypto user probabl worth support case simpl api common trait design std mayb even move std eventu user regular ring api directli know around low level api anyway current plan make ring crypto librari depend api crate thu transit depend either api crate need cargo featur en disabl crypto librari need one turn depend api crate api crate depend crypto librari instead round prefer work mode solut allow ring compil mode allow use simpler api trait ring even need higher level api take care feed data ring lower level function regard whether digest implement etc plan ring sodiumoxid rust sodium seem go round appar implement everyth possibl even sip hash cryptograph hash digest motiv least use trait implement ring pretti import vulner time attack happen past user compar hash valu normal rust sodium implement constant time comparison misus resist offer constant time comparison function somewher enough need default thing happen e need obviou easiest oper motiv least use trait implement ring partialeq pretti import vulner time attack happen past user compar hash valu normal rust sodium implement partialeq constant time comparison goal ring make unnecessari ring user compar digest equal make imposs thu time attack avert impli let user access underli hash valu hexadecim current far common case though probabl influenc crypto api current offer impli digest let user access underli hash valu probabl right make imposs part goal unreason entir point api comput final digest extract howev hope case one want compar digest output equal instead offer better api avoid even expos digest exampl ring hmac api ring signatur verif api ring aead open api avoid expos valu comput digest authent tag e succeed make imposs user screw user comparison current one abus sign seal api dumb thing far fix think offer better api advertis make default api make easiest ring hmac api ring signatur verif api ring aead open api begin think hash best exampl time one analys first simplest kind api mani case peopl hash non crypto purpos henc way unsound crypto purpos hmac aead probabl use actual secur critic purpos go look next hmac case expos digest though see everyth still work advertis function case hmac digest need sent wire save disk store databas earli decemb analysi turn user github seem think need serial hmac discuss move somewher crypto api design discuss thread whether includ crypto api implement trait standard librari rust lang nurseri hmac case ring hmac sign ref expos digest though see everyth still work advertis verifi function right need output hmac valu serial hmac use key verif sign one ab tradit sign compar stuff abus sign api mention earlier comment hope improv hmac sign api make kind misus imposs least obvious wrong try implement workaround possibl misus mayb discuss move somewher crypto api design discuss thread whether includ crypto api implement trait standard librari rust lang nurseri agre discuss probabl get ahead actual issu suppos discuss regard actual suppos discuss think much great work done varieti crate shelv issu let peopl continu great work throughout revisit issu time build roadmap trait associ type cannot use determin return type function exactli sure mean function certainli use yup miss understood someth wrote thread,22,177,crypt|openssl|cipher|hash|tls|authorise|encrypt|signing|aes|rsa|safe|signature|private key|public key|protect|attack|availability|hmac|sha|vulnerability|authentication|security,2302,0.07688966116420504,0.6595776677131653
3274,https://api.github.com/repos/quicwg/base-drafts/issues/3274,issue,encrypt retri token,singapor reach impass regard encrypt retri discuss two outcom consid encrypt use fix key nonc encrypt token put origin destin connect id aad along entir packet encrypt token use fix key nonc take first byte origin destin connect id aad includ connect ids version first reduc run ghash fix xor final tag realli want save effort implement measur second implement naiv build new aes key everi record terribl slow x slower nasti trick abl aes version x slower given rel cost function think accept cost guarante correct even check program produc right output count oper approxim right post issu code found case reproduct valid thrill output sampl run old machin mb retri packet fed differ implement take second complet obvious microbenchmark rest cost elsewher tri isol variabl hope help decis make process,sinc realiz even overli pessimist outcom precomput xor stream ctr protect possibl make even faster version protect form result narrow gap ghash encrypt variant differ limit perform xor fix valu singl aes oper experi margin cheaper extra ghash oper though addit odcid aad rare full block hard predict exact outcom sinc realiz even overli pessimist outcom precomput xor stream ctr protect possibl make even faster version protect form miss someth wonder precomput xor stream nonc possibl regard number martin thank collect think benchmark confirm expect cost run aes base fix key differ nonc matter convent cpu aes offload use though think question requir ddo mitig box capabl run aes fast miss someth wonder precomput xor stream nonc possibl oh realiz yesterday lot precomput littl much forget bit number basic correct result differ system ignor absolut valu concentr rel valu went compar time encrypt byte versu time authent byte result two implement aes gcm one openssl crypto librari anoth window bcrypt librari measur use bit code window laptop encrypt decrypt authent verifi bcrypt openssl c time measur microsecond averag oper see time fraction microsecond case encrypt oper expens simpl authent brcrypt openssl decrypt oper expens simpl authent brcypt almost openssl result make lean toward encrypt token use origin connect id nonc feel overli strongli let folk share thought hear back add encrypt possibl valu produc authent high gcm implement still run aes oper necessari calcul mask ghash fix key nonc oper replac simpl xor addit optim obviou requir break aead box open expect happen implement realli care everi cycl increas differ littl mayb much x x newer cpu think point need see data support argument encrypt token slow think view cost recipi retri packet current simpl look token iiuc encrypt token replac hash lookup decrypt oper take back stateless reset retri confus apolog nois seem insignific cost given success quic connect involv quit lot cryptographi tue dec dmitri tikhonov wrote cost recipi retri packet current simpl look token hash iiuc encrypt token replac hash lookup decrypt oper receiv comment repli email directli view github unsubscrib work hardwar vendor dos mitig azur give littl time try back data far cost client retri imo higher better goal scenario make expens attack spam initi packet normal client creat singl connect cost insignific ekr point quot hardwar partner preliminari number due code librari complex team aes test gener result ghash main thing encrypt vs encrypt use encrypt base x ghash calcul cpu usag roughli x higher expect aes x x slower ghash look x x slower encrypt vs aes encrypt bit detail follow preliminari number sinc ghash benchmark base factor differ cpu gener aes support littl bit reduc cours code tune optim took librari mention link know much room left tune ghash aes attach littl bit detail still opinion sinc retri packet almost pure dos mitig mechan view absolut simplest design take still absolut necessari nice instead els squeez featur hope make expens agreement interest detect corrupt retri packet ghash equival adequ everyth els nice care much think agre nick reason start issu look corrupt transmiss focu simpl checksum suffici start spin bit checksum crc fnv key aesgcm md fact curios spec ghash think need bikesh checksum alreadi agre cupertino gmac peopl seem call ghash appar equal aes gcm empti plaintext think anyth checksum unnecessari corner case scenario nat make common case expens given dos protect scenario system deem attack mechan pick must least cpu intens vote keep simpl checksum anyth unnecessari need demonstr agre let stick checksum gmac ghash agre cupertino clear ghash underli hash algorithm gcm addit aes encrypt track somehow need key specifi content somewher place result gcm provid framework gmac use gcm framework addit authent data without encrypt plaintext sinc encrypt gmac gmac essenti ghash clear specifi input output paramet probabl extra aes block encrypt gmac deriv ghash key possibl extra aes block encrypt output compar raw ghash rememb exactli use raw ghash gmac avoid need aes modul hardwar requir carryless multipl clmul effici oper imagin case relev even low end microcontrol like sha aes hardwar clmul least perspect poli effici given natur retri depend aes gcm elsewher protocol gmac ghash make sens gmac much simpler ghash exist librari ghash use directli one ensur safe appli context suppli key wherea gcm thu gmac well understood even cost block encrypt extra pr propos gmac use simpl implement gcm someon look save one aes oper run ghash xor save number primit someon will build silicon implement fairli effici odd middl space softwar implement low end hardwar littl wors win need fewer primit low end devic probabl need extern help dos mayb say net win clear nick situat ideal either implement gmac hardwar certainli free fall back softwar fast style standalon dos protect otherwis rel simpl number compet concern need balanc think avoid aes gmac least endpoint verifi mac gcm first receiv master key split two key one encrypt one ghash key split done aes oper unless endpoint agre ghash key directli need aes deriv ghash key edit miss fix key retri aes oper necessari rather precomput sure safe fix key gmac collis restanc gcm ghash limit traffic roughli byte place requir non reus yes secur sens meet ind cca publish key rfc point reduc checksum argument encrypt amount desir make access retri difficult casual observ someon copi rfc obvious troubl goe gmac due reason other laid note unlik middlebox ossifi fact valu token field retri initi packet equival base behavior develop see wire retri expect use attack develop read spec token ossifi regardless encrypt retri packet gmac though care much resolv one remain wire imag issu prior draft actual outcom think import draft last wire imag chang thread got poorli fork alreadi mark propos readi mark propos readi well realli agre reason will conced rough wed dec pm jana iyengar wrote thread got poorli fork alreadi mark propos readi mark propos readi well receiv comment repli email directli view github unsubscrib,19,139,encrypt|crypt|nonce|hash|aes|validate|protect|ddos|forge|authentication|openssl|sha|signing|attack|spam|checksum|crc|safe|security,1124,0.12366548042704627,0.6562512516975403
44,https://api.github.com/repos/multiformats/multihash/issues/44,pr,add md non crypto hash close,add md xxhash spooki murmur variant crc,ad hash function start ad default maximum length hash alongsid split default max exampl blake b produc hash output byte hash truncat case default maximum make implement multihash variou languag much easier thank track csv yeah implement try check valid max hash annoy track sourc bug across implement implement global max want impos worth consid lot non cryptograph hash heap includ variant crc alon singl byte enough worth consid utf scheme x indic byte hash number although backward incompat move size chang scheme somehow stone stage although see heap implement anoth approach xff code indic hash realli wrap anoth multihash differ lookup tabl hash still specifi size keep compat mean size specifi twice whole wrap multihash actual digest size mayb specifi whole xf otherwis limit common alreadi standardis varint encod multiformat referenc max hash discuss issu happen mulithash request longer output hash function singl byte enough see merg intent varint eventu time referenc max hash discuss issu happen mulithash request longer output hash function hmmm right complic implement evalu guess made wiki hash one place metadata put page repo markdown neg github wiki much harder keep date littl review etc thank look great pleas wiki wiki notifi edit lend review keep markdown doc repo pls want collab make sure thing merg faster know abl keep top prs timelyli mon aug david c bishop notif made wiki page hash one place metadata receiv mention repli email directli view github mute thread came look support seem pr add merg pleas mani hardwar vendor includ fip reli crc standard repres help,5,29,crypt|hash|crc|validate|encode,272,0.10661764705882353,0.6541502475738525
693,https://api.github.com/repos/quicwg/base-drafts/issues/693,issue,specifi aead base protect cleartext packet,base discuss pragu provision algorithm aes gcm key deriv client connect id fix key bake quic version otherwis standard aead,think obsolet major issu aes gcm benefit alreadi pleas consid aes cmac much lighter job clear text thu version neutral e g implement forc carri gcm machineri want crypto specif version notabl middl box easier rational gcm ian want encrypt plaintext yes worri day quic version n want support tls want deal old middlebox ossifi quic tls ah see appli version negoti packet mind client version assign wait refactor tri avoid merg conflict version negoti client send initi packet version unknown server server see header cannot decrypt content know version specif key server repli version negoti packet encrypt correct ian suggest version specif key predict version decrypt predict middlebox deriv key decrypt usual ossifi thing sun jul pm ekr wrote ian suggest version specif key predict version decrypt decrypt version negoti packet version negoti packet n version right see point go aead encrypt key entir predict packet allow us replac aes gcm someth els futur mere speed bump ossifi nat rather stick fnv see point key specifi part document specifi specif version mean nat develop decrypt data version x without read spec version x iron proof guarante nat develop decid read part spec specifi key ignor part peopl point misbehav document specifi version specifi algorithm allow evolut mean server receiv packet wrong version abl understand packet header idea make key algorithm version specif absolut pretend support version understand risk alway nat latch one version block version prefer rang subtl noxiou stuff otherwis server send version negoti packet know version choos version know client support one right version negoti unencrypt think consist defin version purpos fix algorithm f x x think agre think need version hack base spec say clear text packet integr protect mention anyth kind version negoti packet read spec version negoti packet protect mean version spoof transport paramet repeat content result renegoti spoof detect probabl fine without protect hazard version negoti indistinguish internet nois think decid comfort yes ok internet nois issu version negoti sent client accept connect id sequenc number match client expect ip sourc address udp sourc port two object prevent path attack abl inject packet aead packet key deriv client conn id regardless whether mix version specif key actual matter whether encrypt conveni mean new transform prevent middlebox tri read content version know strong defens obvious requir unpredict per version key ian seem think valu predict key fine go along fine wrt variou suggest made import vn protect path attack well otherwis attack inject caus connect failur packet rememb protect inject packet pre crypto need negoti protocol protect full path attack thu need tie clientiniti whole point issu gener rather per packet specif propos directli henc aead origin propos hmac think unprotect think right approach variant suggest version specif key label unpredict bake version publish e key hkdf connid version label vn alway use predict label say impact vn integr protect expect alway send vn server receiv packet version total know send vn even packet actual invalid seem accept attack produc valid packet elicit vn work ekr propos approach vn packet current echo piec client packet seem unnecessari encrypt vn clean want separ issu deal one done agre jana ad server stateless retri bucket thing examin risk encrypt vn packet move specif encrypt least packet chang version realm want codifi someth requir keep old moldi crypto around express quic version support longer crypto whatev version negoti wind one consist one eventu chang encrypt one start honest though agre protect path attack interest wed aug pm mike bishop wrote risk encrypt vn packet move specif encrypt least packet chang version realm want codifi someth requir keep old moldi crypto around express quic version support longer crypto complet agre point think minim vn packet format probabl best mike ryan suggest treat vn special snowflak undoubtedli leav unencrypt fnv hash nomin protect path attack alreadi connect id echo cover without encrypt sympathet idea want old crypto sit around handl vn packet happi treat vn packet special leav unencrypt think care enough bit flip vn packet need fnv hash alon still weak udp checksum cover suggest encrypt fnv hash wed aug pm janaiyengar wrote mike ryan suggest treat vn special snowflak undoubtedli leav unencrypt fnv hash nomin protect path attack alreadi connect id echo cover without encrypt sympathet idea want old crypto sit around handl vn packet happi treat vn packet special leav unencrypt think care enough bit flip vn packet need fnv hash alon still weak udp checksum cover receiv comment repli email directli view github mute thread sgtm happi vn encrypt fnv hash special snowflak likewis encrypt hash exactli two packet type version independ make inher special snowflak argu use scheme stateless reset well stateless connect reset yep sinc everybodi agre let add vote fnv encrypt vn christian huitema aug pm mike bishop wrote yep receiv mention repli email directli view github mute thread vote ietf christian vote thu aug christian huitema notificationswrot sinc everybodi agre let add vote fnv encrypt vn christian huitema aug pm mike bishop wrote yep receiv mention repli email directli view github mute thread receiv comment repli email directli view github mute thread jana realiz right finish nice bottl wine island moor boat yes cours pretend vote christian huitema aug pm janaiyengar wrote vote ietf christian vote thu aug christian huitema notif wrote sinc everybodi agre let add vote fnv encrypt vn christian huitema aug pm mike bishop wrote yep receiv mention repli email directli view github mute thread receiv comment repli email directli view github mute thread receiv mention repli email directli view github mute thread still need proof vn packet come path current echo header still right answer think protect good packet encrypt connect id sinc inform requir gener vn case agre echo connect id seem provid suffici entropi defend path attack wed aug pm janaiyengar wrote think protect good packet encrypt connect id sinc inform requir gener vn case receiv comment repli email directli view github mute thread wed aug pm christian huitema wrote jana realiz right finish nice bottl wine island moor boat yes cours pretend vote vote next interim christian boat moor island believ christian far seattl thing special snowflak anti inject see make thing better wed aug pm ryan hamilton wrote agre echo connect id seem provid suffici entropi defend path attack wed aug pm janaiyengar wrote think protect good packet encrypt connect id sinc inform requir gener vn case receiv comment repli email directli view github mute thread khuakdz tqgutdbhlpk ks sutg gajpzm offhh receiv mention repli email directli view github mute thread mike point vn stateless reset special snowflak matter point sinc whatev go becom stale sooner later leav plaintext seem cleanest approach make sens especi sinc addit protect encrypt forev fix key thu aug pm ekr wrote thing special snowflak anti inject see make thing better wed aug pm ryan hamilton wrote agre echo connect id seem provid suffici entropi defend path attack wed aug pm janaiyengar wrote think protect good packet encrypt connect id sinc inform requir gener vn case receiv comment repli email directli view github issuecom mute thread khuakdz tqgutdbhlpk ks sutg gajpzm offhh receiv mention repli email directli view github mute thread abd ori adgeaad bq cijjmmlabggk sutchgajpzm offhh receiv comment repli email directli view github mute thread think valuabl consist defens easi reason howev seem consensu packet vn stateless reset vn integr check send pr packet discuss vn seattl thu aug pm janaiyengar wrote mike point vn stateless reset special snowflak matter point sinc whatev go becom stale sooner later leav plaintext seem cleanest approach make sens especi sinc addit protect encrypt forev fix key thu aug pm ekr wrote thing special snowflak anti inject see make thing better wed aug pm ryan hamilton wrote agre echo connect id seem provid suffici entropi defend path attack wed aug pm janaiyengar wrote think protect good packet encrypt connect id sinc inform requir gener vn case receiv comment repli email directli view github issuecom mute thread khuakdz tqgutdbhlpk ks sutg gajpzm offhh receiv mention repli email directli view github issuecom mute thread abd ori adgeaad bq cijjmmlabggk sutchgajpzm offhh receiv comment repli email directli view github mute thread akjg fdaapr ovpcdh u b tgdo lkyrk suezggajpzm offhh receiv mention repli email directli view github mute thread sorri thought respond drop yes plan sgtm discuss seattl aead protect cleartext packet type leav stateless reset version negoti ekr produc pr aead protect process add text make clear er stateless reset version negoti special see mean rid initi packet number random serv proof onpath mon oct pm martin thomson wrote close via c b receiv subscrib thread repli email directli view github mute thread tue oct patrick mcmanu wrote mean rid initi packet number random serv proof onpath love remov packet number random start sn sn realli ban pain ha interest remov random sgtm yes pleas pleas sn special,17,111,protect|aes|crypt|encrypt|tls|signing|hack|integrity|spoof|transport|attack|inject|defense|hmac|validate|hash|checksum,1503,0.07385229540918163,0.6520059704780579
38,https://api.github.com/repos/multiformats/multihash/issues/38,issue,varint limit multihash,multihash plan introduc varint agre limit allow mani implement much simpler look exampl c propos futur msb varint signific bit mean still data limit byte msb th byte unus invalid mean whole varint fit bit nice featur low level languag give us possibl hash function maximum hash length cc,msb varint signific bit mean still data let decid varint multiformat put propos limit byte msb th byte unus invalid assumpt must spec make sens open door huge number byte implement detail think spec implement note recommend implement establish max suitabl purpos byte max describ adjust later necessari read like never deploy code much easier chang protocol chang client code anyway add function tabl honestli even implement varint tabl get past function give us possibl hash function spec must make assumpt seem ridicul tendenc becom true cannot know lie futur maximum hash length multihash must maximum hash length ok understood write c start think therm max handl thing let leav limit implement think address,3,12,hash|signing|validate,167,0.0718562874251497,0.6461060047149658
424,https://api.github.com/repos/srvrco/getssl/issues/424,issue,sporad error ec sign r,sporad error ec sign r obtain renew certif error origin sign string root caus asn encod digest pars digest encod sequenc integ r integ code tri decod use string oper hex encod asn account possibl integ encod asn allow lead zero omit intermitt natur problem due differ random nonc chosen part key r chanc first byte zero thu chanc given sign fail actual greater addit contribut valu one lead zero byte actual failur getssl error ec sign r f cf b ed bd dc b c de b c c ae b c c aa e e dc e b baf af ed ea fc e e b baa first two byte encod sequenc length next two f encod integ length bit problem getssl code know insert lead requir restor bit valu similar issu exist bit digest code allow case lead octet use high bit prevent unsign integ intetpret neg length known error exit taken note number elid lead zero valu though unlik encod length valu even integ bit valu even less like encod length valu byte digest size even multipl encod length valu zero digest length construct signatur necessari extract encod length integ valu insert necessari left pad base digest algorithm requir recod sign string leav exercis maintain,thank detail bug report abl fix problem without thank work quick look commit reduc frequenc solv gener case note signatur encod integ asn ber encod integ variabl length four thing make difficult asn integ sign signatur unsign thu high bit integ lead octet asn encod lead octet suppress seem handl case singl lead suppress sampl failur case describ two three mani valu zero sing octet use length field one byte variabl length encod e g note unlik signatur bit valu encod length valu structur sequenc length integ length valu even though expect bit thu reliabl length signatur infer hash type sha give charact string shown sha must handl integ length digest size exampl suppos exampl r first two byte encod sequenc length next two e encod integ length bit need pad byte code rememb bit signatur need pad byte e g signatur f sha pad byte requir case extra lead first byte signatur ff wrote fix gener case construct signatur necessari extract encod length integ valu insert necessari left pad base digest algorithm requir recod sign string good news statist unlik maximum number lead zero e g patch reduc frequenc error complet fix requir rethink code work first need someth string length determin signatur algorithm say second need handl possibl integ encod length signatur structur length non trivial left exercis maintain understand want look gori detail deliv bad news hope help clear issu close pleas open fwiw statist mention origin code chanc trigger bug r thu note origin one valu first byte commit fix reduc overal first two byte add third bye odd reduc overal first three byte make reason assumpt signatur differ independ nonc hash promis high confid correct gener solut hash type determin expect length decod asn pad full expect size probabalist patch improv thing realli kick road harder diagnos reason patch problem determinist understood engin solut handl case fix reason easi result fix reason easi result quit yes output somewhat easier pars issu r need pad full length digest obviou output bit per hex digit lead zero includ final result concaten r asn type length includ case length encod length integ size receiv split midpoint know digest length exampl r one byte shorter lead zero suppress thu receiv odd length know boundari r lead due fact initi byte necessari integ sign degener case r valu note previous encod clue whether ingeg valu bit long need final result note r actual length differ encod length case solut start digest type give length pad respons length one prefix whatev mani zero length digest take righmost bit rocket scienc quick fix suspect digest length signatur length problem need pad length one prime v secp r secp r avail key file ps delet key chang similar propos solut branch wait test stage server releas test algorithm type although think prefer chang probabalist patch improv thing realli kick road realli sink talk number least bit bit round next correct size probabilist patch total okay encrypt probabilist exercis size,10,59,signing|certificate|encode|decode|nonce|signature|hash|sha|availability|encrypt,711,0.0829817158931083,0.6414453387260437
49,https://api.github.com/repos/multiformats/multihash/issues/49,issue,number hash match iana,much prefer number hash iana miss easi add registri make much easier publish internet draft multihash without creat yet anoth registri,number iana nice wont work us tabl go grow well beyond one includ histor hash broken non cryptograph hash worth mention contact peopl ietf iana problem us use tabl open issu want multihash come ietf realli good number scheme iana perhap one histor hash use valu done lot work within ietf volunt write proper draft requir chang current multihash constant non starter yes point break exist hash realli option assign rang iana hash duplic realli improv iana registri hash function sever list alreadi exist ccnx hash function draft dnssec nsec hash rfc dkim hash rfc eap hash rfc gsakmp nonc hash rfc hash function textual rfc hash algorithm http digest rfc ike hash algorithm valu rfc ikev hash rfc manet hash rfc cert hash payload field rfc rfc name inform hash algorithm rfc netnew cancel lock hash rfc ppsp peer protocol merkl hash tree function rfc pgp hash rfc rtsp accept credenti hash rfc syslog sign hash algorithm rfc tls rfc rfc vnc uri id hash rfc sure hash function list standard bodi well,7,37,hash|crypt|signing|nonce|pgp|credential|tls,200,0.185,0.6358016133308411
2064,https://api.github.com/repos/quicwg/base-drafts/issues/2064,pr,amplif attack use retri token spoof address,design address valid procedur prevent quic server use udp base dos amplif attack default send initi packet quic server result full size udp packet sent back origin address perhap sever server repeat packet timeout address valid turn server answer initi packet carri proof origin form token address valid server free send mani packet respons initi packet concern valid procedur bypass replay attack let imagin attack manag locat close enough target abl observ initi retri exchang sourc address remot server obtain copi retri packet attack enough inform manufactur initi packet pass address valid server sent spoof address target attack pass inform botnet larg number bot send spoof packet server result massiv attack target whether attack plausibl depend server perform address valid current draft present littl guidanc server implement simpli verifi token associ sourc address client botnet run unimped token time live attack run unimped time attack block server enforc token use current draft requir look modifi picoqu implement protect attack simplest defens found emb ticket connect id server connect id provid client part retri packet chang easi token provid new token frame sent client initi packet server extract cid token chose new connect server cid defens perfect ensur botnet abl creat one connect time token limit time live attack effect thwart say implement adopt server cid defens goal prevent token reus server certainli way achiev ask ask server prevent multipl reus token,good sentiment feel ask much happi negoti instead make requir server document attack secur section explain client server enforc singl token thu realli try reus token multipl time yes expect reus possibl fine best think dos protect short timer suffici good amplif factor enough quit burden server ensur singl token seem strong sure enforc singl server abl ensur singl server need seriou infrastructur enforc across fleet adequ suggest server must includ timestamp token expir token within short period time second basic retri yes short life time plausibl expect see token next packet new token frane need lifetim session resum ticket right attack token sent retri right yes retri token easier steal new token make sure protect least nice think attack new token valid target ip probabl need run least one connect target amplif server rel easi want demolish public network connect guest token bunch server flood network access point yes still risk suffici path observ packet sent client server obtain token sent new token frame get retri token margin easier sinc observ direct allow direct traffic ip address expiri date token day good point attack token observ client follow rewrit take account ian comment token need obtain fraudul take account jana comment big server farm much easier limit lifetim enforc singl main point forc client assum ever reus token add descript attack secur section think suggest make sens token tie client ip realli use gener amplif attack sinc attack need spoof origin client ip direct traffic specif client sure effect attack requir token encod client ip server verifi miss someth whole point token mechan protect spoof ip address attack yes attack routin send packet spoof ip address ok mayb need read thing idea token receiv send back prove ip steal token spoof sourc ip ddo target server attempt handshak target think address valid suggest ensur token cryptograph encod ip attack cannot forc handshak anyon client stole token tricki variat attack initi handshak spoof sourc ip hope gener retri attack suffici close target server observ retri token abl share token mani bot token initi spoof valid handshak toward target even token cryptograph encod target ip help spoof handshak match token edit target target server amplifi spoof ip target act involuntari quic client real final target attack suggest alreadi spec problem connect attempt trigger sever packet toward spoof address attack amplif mechan ok thank explain text seem reason context harvest token long time period without know target advanc differ steal token real time brief attack token ip valid disabl unlik deploy server behind nat ing load balanc token ip lb instead target quic server directli attack attempt punch hole nat spoof ip possibl token fetch ordinari connect assum token cover port number port number like includ token prevent new length cid connect refer text fail read rephras suggest make minor chang need sort linearis ever go practic client use last receiv token see accomplish praxi effect server need explicitli track outstand token much even singl server deploy describ short token life time work protect expect server issu token new token frame life time tls session ticket rememb correctli day properti realli look token use prevent dos attack suffici server accept token within short time span let say order magnitud second attack manag obtain copi token origin sent new token frame make server send serverhello certif client everi second annoy suffici dos attack believ straightforward implement server either keep short live token recent use mayb even bloom filter clear regular interv short token life time work protect expect server issu token new token frame life time tls session ticket rememb correctli day sure correct iiuc reason split inform maintain across connect tls session ticket token differ properti includ lifetim token per path object short span clear think clarifi recal correctli intens discuss rtt session ticket reus tls work group form rtt replay attack prevent session ticket use least session ticket enabl rtt data per discuss show hard handl big server farm requir central manag state across mani server see section rfc rtt anti replay result compromis understand ensur token seem equal hard although possibl solut quic avail tls basic quic server farm architectur assum load balanc rout packet specif server base destin cid possibl cid function content retri token simpl alloc destin cid format new token reserv cid part encrypt content token load balanc rout base cid decrypt token individu server select destin cid base token definit limit token reus understand correctli requir load balanc decrypt key rtt token server distribut certainli possibl case think complex mani altern give cid rtt token make fairli easi problem solv sorri pr retri token nevermind previou comment recal correctli intens discuss rtt session ticket reus tls work group form rtt replay attack prevent session ticket use least session ticket enabl rtt data per discuss show hard handl big server farm requir central manag state across mani server see section rfc rtt anti replay result compromis think talk differ secur properti quic token design prove reachabl specif ip address contain sensit inform beyond token reus therefor problem use attack flood client unwant traffic either client network handl given time short token life time work protect expect server issu token new token frame life time tls session ticket rememb correctli day sure correct iiuc reason split inform maintain across connect tls session ticket token differ properti includ lifetim rememb correctli reason split enabl token valid without pars packet content hand tls stack said think right token differ life time session ticket sinc isp reassign new ip address custom everi hour least typic germani token becom worthless time therefor expect new token token valid around durat even case token valid order minut problem attack captur token make server send traffic high amplif factor client lifetim token even problem retri token valid second attack caus high load path client succeed creat enough congest packet belong actual handshak drop attack replay token server amplifi ddo attack protect attack server ensur token sent retri packet accept short time token provid new token frame see frame new token need valid longer accept multipl time short period server encourag allow token use possibl work point token accept connect attempt fail halfway client make new connect attempt token token happen perhap server gener anoth token return new retri packet merg anyon oppos perhap server gener anoth token return new retri packet retri done afair connect attempt fail halfway client make new connect attempt token token happen token logic tie origin cid valid context origin connect client repeat second retri initi packet cannot reus token new connect attempt new cid connect fail new attempt start scratch,20,117,attack|spoof|signing|validate|bypass|botnet|protect|defense|security|steal|fraud|scripting|encode|ddos|crypt|tls|certificate|availability|encrypt|sensitive information,1339,0.08737864077669903,0.6344233155250549
1293,https://api.github.com/repos/quicwg/base-drafts/issues/1293,issue,payload length header encrypt sequenc number,interest featur interact pn encrypt encod payload length header current specif pn encrypt pr specifi encrypt byte field start offset packet number current specif long header place payload length packet number payload length get encrypt packet number royal pain mean payload length cannot assess decrypt packet number,see pr believ incorrect long header packet number alway fix bit field alway find payload length without decrypt fix size field find anyth pne pr say encrypt larger region packet number field line number pr account compound packet assum encrypt payload begin immedi packet number sampl purpos minor fix problem ambigu yes fix make crystal clear byte packet number encrypt long header byte start packet number offset short header pleas fix ok fix implement pne encrypt byte follow pn offset test pass still small doubt logic pne suppos tie packet number length short header suppos encrypt octet base actual pn length fine encrypt four byte close sinc merg,3,14,encrypt|crypt|encode,162,0.08641975308641975,0.6264835000038147
197,https://api.github.com/repos/quicwg/base-drafts/issues/197,issue,move pad crypto layer,think good make pad respons crypto layer tls alreadi reason pad scheme steal,probabl requir tweak tls right specif impli second clienthello helloretryrequest modif besid extens impli tls need allow pad extens chang first second clienthello sorri follow comment mayb need expand bit point intend pad forc ch contain frame mtu need adjust ch hrr case tls make distinct pad first handshak messag ch gener record pad seem good quic pad encrypt data encrypt layer oh sorri complet misunderstood ticket pleas ignor thought refer use rfc pad initi packet work without chang think pad suppos countermeasur traffic pattern analysi exampl peer pretend upload realiti send ack download lot pad sure possibl tls sinc spec requir tls appropri crypto protocol argument remov pad frame unless make abil send arbitrari pad requir crypto protocol use quic intent initi handshak packet pad avail layer pad pad tls extens tls record layer pad server flight port record pad tls packet protect pad exist talk discuss tue jan martin thomson wrote intent initi handshak packet propos pad ch packet protect anyth beyond pad avail layer pad pad tls extens tls record layer pad server flight port record pad tls packet protect pad exist talk discuss yes discuss receiv mention repli email directli view github mute thread sinc pad use ensur mtu larg enough direct quic go hard ensur crypto layer add right amount pad gener packet desir size seem suggest appli crypto handshak chang titl issu move crypto handshak pad crypto layer point chang pad singl byte allow pad place frame request seem use featur remov got rid pad entir think quic pad go away given issu becom sometim move pad crypto layer go make congest control byte flight count potenti complex sinc sometim pad one place sometim orthogon sinc need decid want quic work pad put pad chang want pad count toward byte flight one pad ping two differ case approach given reason keep open live close sat nov pm ianswett wrote point chang pad singl byte allow pad place frame request seem use featur remov got rid pad entir think quic pad go away given issu becom sometim move pad crypto layer go make congest control byte flight count potenti complex sinc sometim pad one place sometim orthogon sinc need decid want quic work pad put pad chang want pad count toward byte flight one pad ping two differ case approach given reason keep open receiv mention repli email directli view github mute thread,6,30,crypt|tls|steal|encrypt|availability|protect,416,0.07211538461538461,0.6183292865753174
554,https://api.github.com/repos/quicwg/base-drafts/issues/554,issue,reconsid fnv cleartext integr,consensu fnv provid integr packet non adversari set howev observ still potenti worri packet inject path attack natur design pre handshak integr check somehow key inform clienthello e g conn id case probabl want someth hmac though necessarili requir,complic provid proof receipt think rather avoid inject bogu handshak packet path attack reconsid talk idea encrypt use aes gcm version specif key convinc good idea aes gcm hardwar offload common featur abl much possibl nice forc middlebox want tls inspect stay date latest version otherwis abl inspect sni make futur chang tls less like ossifi sinc middlebox frequent updat abl see new version tls given recent deploy issu tls think point valuabl previous believ furthermor brought chicago greatli simplifi code path well crypto offload current iincom encrypt packet decrypt asynchron handshak packet handl immedi littl complic think ok free packet enough well mess emerg memori leak someday similar logic send packet greatli simplifi permut packet alway encrypt matter switch insecur key secur one thu jun pm ianswett wrote reconsid talk idea encrypt use aes gcm version specif key convinc good idea aes gcm hardwar offload common featur abl much possibl nice forc middlebox want tls inspect stay date latest version otherwis abl inspect sni make futur chang tls less like ossifi sinc middlebox frequent updat abl see new version tls given recent deploy issu tls think point valuabl previous believ receiv mention repli email directli view github mute thread idea greatli simplifi permut packet alway encrypt matter switch insecur key secur one hold encrypt necssarili aes gcm handshak new version low end iot devic aes acceller want chacha instead devic gener implement sinc handshak kill simplic argument previous privat mail author suggest sign cleartext header use cmac algorithm version specif key much simpler aes gcm better suit non version specif implement cmac encrypt aes still use concern ossif regard ossif risk middlebox work understand protocol thu reject newer quic version key make problem wors specul experi issu edit sinc signific part cleartext packet version negoti wonder well version specif key regard earlier cmac proposos motiv filter packet quic expend semi expens crypto hash algorithm other argu crypto gener fast enough non concern add iot devic live crypto delay power drain handshak refer cmac propos march sent addit concern expens verifi malici corrupt packet rais other slide header abus new prtocol quic ought fast verif origin header done receiv forc full packet authent aes gmac least requir gmac comput entir packet anyth byte jumbo frame attack inject valid connect ids invalid authent tag high rate attack even need spoof sourc address sinc quic support connect migrat fix length aes cmac header field solv problem cost longer header process gener implement opt ignor long packag authent origin sens simpler approach given short fix length header follow studi detail start point concaten byte connect id byte packet number xor type byte msb packet number yield byte block encrypt deriv traffic key sinc deriv key fix size singl block realli need full cmac machineri result encrypt valu truncat two byte give attack chanc guess tag ought make effici dos attack furthermor fairli straightforward implement hardwar traffic key avail unencrypt packet header tag zero absent detect via type byte one problem approach trivial replay exist packet either keep repeat valid packet intent corrupt long version tag attack lucki bad packet ahead good packet receiv need drop duplic packet anyway attack mere replay packet matter one get ahead anoth problem approach requir use aes protocol header like much faster hmac sha virtual platform access aes still entir option perform check approach randomis packet sequenc number like need return diversif nonc differ form cours cost two byte probabl worthwhil relat public reset proof sure crypto context valid point requir attempt forc reset follow mail approach discuss earlier extend unauthent header protocol version publish fix aes key sever version key protect header two byte tag protect packet serv dual purpos provid protocol magic byte header hash help separ traffic udp protocol extent middl box manipul unprotect header possibl help mitig dos attack tls handshak studi handshak intern prevent start tls machineri first place risk middl box hardcod key make protocol version difficult chang reason key necessarili tie specif protocol version proprietari deploy hous databas connect configur random fix custom key header tag intend strong encrypt prevent random extern commun earli reject tls key cannot trivial guess tag bit suffici provid non idempot rtt transact sure alreadi consid someth along follow line complet yet studi rtt detail appear simpl bit counter along store crypto context enough prevent replay attack case public tag key replac cmac includ bit counter store crypto context client server counter field extra inform addit header full cmac singl aes encrypt requir counter place high part implicit bit packet number tag two byte still insuffici handl idempot rtt transact allow earli reject tls engin replay tag extend two byte probabl better includ counter full rtt handshak protocol includ tag counter must larger previou connect attempt small amount small enough retri differ counter counter necessarili includ header hash form leak inform mani connect attempt made strictli need counter add complex server cluster counter must synchron must crypto context allow variat next counter valu handl sync delay interrupt connect attempt unstabl connect delay server sync fallback rtt counter explicit header dos attack forc mani cmac counter increment attempt must small increment replac,23,105,integrity|adversarial|inject|attack|signing|sha|hmac|encrypt|crypt|aes|tls|leak|insecure|security|authorise|hash|malicious|authentication|validate|spoof|availability|nonce|protect,899,0.1167964404894327,0.6082519292831421
1492,https://api.github.com/repos/quicwg/base-drafts/issues/1492,issue,packet number must decrypt read initi token field,initi packet token rest long header packet number must decrypt first determin start offset token length field token field add requir ddo mitig devic simpl read token field valid address ownership pass packet along send retri packet crypto support packet number follow token longer requir hardwar,retri need packet number alreadi echo dcid seem answer mean retri specifi version negoti clumsi probabl better ask peopl assum retri use packet protect expect look seem issu format initi packet retri agre current format initi packet place token packet number incorrect two reason token good sourc random pne token access middlebox want deal pne ask peopl assum retri use packet protect expect look seem understand outcom stream dt outsid packet protect yes issu client initi packet agre keep outsid packet protect reduc complex ddo mitig let put length field outsid encrypt yes intent retri packet protect put token outsid packet protect given open issu retri declar scope montreal interop,5,13,crypt|ddos|validate|protect|encrypt,165,0.07878787878787878,0.6015434861183167
1170,https://api.github.com/repos/OWASP/owasp-mstg/issues/1170,issue,android usag devic identifi encrypt key,mstg suggest usag devic identifi encrypt key test devic bind section chapter x j suggest follow obfusc data store devic use devic identifi key encrypt method help bind devic app lot offlin work access api depend access token store applic believ insecur practic encrypt key gener devic identifi never directli use secur context gener encrypt key sinc valu imei android id devic id easili obtain attack physic access arbitrari code execut devic page make pr,hi welcom mstg basic item touch actual encrypt bind certain asset devic say encrypt data devic obfusc data tri secur data simpli tri bind data devic still want pull request inde enrich section say keychain attribut stronger explain ios section androidkeystor keyinfo show insidesecurehardwar true howev keystor hardwar back proper key still viabl option guess sound good altern hi prompt respons understand section discuss pertain secur data storag instead devic bind howev sinc suggest mstg bibl mobil applic secur develop secur analyst remov space ambigu think suggest encrypt data use devic identifi easili obtain applic instal devic agre help implement devic bind add addit layer secur time make sensit data store local data storag vulner even scenario wherein hardwar back secur storag avail believ viabl option instead key dynam gener use pbkdf sinc option secur key storag store anywher deriv everi time whenev requir given discuss agre need reword section secur storag devic bind make clear bind secur storag obfusc protect data equal strong secur encrypt method differ section secur storag section guess need clear note suggest made issu alreadi describ secur storag section mstg understand point goal use encrypt scenario pure bind app devic protect confidenti data instead follow discuss want creat pr make clear avoid ambigu perhap anoth nice idea extend bind next keystor aes gcm base envelop encrypt privat key keychain authent data use devic identifi idea tri explain pleas elabor basic proper encrypt make devic bind creat public privat keypair store androidkeystor keychain gener random aes key encrypt aes key keypair creat aes gcm encrypt data hand android applic identifi allow android version authent data move data one devic antoh allow easi decrypt obvious attack still misus get lot harder move next app thank descript made requir chang pleas go suggest need make improv,15,50,encrypt|crypt|obfuscate|insecure|security|attack|asset|vulnerability|availability|protect|confidential|aes|private key|authentication|scripting,380,0.13157894736842105,0.5889668464660645
2394,https://api.github.com/repos/quicwg/base-drafts/issues/2394,issue,spoof retri token attack ip authent,man side attack abl observ retri token server intend legitim client c either race c token hope token reus within limit time frame token even c alreadi done start new appar legitim connect spoof sourc address c sinc observ packet sent address issu retri token hope verifi speak trust machin network abl escal privileg c defenc authent c base sole ip retri facil lead oper believ retri reason safe ident mechan,mention retri alway land server feasibl requir retri token alway accept assum reason timeout howev still race c gain privileg less like attack download larg file flood c sinc c get mirror traffic must abl accept traffic maintain ack interest attack sever point argu first mot attack need consid attack mount malici client client first obtain one token use token creat multipl connect attack vector need fix assum alreadi note give protect path attack inject initi packet therefor protect method fine true mot attack race retri prevent legitim client establish connect howev someth need fix consid mot attack simpli inject initi packet contain connect close frame disrupt handshak lastli point anoth possibl simpler address issu server emb server cid issu retri packet retri token issu token confirm initi packet sent respons retri contain correct dcid think recommend server implement kind protect howev someth need fix consid mot attack simpli inject initi packet contain connect close frame disrupt handshak dos attack privileg escal man side observ anoth connect pretend ip origin client server grant access observ base origin client ip trust broken race packet suffici achiev race close origin client connect iff token use minor concern agre believ fix allow token use marten suggest add vulner section server must grant privileg access base client ip address verifi retri token sinc path devic path observ devic race retri packet spoof ip address dos attack privileg escal mind elabor privileg context understand noth right establish connect think argument hold assum true add vulner section server must grant privileg access base client ip address verifi retri token sinc path devic path observ devic race retri packet spoof ip address disagre node receiv packet go address x send packet state origin x initi new connect node need piggyback handshak initi true owner address x right establish connect bad enough quic server implement provid api indic connect retri prove ip provid sourc ip applic layer statu verifi thing go arbitrarili wrong even without retri think thing go wrong server api indic ip trust without retri conclus arriv later requir path attack beg question retri reason redirect new host oh alway creat new connect spoof ip even need retri token make question entir point long possibl attack gener valid token address see section client abl return token prove server receiv token attack need forg token pretend anoth ip listen server voluntarili provid token suppos requir v authent handshak conclus cannot anyth v even much reason strongli prevent token reus sinc path observ reus power anyway reason advis vulner retri protect path attack side path attack conclus cannot anyth v even much reason strongli prevent token reus sinc path observ reus power anyway cannot anyth version quic prevent mot attack spoof address ip address never authent endpoint view imposs tell whether talk legitim owner ip address x talk somebodi spoof address x otoh point want prohibit token use creat multipl connect one case retri token limit costli tls handshak oper connect establish attempt prove probabilist ip address respond retri agre sign initi packet easier trust ip although fool proof fairli non interest attack read say send receiv packet given ip address make connect address perspect reason test distinct genuin own address point number time retri token use fine one ad note expect lifetim token section fine idea discuss london think misunderstand purpos retri token practic matter assum server normal condit respond initi full first flight otherwis quic two round trip protocol better tcp builtin x amplif attack random victim purpos retri token server attack spoof packet want effici distinguish true fals ips blacklist attack retri token collect attack possibl anti dos system track ips anyway track ip address associ excess traffic anyway propos close action,18,65,spoof|attack|authentication|trust|privilege|defense|safe|malicious|attack vector|protect|inject|privilege escalation|vulnerability|validate|forge|tls|signing|blacklist,695,0.09352517985611511,0.5865663290023804
308,https://api.github.com/repos/open-guides/og-aws/issues/308,issue,mention server side encrypt,basic explan link expand kms section,relat discuss question today ahm think alreadi know answer question need confirm sse sinc amazon manag encrypt technic use sse bucket decrypt content regular iam user access bucket sinc aes right jose yup transpar long user permiss bucket handl decrypt ahm thought want manag decrypt access need sse kms jose well realli want client side encrypt sse kms tell key encrypt access sinc still server side realli case someon steal entir data center worth drive info client side encrypt store file unread even client encod decod ahm okay hang sec cloudtrail use sse kms though need grant decryptkey iam user access aws cloudtrail use aws kms aws key manag servic learn aws cloudtrail use aws kms encrypt log file doc aws amazon com grant decrypt permiss aws cloudtrail grant user permiss decrypt log cmk cloudtrail object encrypt top sse kms edit jose cmk data use server side encrypt amazon simpl storag servic protect data use server side encrypt amazon option ahm right okay think got better understand sse kms nice complianc reason otherwis sse go replic avail edit jose edit case kms pretti easi transpar ebs servic bit involv mcohen pm use sse kms audit trail simpli cloudtrail addit level report avail within kms sse kms provid audit trail key use mcohen pm wonder implement sse kms encrypt replic object point amazon keep encrypt key provid object creat sourc bucket cannot decrypt object replic therefor replic object perhap addit kms envelop key imped decrypt ajkerrigan pm sure replic question audit trail come cloudtrail good refer exampl variou kms event aws kms api call use aws cloudtrail aws key manag servic learn audit aws key manag servic aws kms custom manag key use aws cloudtrail cloudtrail log format know love info relev kms requestparamet resourc mcohen pm thank clariti doc state log file encrypt use amazon server side encrypt sse identifi sse kms encrypt object arent support replic mayb someday unless use sse c kms alreadi key certainli bit caveat must sse encrypt front center requir replic bgdnlp pm sse kms audit sse kms two point access control one access bucket object access key decrypt data subtl differ import basic mean differ object store differ key bucket peopl abl access one key sse someon get access bucket automat access data get automat decrypt sse kms need access key exampl sse kms guard badli configur access bucket make public mistak simpli harder badli configur two thing bucket must access instanc exampl associ role access key role even someon give access user bucket still data thing ahm pm look document today cloudtrail flight encrypt log file store bucket sse enabl regular sse kms c control key manag object encrypt bucket object encrypt person need standard access pull file edit bgdnlp pm understand ahm pm sorri lemm see rephras make sens cloudtrail encrypt option encrypt object iam user access bucket need access retriev object use sse kms server side encrypt regular bucket enabl sse kms sse c matter encrypt hardwar protect data theft warehous actual encrypt object storag layer underneath encrypt give access iam user requir access cmk edit bgdnlp pm mean enabl sse kms bucket object encrypt give link doc misunderstand sure side probabl mine ahm pm manag encrypt decrypt complet transpar user understood least edit bgdnlp pm enabl sse encrypt bucket ask encrypt object part yes ahm pm amazon simpl storag servic amazon use aws kms aws key manag servic discuss amazon use aws kms encrypt data data use server side encrypt aws kms manag key sse kms amazon simpl storag servic server side encrypt amazon manag encrypt decrypt look earlier key polici give servic access sse kms think find anyth state client need access cmk edit bgdnlp pm yes let see understand confus sse polici bucket requir http header ask object encrypt object try upload object header upload deni upload object header receiv object encrypt store encrypt bucket sse choos encrypt key control say chose sse care sse kms hand two header one ask sse kms encrypt one specifi key basic process addit check access key use specif key encrypt sse c requir encrypt pass key encrypt object discard key problem basic bucket polici say upload deni unless encrypt encrypt without bucket polici option clear total misunderstand ahm pm part gotten clear answer process addit check access key use specif key encrypt post questionstoday pm user bucket need access key edit sinc handl encrypt user edit bgdnlp pm user amazon access key sse sse kms amazon read data theori mean process control place access key read data trust access check user access encrypt decrypt ahm pm well key polici come cmk iam polici give access key polici allow think need test tomorrow see happen bgdnlp pm said meant ahm pm right handl need request encrypt key kms encrypt stuff think masquerad iam user session talk circl right pleas tell frustrat bgdnlp pm know exactli think masquerad user either far understand basic ask kms guy ask particular key enctypt data kms simpli say yeah good key know guy think matter say hi guy hi talk guy cmk get data key encrypt cmk one get see cmk ahm pm kinda sorta realli yeah data key sorri get late research encrypt aws day build requir nuanc tell key polici setup bgdnlp pm mean key polici give access user servic ahm pm yeah someth els bgdnlp pm oh user sure give access servic easi test though mean talk key creat kms user ahm pm condit okay guess doubl check detail final answer polici condit aws kms aws key manag servic aws key manag servic aws kms condit key context key permiss polici give user access cmk kms condit appli servic iam polici condit use permit usag specif bucket person contribut shape better form ad guid test goodi iam user must follow permiss sse kms allow upload download object sse kms user lack permiss abl encrypt object restrict cmk usag key polici must follow condit bucket polici requir sse kms even specifi key id right bucket polici requir kms encrypt use specif key courtesi aws support,12,80,encrypt|crypt|aes|steal|encode|decode|protect|availability|audit|access control|theft|trust,1021,0.07835455435847209,0.5861303806304932
3166,https://api.github.com/repos/quicwg/base-drafts/issues/3166,pr,token base greas initi packet protect,base discuss pr implement greas use new token frame conveyor defin defin three properti altern version number packet type modifi initi salt obfusc version number field long header packet type well encrypt initi packet payload three properti carri new token frame client use altern initi set resum connect use new token token server interest greas encrypt initi packet advertis valu defin specif altern initi set client behavior differ format new token frame chang text discuss separ properti distribut therefor straightforward defin method distribut altern initi e g use alt svc header field close close altern,sure actual work token embed initi packet depend actual version quic packet server process therefor think server need first consult version number wire determin token decrypt initi salt contain token suggest someth differ ps said think incent middlebox collect alias version version middlebox still cannot deciph client hello contain packet due use altern initi salt known endpoint intent middlebox ossifi protocol block particular behavior encrypt initi packet prevent attempt succeed henc less remain reason middlebox mount activ attack whole lot easier forc server commit server manag fallback case make brittl sens need make static key durabl think reason expect server probabl manag session ticket key agre much easier requir server commit time think session ticket encrypt key someth compar impact lose access altern initi salt lead handshak timeout loss session ticket encrypt key mere lead full handshak discuss esni end ad fallback e esni retri request due request one largest deploy tls far thought fallback necessari said possibl differ requir esni altern thing give server option issu differ initi salt everi recur connect server advertis altern need work deploy lose key issu static initi salt work across connect still win us consid aspect tempt drop downgrad pr see goe thank feedback think pr readi new round review remov downgrad well token checksum field clarifi longer necessari ad lifetim field new token frame still unsur downgrad good idea though agre much simpler analyz think weaken core protocol h usual need tcp fallback understand latest text correctli say new token carri lifetim server want altern salt must ensur access decrypt key lifetim token otherwis handshak timeout occur think work deploy interest deploy altern salt mechan share key across fleet server infal possibl one server get new key anoth server client hit two server wrong order end state server cannot decrypt token fine current use quic new token tls session ticket resolv band via retri full handshak therefor realli think need grace mechan handl similar ad esni question becom design fallback mechan vulner simpl downgrad attack straw man server see initi token one new token retri cannot decrypt send retri server take non decrypt token receiv client send encrypt insid retri token server retri client tri time quicv obfusc retri token add new transport paramet client send first token use connect allow server detect someon mess token flight close connect mitig downgrad attack describ straw man mani downsid includ back need checksum token attack still see sni without detect accept attack still forc downgrad tls tcp today anyway sure straw man go perhap idea repeat token transport paramet worth explor help detect class attack downgrad prevent think converg design design one pr drop downgrad regard attack think need requir origin token sent tp let explain pr requir server send retri token emb altern set new token token retri token e typic new token token found initi packet trigger retri embed retri token pr use requir client continu send new token token downgrad happen resurrect requir combin two requir possibl server detect downgrad even retri sent downgrad retri token sent version packet convey new token token client origin submit checksum one solv suggest server advertis altern set emb checksum token use key less algorithm exampl server build new token token combin aes cbc encrypt sha checksum anyway think open separ pr describ design downgrad prevent pr help us discuss issu creat add downgrad top pr hope figur downgrad design work consid cost chang phrase altern initi seed former confus default valu altern default valu defin specif talk seed default non default e altern hope flow better close relat issu close,14,54,protect|salt|obfuscate|encrypt|crypt|attack|sha|tls|checksum|signing|vulnerability|transport|aes|cbc,698,0.07736389684813753,0.585436224937439
371,https://api.github.com/repos/cloudevents/spec/issues/371,issue,event bridg cannot tell structur json data base encod,implement bridg differ event transport bind know correctli determin json structur data attribut base encod spec say contenttyp media type known contain text data attribut valu interpret treat text string otherwis decod treat binari valu awar reliabl determin mime type known contain text rfc provid explicit content transfer encod data encod expect mail client know nasti hack regexp detect non text media type clearli reliabl futur proof text text applic xml json yaml javascript html text wbxml think json format contenttransferencod attribut rfc compliant futur format handl raw binari data part abstract event reduc encod base encod data flow unmodifi differ binari structur event bind decod bodi actual requir relat think deserv separ treatment sinc affect core case event accur forward event data even care corner case binari valu map,kind surpris encod inform content type header thought thu jan doug davi wrote kind surpris encod inform content type header thought mime rfc pretti clear base content transfer encod orthogon mime type content transfer encod extra layer encod transport limit binari data e g json email featur send data type data repres content transfer encod use thing ad compress featur type chosen transfer receiv author thread repli email directli view github mute thread much pain right sinc specif json structur format problem wonder whether add attribut appli structur json encod prefer insid event format spec attribut must transfer encod anyth plain text embed json graph tue jan clemen vaster wrote much pain right sinc specif json structur format problem wonder whether add attribut appli structur json encod prefer insid event format spec attribut must transfer encod anyth plain text embed json graph think work thought gener cloud event encod attribut benefit bridg transform json structur event binari form blindli copi payload propag encod attribut drawback produc consum bind format need understand base balanc feel sacrif perform json event better impos base everybodi relat note http transfer encod content encod allow compress problem event bridg sinc clearli mark http client know deal howev wonder need allow payload compress cloud event receiv mention repli email directli view github mute thread go pr one chanc get pr one time week call bump one want base encod payload fix believ close merg pleas speak wrong need reopen,6,29,encode|transport|decode|hack|scripting|authorise,383,0.07571801566579635,0.5811234712600708
2474,https://api.github.com/repos/rust-lang/rfcs/issues/2474,pr,new rfc sign registri index commit,rfc propos sign commit index registri cargo automat verifi signatur addit includ propos system perform key rotat intend minim intermedi step toward improv secur cargo registri includ crate io without complet replac exist index system thank henri de valenc andr arko yehuda katz toni arcieri provid feedback rfc prior,one possibl git integr guarante appli cargo anyway still worth mention least think show git provid use secur properti flexibl tool necessarili design uphold secur properti usag scenario worth mention case futur custom cargo deploy new develop appar git transport copi index file remot repositori verifi mean integr guarante weaker sure still case abl find updat inform quickli want leav note case forget thank write beauti rfc strike balanc improv secur one hand appli pragmat choic hand e g stick sha stack use technolog support sha recent updat progress issu git mail list agre switch tuf inde bad idea seem littl benefit know particular author author crate io packag vs know author log crate io success tuf dramat increas risk individu key loss open question wonder sourc handl chang work rust project offlin exampl need edit point localhost server storag exampl cool still enabl local edit without requir signatur without need chang key local registri possibl complic oper flag append sourc solv issu fyi rust pgp implement project support direct overal cours fact pgp gpg bring enorm pain array use tool ala smart card sound use work key move past pain pgp modern messag tool signal etc larg replac care key manag strong automat forward secreci measur propos automat forward secur solut repositori togeth slightli simpler pgp integr propos give repositori local commit automat gener privat ed key directori public key place repositori rotat sign key everi commit publish case old key sign next whole commit includ new public key ad repositori automat key restrict crate io upload cours provid use forens inform even crate never util pgp adversari compromis develop machin creat break chain key rewrit commit histori predat current publish achiev cheap pgp integr ordinari pgp sign repositori commit fact crate frequent benefit pgp retroact assum develop never broke associ repositori key need scheme restrict crate io index upload pgp sign commit autom scheme leak metadata develop workflow break signatur chain indic repositori clone copi machin two sign chain remain activ indic develop work two differ machin wors absenc indic synchron tool creat attack vector ala dropbox etc tl dr rfc propos seemingli non standard pgp integr support forward secur properti ala instead provid forward secur properti separ automat alway sign scheme provid forward secur rotat key everi commit use standard git pgp integr access control crate io long term key manag motiv sign repositori clear one layer access control mitm http common corpor proxi case seem threat model tamper requir like organis forc altern key trust differ tuf sens distribut updat metadata point registri full user upload content contrast packag repositori trust user packag distribut final put ultim trust centralis registri make sens reason blindli sign someon els content basic fals sens secur need instead user sign crate tarbal mayb offici approv key sign chain help user identifi genuin crate open question wonder sourc replac handl chang support sourc replac mechan impact chang registri replac sign registri wherea local registri directori replac addit secur properti rfc though user edit index stop work surpris work today guess cargo perform merg entir automat updat index think around ideal system solut requir edit index sure look seem fruit discuss anoth thread understand comment think miscommun around git repositori rfc talk index inform crate io repositori contain inform crate io packag use version resolut packag distribut git end user never intend commit repositori fetch say mitm http common corpor proxi think misunderstand motiv rfc seem refer sort aboveboard intercept http data use certif requir user trust common common certain set rfc talk malici attack transport protocol use obtain index updat gener mitm attack attack obtain fals certif github com secretli intercept traffic user github exampl sort attack word rfc harden us event attack somehow success breach secur tls ssh rfc provid second layer authent cargo registri servic depend transport layer thank great step secur consider section intend threat model possibl make explicit label threat model assum choos handl thing first pass name corrupt cargo pubkey file whatev call exampl somehow caus file corrupt user start stuck trust first download thing altern run build rs add key ring deal fine still think improv think caveat explicit one potenti mitig run build rs nobodi user give carrgo pubkey mode ssh dir yea rfc intend protect attack unfett access user home directori abil remot execut code describ scheme appli anyth remot resembl repositori sure describ clearli rfc propos sign crate public suggest manag per crate pgp key outsid usual pgp ecosystem right roughli except use less complex signatur scheme fulli autom rotat key everi public b authent automat gener chain sign key sign one link use pgp rfc talk malici attack transport protocol use obtain index updat gener mitm attack attack obtain fals certif github com secretli intercept traffic user github exampl sort attack github compromis thing worri exampl steal arbitrari user session gain access crate io prevent attack exampl hpkp use http ssh trust one key per host think go git indefinit download full index scale propos tldr approach per crate user sign make much sens hpkp use http github seem hpkp github seem hpkp hpkp deprec rfc propos sign crate public suggest manag per crate pgp key outsid usual pgp ecosystem right rfc propos sign index commit registri index cargo use resolv depend store git repositori noth per crate pgp key think confus earlier unrel propos end user sign packag github compromis thing worri exampl steal arbitrari user session gain access crate io creat new github account gain access crate io assum mean gain access token user privileg true scope rfc imperson user github account imperson user crate io current auth model true rfc protect attempt imperson registri particular user see skip open sentenc defin registri oop yes believ look good case go insert imag say sign repo alreadi point sequoia pgp org project prove help clear still advantag rotat key rapidli usual envis forward secur protect human good polici achiev end organ registri threat model first limit way compromis registri compromis github unlik mitm without gain full access client unlik breach rust lang admin token happen write compromis rust lang admin account harder allow hijack crate io oauth well allow arbitrari crate upload updat breach token harder think two way hack dev machin leak heroku compromis crate io unlik game second compromis registri real crate file store mean need compromis git index real harm git index includ url download crate file right point crate io freeli modifi index chang checksum crate edit point anoth url forgot anoth threat breakag tls connect github local cargo instanc like think mani shadi peopl access ssl root certif consid safe assumpt differ user github ca compromis github compromis amazon compromis rust lang account server compromis among consum servic ala yahoo etc compromis must consid given post snowden argument goe seen apt attack sysadmin develop sound pretti silli wrong jupit backdoor shift nsa control presum chines control presum occur develop compromis tls proxi often enough often enough unreli proxi consid secur applianc dubiou secur reli verif non ideal implement rfc branch mostli found success want make small chang rfc base experi reject registri broken head sign miss key file polici make decid stop sign commit disrupt registri retrospect provid littl benefit delet key file probabl write public key rather determin key rotat order commit tag point potenti expens iter everi parent id sinc last updat instead requir registri number key rotat sequenti hi thank work improv crate io secur someon start hard work great discuss think abl transpar pep tuf secur model draft pypi git crate io allow elabor bit tuf design handl worst case scenario softwar repositori case crate io compromis think safe say repositori compromis longer theoret realm understand concern tuf look bit complic good reason design decis separ duti differ role sign differ type metadata vari level import differ key threshold signatur metadata realli import role sign use n key explicit implicit key rotat mechan recov key loss compromis tuf provid mechan call deleg transpar distribut rotat key rd parti develop minim risk offlin signatur key realli import role kept offlin repositori safe deposit box exampl use rare divers cryptograph algorithm tuf use multipl sign hash algorithm compromis one insuffici caus repositori compromis pep model basic start provid call minimum secur model simpl model autom run repositori crate io sign packag use onlin key sign key access automat autom sign metadata json file transport file transfer protocol http even git repositori let autom easili produc sign metadata believ client pars metadata though correct wrong later talk ramp secur better secur model pep strongli believ pep difficult adapt crate io pleas let us know question happi help howev thank trishank provid materi specif suggest secur properti propos improv problem tuf bit complic present wholesal solut incompat exist infrastructur materi chang want see made rfc believ chang improv secur practic two paper info benefit tuf compat time impl sever discuss team end compat scope tuf spec howev someon want integr fuschia sinc one actual use break forc compat current impl realli nice revist old pr rfc ing tuf spec absolut nail metadata format agre implement pep model realist docker introduc tuf sign docker hub includ write go implement rel short period time straightforward run product make chang tuf specif fit better workflow support gpg signatur come support differ format metadata file rel straightforward tuf team happi help chang affect overal secur properti implement correctli valid make chang tuf specif fit better workflow support gpg signatur come note extend tuf key specif toto support gpg signatur rather chang affect overal secur properti implement correctli valid complet agre matter mostli architectur nuanc file format reconsid necessari respect none comment respons request thing think vagu unaddress current propos tuf address threshold signatur least read propos anyon key singlehandedli compromis index tuf part surviv key compromis goal design support k n model sensit key root key prevent unilater action individu keyhold think possibl express via sign git commit signatur git commit ascii armour openpgp signatur interest see git react one given commit understand pars signatur oddli flexibl secur migrat path e e signatur alreadi larg bodi crate e e sign even deploy scheme everi crate publish start sign need ensur exist bodi crate still instal crate subject downgrad attack somewhat tricki solv think tuf solv well realli think differ propos tuf enabl version thing look ultim come format structur key manag file e tuf metadata tuf flexibl framework file potenti express git authent toml updat look appear given sequenc signatur packet commit git extract last signatur ignor other hope allow threshold signatur tool util signatur thing git hope github ui display one respect none comment respons request sorri follow train thought comment mine let try answer question provid materi specif suggest secur properti propos improv beyond mention fact implicit metadata revoc least find anywher propos rfc need sourc fresh e g timestamp role ensur fed outdat metadata frozen mirror tangenti thought worth mention concern git metadata tamper case malici repositori mitm replac valid metadata e g sign tag refspec point anoth git object done proof concept django repositori tag still valid sign tag right parti tag look make key rotat make sure git metadata tamper concern problem tuf bit complic present wholesal solut incompat exist infrastructur true git metadata transport snapshot solut appear issu begin howev alreadi see think overrid gpg sign program creat differ header inform case embed tuf metadata commit object sound hard tm materi chang want see made rfc followup metadata tamper attack git sign good avoid far awar support github side thing need hook side note implicit metadata expir help expir openpgp signatur per specif expir mandatori ad signatur subpacket default gpg man shrug alway help formal key expir hand gener ad hi late repli got bit busi work thank pitch key materi differ current propos use call current propos allow secur model pep packag sign use onlin key allow packag publish instantli offer secur guarante equival pretti much simpli use tls otoh point tuf allow build nuanc secur model allow packag sign machin other sign use offlin key belong develop inform pleas see present pep use tuf start pep usabl slowli sure move toward secur protect user even though crate io compromis pep best understand current propos provid mechan protect user crate io compromis clear whether current propos handl secur attack tuf threat model exampl tuf includ bandwidth effici featur prevent rollback packag yet instal even repositori compromis sure us happi write rfc code help crate io tuf git strongli believ tuf help crate io provid much stronger secur guarante maintain usabl thank trishank goal propos protect user cargo mirror cdn tls interceptor try surviv repositori key compromis cargo set understand attack tuf minimum secur model protect singl repositori model expect attack compromis timestamp key abl compromis repositori key therefor abl sign packag key vulner cargo set rubber stamp packag sent bit independ key assign move sign key separ harden server think even done amazon kms someon understand make work keep secur audit log commit signatur still robo sign commit possibl model intellig harden server separ monitor make sure git tree valid make sure attack provid malwar record poster prevent chang code alreadi instal packag version make attack work victim model make attack slower visibl certif transpar style attack serv infect packag target think one primari threat cargo face gener eslint attack authent path compromis either maintain end end use creat malici updat common packag take mani develop comput mitig attack fairli noisi publish malwar entir world main solut attack harden authent path ala fa tuf maximum secur requir coordin develop therefor deserv differ rfc one move tuf base model fairli invas chang therefor realli prefer take place differ rfc proper concern secur understand mention happi write differ rfc greatest strength weak tuf customiz made work basic secur model use develop sign packag tuf main advantag allow threshold signatur key rotat role second advantag tuf built infrastructur support develop sign packag think want implement develop sign packag use tuf probabl good idea btw git metadata tamper accord look code refspec ref head master ref remot origin master perform fast forward fetch sure well work secur mechan allegedli thing btw git metadata tamper accord look code refspec ref head master ref remot origin master perform fast forward fetch sure well work secur mechan allegedli thing afaiu two issu hardcod refspec client easi chang later line server alway advertis anoth refspec client initi fetch use key rotat use sign tag server simpli serv sign tag skip key rotat altogeth use key rotat use sign tag server simpli serv sign tag skip key rotat altogeth differ freez attack new commit sign old key either attack compromis old key case push malici commit old key rotat expir seem imposs avoid attack yet compromis old key case stuck run commit sign old key otoh mean key rotat part instead whole attack delay key rotat key use sign new commit roll mitig commit includ key trust verifi key cargo trust detect tag skip attack attack delay partial rotat need new sign key realli happi see convers start move away blanket statement use tuf nuanc convers specif secur practic want address turn make brief note gener constraint exist infrastructur need backward compat first approxim user current reli unreason infrastructur overhead introduc two non overlap servic crate io mean fundament structur git index need stay cargo registri polycentr system though crate io order magnitud larger registri user depend mani differ registri index system determin secur polici use signatur crate io remain possibl registri unsign want read registri simpl creat github repo put packag bucket autom public part actual requir programmat servic ideal sign data registri without requir servic either reason strongli prefer abl transfer data use git index design constraint rfc complet new index system addit api crate io threshold signatur consid incorpor support threshold signatur rfc use mechan transport describ mulitpl signatur packet singl ascii armor detach signatur block decid threshold signatur obvious good idea minim damag key compromis institut afford howev think unlik adopt threshold greater crate io either commit rotat commit obvious perform automat think commit coordin overhead requir multipl administr sign key rotat instead current adopt mitig crate io keep admin key offlin rotat onlin key often much easier rotat cheap easi requir multipl admin coordin registri come us strong desir threshold signatur incorpor implement allow specifi signatur threshold registri metadata registri outdat metadata malici intermedi fail forward updat index outstand attack rfc attempt address intend make next phase harden registri rfc accept implement sketch potenti solut attack sign registri specifi frequenc index guarante updat everi index updat sign timestamp part git commit metadata registri index new commit within interv specifi cargo treat damag broken fail build crate io specifi short interv e g hour guarante make commit even null within interv practic crate io publish roughli everi minut right possibl flaw solut seen mean addit servic role key event think howev attack solv solv separ later round deleg trust problem outdat metadata consid problem solv futur interest trade off space nice kind e e secur everi crate autom zero overhead everyon benefit hand crate want overhead greater control packag sign e g want offlin key manag threshold signatur think secur critic core librari fundament provid e e authent even crate io cannot fabric packag sign prior public howev obvious cannot provid e e author crate io control right publish exampl discuss design cargo check crate publish someon access certain github account crate io ultim decid github account allow publish given packag similarli deleg perform alway onlin key weak alway onlin key infrastructur cost administr manual perform deleg use offlin key quit high field request deleg sinc deleg scarc resourc decid distribut much demand etc provid deleg signatur packag metadata well packag worthwhil problem ecosystem crate io version resolut packag sign possibl someon introduc constraint transit depend forc version resolut reject version import secur updat one reason propos registri index sign rather packag deleg trust sign metadata individu version individu packag exist crate io registri index format bit challeng particular answer question suggest comparison certain pep prefer leav problem futur rfc think reason propos forward compat sort extens reason strongli prefer abl transfer data use git index tuf metadata toml file commit git e approach suggest fact entir propos made tuf compat use tuf file structur rather one post leav everyth els well howev think unlik adopt threshold greater crate io either commit rotat tuf make easi support threshold signatur futur without commit today malici intermedi fail forward updat index outstand attack rfc attempt address intend make next phase harden registri rfc accept implement tuf alreadi design make possibl separ role futur fundament provid e e authent even crate io cannot fabric packag sign prior public howev obvious cannot provid e e author crate io control right publish similarli deleg perform alway onlin key weak alway onlin key deleg perform onlin key tofu ish model onlin key use claim packag e add initi e e key trust deleg end user key onlin key cannot use make chang crate instead exist owner need sign ad remov exist owner exist crate io flow e supplement end user signatur requir someth git pre receiv hook verifi e e signatur verifi crate io violat rule trip hook index updat fail gener read respons sound leav door open implement mani featur tuf alreadi design support tuf deliv minimum viabl featur today use git transport toml file particularli compel reason file format given alreadi thought problem specif chang mean tuf file format admit seem claim result materi chang implement see reason think mistaken least regard exampl say tuf make easi support threshold signatur futur without commit today think misunderstood want bother implement support understand threshold signatur cargo need believ refer tuf file format includ abil specifi threshold higher specif chang mean tuf file format tuf use metadata file describ struct handl add toml serial possibl ad metadata struct use wind slightli differ file separ tuf role net effect exampl say tuf make easi support threshold signatur futur without commit today think misunderstood want bother implement support understand threshold signatur cargo need believ refer tuf file format includ abil specifi threshold higher requir threshold entir system alreadi design support increas futur likewis tuf role support key allow singl system servic e perform tuf role well except root role leav door open separ futur gener worri read want support futur get bit greenspun tenth rule vibe e sound want eventu support mani featur tuf alreadi design support realli happi see convers start move away blanket statement use tuf nuanc convers specif secur practic happi well temper discuss coupl concern mostli fact architectur tie git transport secur foundat github ident manag system see benefit term eas implement think eventu end paint corner e g start look case support threshold sign trust deleg said propos look work imho cargo registri polycentr system though crate io order magnitud larger registri user depend mani differ registri index system determin secur polici use signatur crate io remain possibl registri unsign n long term valid point see conflict anyth propos notari use tuf construct everyon creat registri whether registri use notari sign decis left administr registri regard threshold signatur mulitpl signatur packet singl ascii armor detach signatur block decid threshold signatur obvious good idea minim damag key compromis institut afford good interest solut howev registri come us strong desir threshold signatur incorpor implement allow specifi signatur threshold registri metadata registri feel slowli turn tuf likewis everi index updat sign timestamp part git commit metadata registri index new commit within interv specifi cargo treat damag broken fail build quit timestamp role whether merg respons top level snapshot target role tuf lingo simplifi thing oper altern explor exampl take approach timestamp snapshot kept host author want avoid burden maintain multipl key think propos issu sound sensibl esp suggest deleg trust bias start look tuf end regardless transport metadata limit sound daunt thing go least leav design target avoid make chang block happen later line differ freez attack new commit sign old key either attack compromis old key case push malici commit old key rotat expir seem imposs avoid attack yet compromis old key case stuck run commit sign old key think boil implement detail mind server add arbitrari metadata e g creat new tag refspect point old tag happen depend implement walk new tag take commit start walk back fine instead add new key set trust key troubl either big concern long case consid account implement detail agre tuf support secur guarante everyon seek go forward refer opam tuf variant built upon git base packag repositori look implement yet though sound pretti similar propos one thing perform signatur entir git tree verifi therefor avoid check git repositori verifi signatur attack without commit key perform git filesystem attack like cve kind forgotten verif attack plagu apt cours realli compat deleg trust specif packag think requir root repositori sign certif transpar style mechan plenti mitig sort attack attack deploy exploit world see therefor implement packag sign mechan use transport believ implement addit sign commit basic sum posit separ packag sign commit sign mechan packag sign mechan piggyback commit merkl tree downgrad protect sound good took stab modifi propos tuf file format think map pretti natur map privileg tuf role privileg tuf role think lot valu use tuf purpos particularli phase support end end signatur crate creat develop time crate publish requir mani chang realli chang file format avoid true threshold signatur ala bls anonym signer within key weaken account applic tuf noth wrong ordinari logic say approv rotat k n key sign need specif k signer design signatur fact noth even wrong bls aggreg via delinear use fake threshold signatur scheme verif requir identifi signer apolog pick terminolog mayb multi signatur sound less ambigu threshold signatur implement think make sens use sequenc signatur packet within singl ascii armor openpgp messag particularli sinc allow threshold sign backward compat exist tool still verifi signatur ignor addit signatur packet messag approach work signatur algorithm choic yeah harmless cours quick question key rotat handl compromis key previous trust key use sign commit suddenli known compromis revok procedur recov exampl commit registri index sign key cherri pick verifi origin committ sign new trust key determin text rfc compromis key handl gloss weak sha moment sign given commit authent entir histori entir histori form singl hash base data structur cover l l propos l describ authent occur signatur latest commit e check signatur invalid must treat invalid creat compromis key fcp postpon cargo team discuss rfc last week triag unfortun conclud bandwidth time work rfc review time result go propos close postpon still interest motiv behind rfc time quit equip handl team member propos postpon next step review rest tag team member x x x x concern current list major review approv approv outstand enter final comment period spot major issu rais point process pleas speak see info command tag team member give review bell enter final comment period per review bell love help work follow effort said bandwidth right either worri postpon final comment period disposit postpon per review complet autom repres govern process thank author work everyon els contribut rfc postpon,45,440,signing|signature|security|integrity|transport|forge|sha|authorise|pgp|public key|adversarial|leak|attack|attack vector|access control|mitm|threat|tampering|trust|certificate|malicious|breach|tls|ssh|authentication|protect|steal|privilege|hijacking|oauth|hack|checksum|ssl|safe|backdoor|delegation|crypt|hash|validate|vulnerability|audit|malware|violate|cve|exploit,4257,0.10335917312661498,0.5796607732772827
1058,https://api.github.com/repos/quicwg/base-drafts/issues/1058,pr,remov transport paramet newsessionticket,base feedback implement complex ultim valuabl close,client keep use rtt repeatedli potenti forev right mean mean server stuck param use rtt handshak subsequ rtt connect possibl miss someth basic yes least part motiv separ transport paramet discuss suggest complex hit exce impact occasion reject rtt offer see reason remov ad complex practic level unclear occur client rememb transport param server longer honor intent server honor think make sens state explicitli wed jan ianswett wrote see reason remov ad complex practic level unclear occur client rememb transport param server longer honor intent server honor think make sens state explicitli current text server rememb transport paramet advertis store integr protect copi valu ticket recov inform accept rtt data server use transport paramet determin whether accept rtt data choic honor transport paramet reject rtt data believ case need particular turn featur negoti use transport paramet like move reject rtt data ticket use transport paramet invok featur see section relat text new transport paramet use invok new featur receiv subscrib thread repli email directli view github mute thread transport paramet flow control max stream id unilater transport param includ session ticket believ transport param server receiv client hello client transport param server receiv client hello know transport param client use possibl confus two question mean server must rememb param along long rtt session key valid expect action server unabl honor rtt param think text explicit wed jan janaiyengar wrote two question mean server must rememb param along long rtt session key valid text current give server choic server rememb transport paramet advertis store integr protect copi valu ticket recov inform accept rtt data three choic rememb paramet valid period store ticket refus rtt expect action server unabl honor rtt param think text explicit know store ticket rememb refus rtt think right three choic need text cover question ian similar question draft longer exposit think wrong choic cours differ matter receiv comment repli email directli view github mute thread think agre ian probabl ought direct specif state server must one two choic want rtt think use must state help must alreadi exist server accept rtt subsequ provid differ valu transport paramet new connect rtt data accept server server must reduc limit alter valu violat client rtt data text ted cite import context stipul make part sinc go make implement easier harder,5,25,transport|integrity|protect|validate|violate,392,0.06377551020408163,0.5795716047286987
2838,https://api.github.com/repos/quicwg/base-drafts/issues/2838,issue,provid signal scid client assign,quic v first cid ocid client assign although cid assign author control receiv endpoint propos make publicli visibl via invari endpoint author author cid obvious requir chang invari signal singl header bit similar long short packet identifi use resolv lb issu traffic rout v even use v quic version regret signal noth invari state cid construct mean happen vote gener british popul realist two endpoint two respons parti state invari author cid even unknown requir chang invari saniti current futur quic version believ import know cid assign client cid normal assign destin author see discuss,note long header packet good choic signal forc decis client chosen cid futur long packet overlap v v abl make choic henc extra bit header two unus elabor one new explicit signal problem solv lb signal indic choos arbitrari endpoint without need consist rout consequ quic version design accordingli load balanc need make qualifi decis rout traffic especi connect establish lb alway will cryptograph valid cid signal load balanc need make fast decis cannot trust client gener cid poor entropi construct dos singl endpoint signal encod bit cid move header bit propos use long header detect cid client gener prevent long header switch server chosen cid earli ossifi lb peril futur quic version common solut cid less rout tupl hash instead client cid requir know need oppos use server gener cid tupl hash work behind proxi origin sourc ip lost work futur non ip network cid use rout alon today quic v requir handshak tupl stabl probabl fine necessarili fine futur version kind deploy cours endpoint lie cid bit enabl success establish maintain connect path entiti manipul bit said header part affect rout sure understand load balanc trust server issu cid decrypt correctli sinc therefor check decrypt packet alreadi access bit connect server issu decrypt suggest time attempt decrypt agre load balanc prove cid fact server gener benefit comput wise bit expos vs bit embed cid byte cid design rout specif infrastructur enough fulli trust agre mani case authent cid provid inform need consid deploy alway practic share secret lb endpoint public cloud host discuss sever time past conclud see new inform go propos close issu action think discuss support close action,9,34,signing|authorise|sanitise|crypt|validate|trust|encode|hash|authentication,373,0.09115281501340483,0.5679805874824524
928,https://api.github.com/repos/basho/riak/issues/928,issue,data rest encrypt,data rest encrypt issu riak whole encrypt data problem problem three front mani compet system offer encrypt data rest e market industri start make encrypt data rest requir e usag viabil hacker becom better access file system non encrypt data risk e secur potenti pitfal partit move server encrypt key standardis node cluster allow encrypt decrypt e partit encrypt one node one key transfer node differ key useless riak run insid erlangvm encrypt key probabl need store plain text format open sourc long potenti attack learn locat encrypt key copi abl decrypt data keep encrypt key one server share cluster run time work server store key goe offlin secur concept secur work three way know base user access server attack ask riak full databas human readabl form let ignor one appli encrypt key anybodi encrypt key bit technic know abl retriev human readabl data file system data directori riak even partial data know real user differenti attack real user know thing bucket name key name attack thiev opportun unlik know inform especi work file system singl node propos solut combin secur concept see differ attack genuin user knowledg bucket key name propos follow solut encrypt data rest within riak kv share encrypt key node cluster probabl user specifi text file save per node option allow encrypt use peopl want yet start check possibl poll interv make sure node cluster use key encrypt turn write data encrypt key discuss salt key bucket name key name encrypt valu store read data decrypt salt encrypt key work user provid bucket name key name bucket tag encrypt check percentag data encrypt salt key bucket key name render plain encrypt key nearli worthless potenti attack brute forc potenti bucket key name combin access data legaci migrat assum function implement user wish encrypt alreadi exist riak instal decid longer wish keep data encrypt wish decrypt everyth propos default read write mode creat mode check whether data meant encrypt everi time riak read data desir encrypt type write exact data desir encrypt type method user high load cluster wait data natur becom encrypt decrypt user hurri run script read everi singl bucket forc encrypt case cluster subject perform spike potenti add user defin config flag e g read write temporarili disabl wait cluster less load resum want add output command includ percentag encrypt inform cluster addit secur secur layer worth look store key extrem limit permiss e access encrypt key user prefer depend easi erlangvm access said encrypt key,blunt seem lot work result encrypt key live text file host copi filesystem mean copi key need inform key node attack bucket name need store unencrypt bucket list bucket metadata encrypt key key thing attack key name store unencrypt encrypt key bucket name sinc got last two step thing possibl solut see user provid encrypt key request still live memori crafti attack abl obtain least bit safer somewhat mitig use asymetr encypt e public key assign bucket live node w issu mean write need addit key either return encrypt data mean rework repair crdt work provid secret key read introduc anoth secur risk come encrypt rest filesystem level encrypt probabl better job come system often build expert audit secur think point miss idea salt encrypt key bucket name key name render encrypt key alon useless riak point view care whether bucket call mybucket aw fh qhfdsuy encrypt bucket name encrypt key salt bucket name perfectli valid solut attack cannot retriev bucket name file system without signific brute forc work non riak relat method list bucket key name differ method caveat cannot ask riak list bucket key even basho said done product argu filesystem level encrypt benefici howev secur layer attack live server attack success gain filesystem level encrypt worthless think bucket key name encrypt attack abl run bucket list key list retriev bucket key return list encrypt name cours attack brute forc still slow entir idea layer secur noth total secur everi step hinder attack worthwhil end day need look regard futur suitabl riak corpor custom mean need address problem list start post mani compet system offer encrypt data rest e market industri start make encrypt data rest requir e usag viabil hacker becom better access file system non encrypt data risk e secur riak alreadi surprisingli wide array secur option nice summaris blog post corpor world tick box often far senior manag look toward secur featur avail fill requir nice lot work mani peopl see prioriti right regul start roll sure whether riak abl surviv outsid obscur long remain user hobbyist one two die hard corpor fan better encrypt data middlewar layer confidenti never even send storag system first place,14,105,encrypt|crypt|hack|security|attack|salt|scripting|safe|public key|signing|audit|validate|availability|confidential,777,0.13513513513513514,0.5676367878913879
58,https://api.github.com/repos/multiformats/multihash/issues/58,issue,map openssl implement,exactli map implement openssl use say sure hash function give correct hash label instanc etc provid guidanc thnx,basic see hashtabl defin multihash hash function alreadi given function code mention tabl exist list look anoth possibl tabl link specif return name hash defin contain dep howev specif includ function strictli hash function hash sign realli list suit exampl differ know multihash hash function support moment although futur multi look closer figur hash algorithm use specif see multihash tabl feel free pr new function code thank help understand irc wrong fault mine bit subtl inde happen know correct map multihash function code secur hash function node instanc hash function ipf use js implement proceed scour sourc dive doc figur name map thank joint effort btw sinc hash function determinist easi comput hash valu function make part specif requir implement comput result given number byte effect make exampl part spec pick random number near certain hash function match code unless miss subtl thing hash function multihash function code algorithm name x x x x foo foo x foo x bar bar x even abl detect code use given function fulli automat without requir explicit map probabl find minimum colum need add specif detect list hash function without collis word rather take tabl write program comput verifi want map multihash openssl happen know correct map multihash function code secur hash function node instanc hash function ipf use js implement person better idea use right believ easi add hash valu verifi use right function think good idea bit beyond scope issu perhap open idea anoth one,4,32,openssl|hash|signing|security,266,0.12030075187969924,0.5673189163208008
288,https://api.github.com/repos/rust-lang-nursery/rust-cookbook/issues/288,issue,add hash password salt exampl,appli idea provid robust password hash salt crate cc,interest work read link articl weekend make sure miss anyth seem exampl follow step defin password creat salt prepend salt password creat sign key hmac hash password via hmac anyth miss hope includ yep pretti much sum work implement read sure particularli differ issu verif step use hmac although suppos necessarili salt password least explicitli state descript sure miss someth sure nice exampl inde pleas post pr two exampl much differ eventu decid merg one like bell whistl let go one basic exampl pr someth detail note small import bit text prepend salt password hash standard password hash function argon bcrypt scrypt pbkdf emphasi mine hmac secur password hash function password hash function must secur case server compromis thu secret known case secret known hmac provid secur underli hash algorithm fortun ring implement suitabl password hash exampl probabl verifi password hash well terribl difficult mess littl confus page author state regard hmac highli recommend approach larg scale user servic suggest first hash via pbkdf hmac author mention use doubl hash case hurt secur understand admittedli deep pbkdf attack still brute forc hash take longer hand attack hmac secret key miss ring implement pbkdf use hmac intern said fairli sure quot text refer paragraph directli hmac gener believ quot look better noth said fairli sure quot text refer paragraph directli hmac gener good observ agre believ quot look better noth sure mean anyway clearli know read seem peopl gener discourag hmac store password seem pbkdf correct approach light want chang pbkdf proceed hmac implement admittedli read much ring doc inform consensu pbkdf better noth end next paragraph special hardwar separ server read specif articl know confirm alon struggl figur actual suppos first two question faq part probabl care nice info stuff directli deal write web server updat prior examp pbkdf new exampl creat password verifi follow exampl ring crate tri simplifi shorten bit show bare minimum function one thing still think show password hash print use lossi utf weird symbol one hand nice see actual work hand particularli clean thought look good submit pr cookbook tomorrow hex encod hash see crate think remov hmac exampl put impli accept method hash password realli case pr hmac exampl got merg exampl cover show hex sha encod hex exampl crate probabl want consist agre prefer repres random byte utf ambigu note seem use version rc long object use addit crate think data encod crate consist great option yes explicit word left hmac intent includ pbkdf hash actual pr thank feedback thank lot help exampl,12,71,hash|password|salt|signing|hmac|scripting|crypt|security|authorise|attack|encode|sha,435,0.1632183908045977,0.5671440362930298
440,https://api.github.com/repos/quicwg/base-drafts/issues/440,issue,known attack,christian huitema note potenti attack cover properli stream smurf attack client server open larg number stream send stream data frame new stream number minim content stream choke attack client send request stream stream level flow control choke transmiss server appli mani parallel stream bonu effect silli stream number attack client open stream n outlandish version n play havoc server manag incom stream stream drop drop attack client send data stream extrem slowli mayb byte time server spin wheel wait data think controversi alreadi well known need text,realli attack maximum concurr stream limit mayb soon maximum stream id alloc state peer commit advertis certain limit stream must open sequenti order implement follow rule maximum concurr stream limit take care rest think new attack set reason flow control window mitig fact fill advertis flow control window data leav singl byte begin window effect version attack copi yes agre reduc slow lori number think attack peopl commit receiv buffer say send first byte caus memori commit practic oppos theori state implement reli agre variat slow lori attack mitig proper configur paramet receiv logic necessarili obviou implement exampl easi mitig attack set stream limit high valu easi stream limit valu low perform effect try write pr entri secur section enter pr stream fragment reassembl stream id commit attack two separ secur sub section still need one gener slow lori attack help provid pull request cover list issu new issu track attack come,2,17,attack|security,242,0.07024793388429752,0.5592280030250549
3788,https://api.github.com/repos/quicwg/base-drafts/issues/3788,issue,new confidenti integr limit,tl dr like chang per key integr limit per connect limit differ margin ongo analysi effort jean paul degabriel felix g nther kenni paterson martin thomson reveal quic consid chang confidenti integr limit account multi user secur set background exist limit draft ietf quic tls appli singl key deriv sever exist analys literatur includ concret seek bound attack advantag break secur guarante aead algorithm specif key question key updat occur endpoint receiv new key reset encrypt forgeri attempt counter new key analysi fail account set multipl independ user aead algorithm uniqu key call multi user set attack allow perform amount offlin work help acceler attack aead algorithm howev rather target singl user specif key task distinguish traffic key equal amount random bit public key set bellar et al prove success probabl attack one mani independ user key bound success probabl attack singl user key multipli number user present result extend symmetr key set import key use throughout durat singl connect effect distinct user mean attack probabl success key connect must consid across key precis integr limit counter must reset across key updat confidenti limit still appli individu key rather across key updat sinc function differ analys tear connect perform updat analys consid encrypt function plaintext block protect thu user need send n block data send n block data whether one connect mani key mani connect singl key fortun much problem practic hoang et al provid tight multi user secur bound aes gcm nonc random use tls quic bound permit higher amount previous establish singl key howev best knowledg multi user secur analys give tighter bound gener analys aead chacha poli aead aes ccm thu time stuck singl user integr limit spread across key updat aead recogn rel new area research aim quit conserv set limit though allow attack greater advantag multi user attack singl connect relax limit futur analys demonstr safe note ideal outcom true multi user set consid user e key connect use quic client server simultan howev endpoint cannot obtain global view internet thu cannot make realist paramet choic bound base number user compromis struck pr consid narrow view multi user secur e one user connect introduc key updat messag certainli gap literatur worth explor futur recommend set strong target attack advantag singl key estim ensur attack still limit advantag multi user set felix martin best document basi analysi issu correspond pr cfrg believ foundat analysi sound though cours happi learn made arithmet mistak,,12,34,confidential|integrity|security|tls|attack|encrypt|forgery|public key|protect|aes|nonce|safe,411,0.0827250608272506,0.5480433106422424
1420,https://api.github.com/repos/quicwg/base-drafts/issues/1420,issue,encod stream deadlock,encod send larg block bigger flow control limit decod read block data present decod never releas flow control credit block encod complet send block deadlock advis caution,decod kind deadlock possibl app protocol preced app level messag length messag length allow larger flow control window block depend right decod want process block entireti need buffer data applic space releas flow control worth note realli two situat encod stream noth say encod send updat singl block queri avail flow control write much wait credit time deadlock approach singl header bigger flow control credit issu case put huge kerbero ticket dynam tabl love god request stream send whole header harder howev bound size header accept given stream recommend flow control window larg enough transfer expect header will buffer need suggest kind text think help remedi situat read go make protocol chang address instead advis caution say came anoth encod stream deadlock encod run stream flow control encod stream erron send request fill connect flow control depend byte transmit text advis caution scenario warrant eg perhap encod encod tabl insert overflow encod stream flow control window encod run stream flow control encod stream erron send request fill connect flow control depend byte transmit text advis caution scenario warrant issu initi rais think state non stream decod cap maximum size instruct process avoid memori exhaust attack non stream decod keep partial instruct receiv buffer size receiv buffer equal greater maximum permit size instruct,6,27,encode|deadlock|decode|availability|kerberos|attack,243,0.1111111111111111,0.5461328625679016
373,https://api.github.com/repos/cloudevents/spec/issues/373,issue,encrypt cloudev data attribut,today call tam ask want add abil encrypt cloudev attribut ensur tamper pleas add thought topic issu record discuss end either add new featur spec add someth primer explain chose noth new folk understand reason behind decis sinc question come past,see need provid payload contain signatur context attribut receiv decrypt payload verifi context attribut inde tamper obvious variat signatur travel plain text context attribut verifi without decrypt materi turn encrypt portion protect signatur equival someth similar mime put simpl scenario descript primer exampl somewhat hesit spell deep detail depth pit given comment lack comment propos add text primer peopl know thought purpos decid add spec time concern approach concern interact middlewar chang context attribut context attribut event rout sort sign integr event note encrypt alon prevent tamper exampl replay attack allow attack rout fabric repeat earlier data payload replac data payload later event vote document assum trust chain middlewar transport protocol support point point secur guarante trust middlewar compon comment relat issu iter need make statement along line sensit inform present event context attribut data content encod encrypt sensit inform present essenti encrypt data produc consum concern variou context attribut must clear allow rout occur first point typo mean say thank provid proof read servic sensit inform present event context attribut base comment seem possibl propos add text spec say assum trust chain middlewar transport protocol point point secur use sensit inform present event context attribut unencrypt allow proper rout middlewar content encod encrypt sensit inform present encrypt applic specif scope spec peopl think remov rfc languag move primer assum trust chain middlewar perhap greater explicit add user remain respons valid middlewar confidenti guarante meet confidenti requir except elegantli state tri ask guidanc end user consum realli encrypt consid whole rabbit hole went extens talk immut encrypt sign affect bag extens nest bag bllaah differ encrypt implement come extens abl address problem nice without limit anybodi data content encod encrypt sensit inform present encrypt applic specif scope spec think altern mention claim check pattern see believ address issu go close let know got wrong,16,49,encrypt|crypt|tampering|signing|signature|protect|scripting|integrity|attack|trust|transport|security|sensitive information|encode|validate|confidential,350,0.14,0.5429094433784485
2999,https://api.github.com/repos/quicwg/base-drafts/issues/2999,issue,qpack decod stream buffer grow without bound,understand correctli decod stream buffer endpoint keep grow indefinit encod side app return back flow control credit number header acknowledg instruct bound number max block stream decod specifi hand number stream cancel bound encod side app keep reset stream without send max stream data decod side keep close stream decod stream sure discuss alreadi,solut seem implement depend implement place bound amount data wait sent decod stream hypothet limit creat forc peer kill connect starv decod stream flow control credit cancel lot stream howev consum therefor entiti fail read decod stream encod encod trivial caus connect close emit invalid instruct anyway seem fine write number header acknowledg instruct bound number max block stream decod specifi incorrect acknowledg header refer dynam tabl,3,14,decode|encode|validate,129,0.10852713178294573,0.5351539850234985
231,https://api.github.com/repos/quicwg/base-drafts/issues/231,issue,encrypt packet number,quot mail list tl dr encrypt packet number ecb someth probabl bad idea want write idea last night encrypt packet number diagram quic regular packet insight reason packet number outsid encrypt use nonc aead function howev encrypt algorithm usual avoid variou reason need nonc specif deriv two key k h header encrypt k p packet encrypt cours leav question crypto mode encrypt packet number natur choic ecb work data valu size cipher block aes much bigger packet number bit wast though cours add stuff block header des bit block ffx use block size addit comput cost two pre emptiv respons common question yes ecb ffx gener good aead algorithm particular integr reveal pattern plaintext howev data otherwis clear b fold ordinari aead integr check long correctli gener k h k p independ use kdf weak k h implic k p probabl worth current amount stuff header want write peopl know,given origin issu state probabl worth move v feel free reopen move back want make case packet number need obfusc,7,16,encrypt|crypt|nonce|cipher|aes|integrity|obfuscate,174,0.09195402298850575,0.5324686765670776
1662,https://api.github.com/repos/OWASP/owasp-mstg/issues/1662,issue,encrypt share prefer cover mstg storag mstg storag,mstg storag mstg storag list proper usag share prefer provid guidelin new encrypt share prefer automat encrypt content xml file,hi thank point experi use featur mind open pr includ miss great help us gladli review actual experi use howev recent encount app use assess want refer mstg test find anyth henc issu howev note simpli hook api call decrypt data think test encrypt similar either store share prefer elsewher think perhap ad section specif share pref good first step add refer usag encrypt share prefer current section think need separ section better sub section structur sure current static dynam analysi section even match think updat section alreadi someth use jetpack encryptedfil think work mention issu perfect thank much mechan propos new secur lib super simpl lib alpha howev suggest mstg recommend gener releas recommend dev team make alpha librari thank thorough lib make thing easier futur seen implement pattern master key store keystor end advis store keystor use encrypt key valu encod base save share prefer app contain yep pattern use new secur lib simplifi consist implement pattern develop want caution recommend alpha lib actual sure encryptedsharedprefer even good idea seem provid data rest protect suscept runtim hook order either dump decrypt key valu pair data encrypt key key valu pair seem give fals sens secur sens hey think still valu experi team implement idea someth call secur share prefer vari tactic code qualiti result secur outcom new librari capabl provid consist implement make android key store master key make enum configur option etc use opinion true think need list caveat mstg includ actual sure encryptedsharedprefer even good idea seem provid data rest protect suscept runtim hook order either dump decrypt key valu pair data encrypt key key valu pair seem give fals sens secur sens agre streamlin effort encrypt data abstract easier right provid addit protect rest attack alway abl hock app alway matter time skill attack decrypt data case nevertheless best practic use alpha stage fyi androidx secur librari releas,6,29,encrypt|crypt|security|encode|protect|attack,342,0.0847953216374269,0.5262866020202637
21,https://api.github.com/repos/multiformats/multihash/issues/21,issue,rfc multihash size length digest,hi somehow relat without regard correct digest length produc hash function question handl multihash encod digest encod length match length string byte come afterward mostli see invalid multihash sinc digest byte expect mayb pad look littl bit forc real question interpret someth multihash plu trail debri thu invalid whole otherwis whole string move around complet multihash useless charact implic whether explicitli separ store length languag python length digest string readili avail keep match length redund,strong feel x x abcdef illeg multihash see valu multihash use applic e g python think opportun buffer overflow e g c yes invalid valu whose digest length match digest valu length invalid implement must treat error,5,16,hash|encode|validate|availability|buffer overflow,118,0.13559322033898305,0.5222597718238831
1872,https://api.github.com/repos/kaldi-asr/kaldi/issues/1872,issue,kaldi threadsaf cuda enabl,titl kaldi threadsaf cuda enabl want kaldi speech infer multi cpu thread crash follow error backtrac run normal singl cpu thread multi cpu thread without cuda suggest fix issu thank program receiv signal sigsegv segment fault switch thread x fff ff lwp x std hashtabl std alloc std detail select st std equal kaldi cumemoryalloc pointerhash std detail mod rang hash std detail default rang hash std detail prime rehash polici std detail hashtabl trait find node unsign long void const unsign long const clone isra gdb backtrac x std hashtabl std alloc std detail select st std equal kaldi cumemoryalloc pointerhash std detail mod rang hash std detail default rang hash std detail prime rehash polici std detail hashtabl trait find node unsign long void const unsign long const clone isra x adad kaldi cumemoryalloc free void x fd kaldi cumatrix destroy x kaldi cumatrix resiz int int kaldi matrixresizetyp kaldi matrixstridetyp x cd b kaldi nnet nnetcomput executecommand x cece kaldi nnet nnetcomput run x c f kaldi nnet decodablennetloopedonlinebas advancechunk x c kaldi nnet decodableamnnetloopedonlin loglikelihood int int x fd kaldi latticefasteronlinedecod processemit kaldi decodableinterfac x db kaldi latticefasteronlinedecod advancedecod kaldi decodableinterfac int,memori alloc code cuda thread safe master branch rnnlm branch issu fix announc plan multipl thread call allowmultithread cudevic object dan tue sep pm chandler zhou wrote titl kaldi threadsaf cuda enabl want kaldi speech infer multi cpu thread crash follow error backtrac run normal singl cpu thread multi cpu thread without cuda suggest fix issu thank program receiv signal sigsegv segment fault switch thread x fff ff lwp x std hashtabl void std pair void const kaldi cumemoryalloc usedmemoryel std alloc std detail select st std equal kaldi cumemoryalloc pointerhash std detail mod rang hash std detail default rang hash std detail prime rehash polici std detail hashtabl trait find node unsign long void const unsign long const clone isra gdb backtrac x std hashtabl void std pair void const kaldi cumemoryalloc usedmemoryel std alloc std detail select st std equal kaldi cumemoryalloc pointerhash std detail mod rang hash std detail default rang hash std detail prime rehash polici std detail hashtabl trait find node unsign long void const unsign long const clone isra x adad kaldi cumemoryalloc free void x fd kaldi cumatrix destroy x kaldi cumatrix resiz int int kaldi matrixresizetyp kaldi matrixstridetyp x cd b kaldi nnet nnetcomput executecommand x cece kaldi nnet nnetcomput run x c f kaldi nnet decodablennetloopedonlinebas advancechunk x c kaldi nnet decodableamnnetloopedonlin loglikelihood int int x fd kaldi latticefasteronlinedecod processemit kaldi decodableinterfac x db kaldi latticefasteronlinedecod advancedecod kaldi decodableinterfac int x b paddyasr paddyengineimpl processtask void char unsign long x cc paddyasr paddyengin processtask void char unsign long x recog one task task xd thread id thread idat thread decod noaff cc x work arg x fffffffe thread decod noaff cc x ffff c dc start thread lib libpthread x fffef clone lib libc receiv subscrib thread repli email directli view github mute thread,5,56,threadsafe|signing|hash|decode|safe,504,0.1111111111111111,0.5219518542289734
1576,https://api.github.com/repos/quicwg/base-drafts/issues/1576,issue,consid encrypt long header payload length part packet number encrypt,encrypt long header payload length make non invari byte quicv encrypt apart first byte give us signific privaci win length comput udp length search cleartext version number payload obfusc help reduc yet anoth possibl ossif decid move forward pne long header encrypt byte start start payload length apolog discuss abl find,break coalesc packet multipl quic packet one udp frame decrypt one length packet number time miss someth necessarili key packet datagram requir ignor understand hard length unkown good point break scenario thank bring close issu,5,9,encrypt|crypt|signing|privacy|obfuscate,97,0.09278350515463918,0.519589364528656
2097,https://api.github.com/repos/quicwg/base-drafts/issues/2097,issue,server initi verif attack side defens,watch long discuss pr relat email thread believ cannot solv problem requir parallel evalu multipl context client let start state requir want connect establish succeed even presenc attack side forg send arbitrari packet client server design server side defens first step attack side defens client attempt start connect send client hello packet server differ client hello creat differ context server regardless content header address context correspond handshak encrypt key messag sent encrypt key origin sender client hello one context origin actual client context attack protect server enough attack spoof server respons client receiv sever differ server hello packet respons singl client hello default client cannot verifi server hello origin intend server server credenti arriv much later exchang absenc server authent client need open connect context differ server hello context associ encrypt key server case context associ actual sender server hello one context associ intend server client find one process server credenti receiv handshak messag client process messag parallel algorithm hard implement quic v identifi connect context singl connect identifi cid commit initi packet unless want spend extra rtt connect setup parallel execut suppos manag sever client context associ handshak key follow flow client send client hello dest icid srce ccid server receiv client hello creat context base server hello content pick scid server send server hello dest ccid sourc scid client receiv server hello associ context tupl ccid scid server send handshak messag dest ccid sourc scid client verifi messag handshak key associ ccid scid messag fail authent ignor client send ack etc dest scid srce ccid client valid server credenti connect establish work long attack forg respons without knowledg server scid attack see first server hello step race compet server hello ccid scid attack win race effect context ccid scid make work need extra paramet exampl server token carri server initi packet handshak packet verifi client exampl token hash server hello comput hash algorithm negoti handshak modifi algorithm client send client hello dest icid srce ccid server receiv client hello creat context base server hello content pick scid server send server hello dest ccid sourc scid token hash server hello client receiv server hello verifi token token match messag ignor match client associ context tupl ccid scid token server send handshak messag dest ccid sourc scid token hash server hello client verifi messag handshak key associ ccid scid token messag fail authent ignor client send ack etc dest scid srce ccid need server token client valid server credenti connect establish ad server token server initi handshak messag signific chang protocol ad specul evalu multipl context signific burden client issu handl hrr stateless retri signal server busi without allow attack spoof busi signal stateless retri probabl handl creat yet anoth parallel evalu context client need transport hrr respons someth stateless retri client realli want immun dos attack probabl ignor busi signal cours tradeoff robust respons creat big chang somewhat similar stream zero reset wg went june chang like delay wg anoth month result fairli heavi weight connect protocol mayb explor potenti defens verifi server hello origin intend server flow client send client hello dest icid srce ccid server receiv client hello creat context base server hello content pick scid server send server hello dest ccid sourc scid client receiv server hello perform server origin verif associ context tupl ccid scid server send handshak messag dest ccid sourc scid client verifi messag handshak key associ ccid scid messag fail authent ignor client send ack etc dest scid srce ccid client valid server credenti connect establish pretti much flow quic v extra authent ad debat server authent think potenti solut someth esni use public key publish front server server hello verifi somehow demonstr knowledg public key sinc esni resist censorship go much hand hand reus credenti much stretch,first scenario attack point certif valid attack see client messag creat handshak key compet server client process altern handshak key altern scid valu one handshak pass certif valid second scenario server token improv sinc attack provid fulli valid serverhello token eventu fail certif consum resourc fix client alreadi know server public key server sign challeng first packet respond challeng icid correspond step third flow server know client public key usual case use server server client send sign nonc note icid hash clienthello prevent attack attack race client initi attack attempt copi icid clienthello handshak key fail attack attempt copi icid clienthello retransmiss attack achiev anyth assum initi packet contain hash icid first second scenario assum parallel process multipl context client server yes creat extra load goal defens sustain thst load one context result valid connect work long attack forg respons without knowledg server scid attack see first server hello step race compet server hello ccid scid attack win race effect context ccid scid disagre observ therefor discuss follow client need distinguish flow handshak transcript base scid distinguish flow serverhello contain initi packet handshak key handshak packet decrypt success therefor need server token say client need extra id trial decrypt true desir solut attack dos client think turn specif action current draft turn two thread explor seri heurist make exchang robust without chang protocol high level summari work ok server side one creat context complex client rather stiff hand assum establish kind secret client server handshak esni arriv robust solut authent handshak draft long say yes thank base mark v want consid authent new version consid draft,17,83,attack|defense|forge|signing|encrypt|crypt|protect|spoof|credential|authentication|validate|hash|transport|public key|certificate|nonce|scripting,899,0.09232480533926585,0.5135213136672974
1818,https://api.github.com/repos/quicwg/base-drafts/issues/1818,pr,clarifi crypto context connect close,partial resolv,seem reason suffici peer ignor handshak level packet ack ing rtt decrypt packet must tear worst case alreadi toss key seem bit prematur context suggest send context think pr say suffici endpoint expect hold handshak key rto transmiss use key complet quot section tls draft crypto frame given encrypt level sent expect crypto frame receiv correspond acknowledg receiv sent endpoint start timer rtt key carri crypto frame timer start first packet protect rtt sent receiv limit effect packet loss around chang key endpoint must retain packet protect key encrypt level least three time current retransmiss timeout rto interv defin quic recoveri retain key interv allow packet contain crypto ack frame encrypt level sent packet determin lost new packet requir acknowledg,4,12,crypt|tls|encrypt|protect,128,0.09375,0.5124174356460571
82,https://api.github.com/repos/multiformats/multihash/issues/82,issue,skein hash fine grain use,skein hash arbitrari length mean algorithm use gener bit hash longer hash mean file less like hash collis produc shorter hash conveni fast blake faster sha finalist sha,use xx code xxx xxx xxx skein hash python pleas byte varint rang case hash take mani valu byte rang start x inclus smaller xc code next blake byte skein hash smaller xc code next blake byte skein hash sorri rephras blake sorri meant xb skein edit tabl code lay skein skein skein okay right hash hash total blake hash code match implement recheck pleas thank ping blake b code correct tabl move ad,2,15,hash|sha,108,0.1388888888888889,0.5050836205482483
1386,https://api.github.com/repos/quicwg/base-drafts/issues/1386,issue,stateless reset oracl defens,bunch discuss point think conclus effect defens use stateless reset oracl ensur attack influenc choic server instanc packet arriv cluster huge advantag abl reset connect packet arriv connect know often case instanc handl connect gone rout cluster shift connect id point differ instanc case send reset mean connect hang around useless time problem cluster arrang instanc directli target attack one instanc stateless reset oracl send instanc packet desir connect id back token kill legitim connect best perhap defens recommend cluster arrang group instanc share key cannot individu target attack without chang connect id mean instanc id notion use except perhap mean provid key separ differ cluster remov draft simplifi thing,anoth possibl defens tie allow middlebox help prevent ddo attack includ small checksum header success compromis everi attempt infrequ enough support signfic traffic filter checksum bit header packet number connect client cluster understand checksum without path access exist packet attack fail signfic probabl filter similar ddo attack ddo attack extrem common frequent take major infrastructur lot valu abl filter attack packet reach endpoint think consid two fix say proof receipt stateless reset make problem much wors challeng endpoint typic rememb last packet sent discuss secondari defens kista conclud defens provid defeat easili attack stateless reset oracl attack alreadi depend attack see packet connect attack consequ inform endpoint lost state concentr descript cluster rout defens,6,28,defense|attack|ddos|checksum|signing|scripting,229,0.1222707423580786,0.5043126940727234
3717,https://api.github.com/repos/quicwg/base-drafts/issues/3717,issue,tweak split quic transport quic tls draft,draft chang much use right time consid editori effort revisit current split quic transport quic tls let imagin rfc ship someon want build version quic custom handshak key exchang protocol want deviat littl possibl quicv want swap tls someth els ideal write new draft replac quic tls chang quic transport order implement reader need read quic tls specif think accomplish move follow section quic tls quic transport packet protect except packet protect key key updat interact tls key schedul stay quic tls mechan avoid deadlock discard key move quic transport secur initi messag folk think write pr help make happen sens whether interest first,direct even one ever make non tls version think document clariti improv chang heavi one goal nquic exercis separ two draft time coupl desir thing much better shape support direct one point attempt document properti provid gener handshak protocol decis make transport spec version specif make version handshak protocol specif mean need text equival section note specif featur deleg expect tls still use howev say think rearrang need delay draft wglc editori delay wglc clarifi intent inde editori delay part process whatsoev,6,21,transport|tls|protect|deadlock|security|delegation,194,0.10824742268041238,0.5014058351516724
216,https://api.github.com/repos/dyne/Tomb/issues/216,issue,specifi kdf key hash,current choos hash use pbkdf ad h option lock oper select hash good read manpag say tomb use default aes xts plain sha thought sha use hash plain mode need hash function initi vector essiv,case choos differ hash case alreadi use help anoth key still know vari hash case option choos algorithm oper mode make sens allow choos hash importantli sha secur function better altern avail encrypt softwar gener move away alreadi yes probabl better hash move choic sound hmmm quit useless tomb best avail solut keep compat older tomb even mean upgrad exist tomb c choic never useless especi open sourc softwar exactli best solut never know function algorithm broken first favor strong default freedom choic talk expos cipher option cryptsetup lukscreat yes alreadi expos via option use command state manpag got confus suggest abl chang hash extra pbkdf program think good idea look tue sep jaromil wrote got confus suggest abl chang hash extra pbkdf program think good idea ie advantag featur give need look still advantag eventu progress choic option still unus forg oper advantag eventu progress mean choic choic featur complet unclear someon choos someth els default anyway relev hash use option rather easi one reason consid propos exampl featur progress choic sound neither technic convinc price scope go option rather best solut e strong default choic alreadi made choic one slot lock encrypt algorithm see anyth interest tomb come enabl choic pbkdf hash progress choic convinc hear progress think regress alway two side coin choic necessarili use case option mayb instead think expert mode peopl know enabl kilomet long command line option tast normal oper pleas let clutter command line option mani much choic bring confus open option option differ encrypt algorithm enabl option one slot hk strong default choic mutual exclus set option clutter command line alreadi option differ encrypt algorithm strong default choic mutual exclus unnecessari choic secur relat softwar sourc bug mayb bug alreadi option differ encrypt algorithm least explan older cryptsetup version support certain mode user specifi want retro compat use noth similar pbkdf sha set option clutter command line meant use short option command global basic limit letter digit special charact grab one kind option seem good idea said certainli benefit use better algo sha said certainli benefit use better algo sha wrong preimag resist need pbkdf secur wrong preimag resist need pbkdf secur right talk non issu still agre option problem leav open add anoth case render text header kdf enabl tomb key see obvious predict progress insert case switch option said right real improv use stronger hash kdf algo afaik mean one want iter round faster well plenti sha hardwar acceller implement perhap real improv scrypt wrote read manpag say tomb use default aes xts plain sha thought sha use hash plain mode need hash function initi vector essiv yes right initi vector xts plain need hash function confus sha stand shipit first reason default state string cryptsetup accept valid switch wrapper prefer add less sophist possibl top set switch right command pass string option see cryptsetup manpag cryptsetup pov place indic passphras hash sha luksdump indic hash use header sha default luk volum cannot chang use cryptsetup commandlin afaik exampl luksdump back kdf debat know hash algo implement libgcrypt moment replac code think prioriti secur chang asap certainli chang need switch least order preserv backward compat label issu minor work invest strengthen kdf key tomb alreadi agre go direct indic issu wrote first reason default state aes xts plain sha string cryptsetup accept valid switch wrapper prefer add less sophist possibl top set switch right lock command pass string cryptsetup luksformat option cipher see cryptsetup manpag cryptsetup pov sha place indic passphras hash sha luksdump indic hash use header sha default luk volum cannot chang use cryptsetup commandlin afaik hash spec luksdump chang cryptsetup hash option volum creation drive right propos chang cryptsetup manpag state hash option creat action specifi hash password hash luksformat action specifi hash use luk key setup scheme volum key digest say anyth hash cipher option confus thought sha cipher unneed caus specifi cryptsetup hash option time pass understand cryptsetup behaviour issu,11,87,hash|aes|sha|security|availability|encrypt|crypt|cipher|forge|validate|password,695,0.1251798561151079,0.4906356930732727
332,https://api.github.com/repos/cnabio/cnab-spec/issues/332,pr,establish trust multipl registri,attempt fix,probabl wait say see exampl approach given base tap seem requir willing part vendor support metadata repositori agre share meta metadata repositori beg question vendor establish trust share repositori hi glyn sorri fulli understand follow paragraph answer q trust differ metadata repositori differ root trust establish band use approach tap exampl bundl runtim ship known good copi tuf metadata differ repositori even meta metadata repositori distribut metadata establish whether metadata file trustworthi scope document ask specif trust metadata file exampl approach given base tap seem requir willing part vendor support metadata repositori agre share meta metadata repositori beg question vendor establish trust share repositori hi glyn sorri fulli understand follow paragraph answer q think trust differ metadata repositori differ root trust establish band use approach tap exampl bundl runtim ship known good copi tuf metadata differ repositori even meta metadata repositori distribut metadata establish whether metadata file trustworthi scope document ask specif trust metadata file perhap essenti thing establish trust metadata repositori pardon ignor perhap essenti thing establish trust metadata repositori pardon ignor problem shall discuss secur registri meet next week super clear mean thank ad action item meet agenda unfortun wednesday even current spoken attend meet happi chat time though mayb grab slack good go merg believ good go agre merg yeah need rebas top merg rebas thank much,2,14,trust|security,227,0.06167400881057269,0.4901214838027954
83,https://api.github.com/repos/multiformats/multihash/issues/83,pr,ad skein hash,address creat bruce schneier one leader cryptographi fast blake faster sha finalist sha skein hash arbitrari length bit longer hash mean file less like hash collis produc shorter hash higher speed use b xx code xxx xxx xxx skein hash good hash total assum exclud hash multipl implement c go,review hes familiar multihash tabl howev note hash collis bit keyspac concern concern sun spontan go supernova wipe human usual point peopl stack overflow answer bring hash collis sha found broken nobodi even suspect moment that differ stori easili migrat hash function via multihash hash run fast good reput made bruce schneier made yarrow prng twofish cipher wors format version sinc skein includ multicodec mayb time close leav go multihash js multihash open futur good point close,4,21,hash|crypt|sha|cipher,131,0.16030534351145037,0.4893280863761902
3199,https://api.github.com/repos/quicwg/base-drafts/issues/3199,issue,chacha header protect sampl,sampl taken header protect interpret differ dtl quic use dtl use differ like caus problem unless eras possibl dtl order right one make consciou decis see tlswg dtl spec,strong opinion though point rfc section state retain order e help certain implement motiv order quic yes construct aes gcm put counter second thought free endian issu though aes gcm header protect said see argument tend favor nonc first seem question gener design use stream cipher header protect let stream cipher oh argu dtl approach point ration taken certain perspect happi quic need chang tend favour quic order fwiw ok look ekr move dtl match close action work futur version dtl dtl thank,5,10,protect|aes|nonce|signing|cipher,117,0.08547008547008547,0.48765829205513
1608,https://api.github.com/repos/quicwg/base-drafts/issues/1608,issue,varint numer transport paramet,use varint instead fix size field allow us save byte common case allow wider rang valu need importantli consist encod valu across protocol sure correctli write tls present languag though,tls present languag current support varint suppos one add featur sgtm think make sens varint repres valu transportparamet e valu defin section transport paramet oppos use varint transportparameterid otoh necessarili assum meant oppos use varint quicvers use varint repres size block e length block repres use notat quicvers fix length integ quic well express option block quic think make sens varint repres valu transportparamet e valu defin section transport paramet definit exactli meant thank clarifi discuss nyc drive conclus updat sorri delay sent mail list fix,3,9,transport|encode|tls,121,0.0743801652892562,0.48718351125717163
3005,https://api.github.com/repos/quicwg/base-drafts/issues/3005,pr,add secur consider srt hash collis attack,address concern discuss warn pr build top pleas let know want open issu handl pr separ rather piggyback,agre hash tabl attack valid concern lesser degre appli attack cid forth far awar linux kernel chose rb tree hash tabl network stack slow solut similar concern exist server side connect id lookup believ much constant time aspect hash collis good point cid yes server cid initi chosen client though cid think hash map use key use identifi connect collis cid rather collis hash valu issu want expand otoh think make good point ask collis hash valu raw valu gener someth need talk limit discuss endpoint fulfil leak requir regard store srt mayb someth suffici fwiw intent behind creat pr give advic implement cope requir noth think kazuhowould suffici let see cherri pick thank cherri pick commit close pr,5,13,security|hash|attack|validate|leak,145,0.0896551724137931,0.48590338230133057
3418,https://api.github.com/repos/quicwg/base-drafts/issues/3418,issue,order transport paramet,make transport paramet varint sinc chang encod decod anyway good time enforc transport paramet order identifi follow advantag slightli reduc fingerprint surfac make trivial enforc properti everi transport paramet sent current enforc sinc check properti expens mani transport paramet,assum mean order tp number applic typic refer paramet name number exampl plausibl implement structur hold paramet logic order code goe structur encod paramet symbol refer tp number ad sort make code much complic fingerprint sure beat reorder reorder drop space n n better suffici suffici answer creat anonym set e small combin profil specifi valu absenc tp goe propos enforc sender send tps ascend order tp ids much easier tri detect duplic tps arriv order agre depart tls base design prefer fix unnecessari complex receiv side time prepar pr still figur logist detail creat pr includ two chang singl consensu call discuss zrh propos resolut close action,6,12,transport|encode|decode|fingerprint|tls|signing,151,0.07947019867549669,0.47515588998794556
35,https://api.github.com/repos/DP-3T/documents/issues/35,issue,limit fake contact event attack use share hash handshak,limit fake contact event attack reli share inform two devic instead store ephid gener random id rid everi x hour broadcast rid detect anoth devic rid store eventhash chf sort rid rid date year month day chf cryptograph hash function sha sort sort rid predict order add current day creat one event day devic gener store eventhash case infect publish recent eventhash devic check eventhash store secur problem someon ridx broadcast physic person,publish someth els privat key infect person gener good idea believ ephid one risk publish instead see coupl problem propos number publish item size even bloom filter anyth els grow significantli encount alway symmetr event imagin multipl scenario seen rid seen mine around limit fake contact event attack still spoof number made encount know rid see much benefit compar publish ephid infect person encount thank yes perhap download anymor squar amount data guess think enforc symmetri bring benefit limit larg scale fake contact event attack base bluetooth amplifi abl reach much higher radiu prevent limit one kind attack thank suggest consid design intern current propos increas bandwidth consumpt entail continu hold list possibl adopt approach kind bandwidth consumpt talk sure need download data everi client,8,21,attack|sha|hash|crypt|security|private key|signing|spoof,208,0.10096153846153846,0.47091034054756165
21233,https://api.github.com/repos/void-linux/void-packages/issues/21233,pr,nomerg wayland compositor elogind,hope fix,look good remov setuid feel correct path perhap document correct set wayland compositor sure go though think bad complet remov elogind option make compulsori refer upstream recommend logind elogind setuid next best solut secur implic capabl seem worst distro cours make choic setuid even believ best method well elogind default option ad setuid peopl opt setuid seem perfectli reason reason logind top head dbu polkit integr polkit liter depend javascript interpret peopl strive kiss desktop need musl second class citizen upstream support elogind bus factor one xorg still root default void nontrivi issu elogind acpi crash suspend suspend code churn upstream zero interest regress test logind loc sway wlroot combin dbu break elogind probabl freedesktop org specif dumb two upsid logind know work box multi seat peopl setuid adequ priv drop local machin less concern say run public web server local use ssh agent forward dbu polkit integr polkit liter depend javascript interpret peopl strive kiss desktop need think bus ok add lot valu least experi polkit agre lot architectur issu enabl tri flatpak work bus depend polkit xorg still root default void cours someth try chang multi seat peopl good point logind loc sway wlroot combin fork elogind remov multi seat implement kid interest know small program elogind function need even possibl know consolekit part unmaintain seem quit larg still setuid local machin less concern say run public web server local use ssh agent forward know make judgment determin huge risk issu remov default option mostli want wayland compositor uniform templat elogind setuid option coexist though mayb imagin happen artix correct wrong one argument favour setuid one thing elogind correctli xdg runtim dir importantli creat folder run user uid instead within home user secur reason mistaken either done simpl servic creat boot elogind offer function sway wlroot ilk otherwis realli fathom instal elogind hi other plz correct case need believ render elogind useless capabl base protect right avoid setuid mayb im wrong like u r alreadi run case graphic stuff instead run setuid consid harm cuz given app anyth nasti small bug forgotten corner case root privileg reach stuff anyth limit capabl otherwis use system alon dont forget special user admin vesta control panel irrelev exampl u probabl wont vesta ur daili driver u probabl wont graphic ur server mean user wont issu ur secur u run anyth ur privileg harm u like u r alreadi wreck priv escal mani way u probabl care ur data ur system ur data alreadi wrong hand even priv escal btw think firejail apparmor whatev els use well im realli depth topic enough self confid im say btw possibl run whatev desktop environ instal user owner case singl user system need special permiss need chang either stop requir elogind elogind instal alreadi support setuid solut btw sway least seem elogind even setuid seem drop privileg pretti quickli thank fix sway least seem elogind even setuid seem drop privileg pretti quickli use make sens think need rebas meant even instal sway setuid system elogind instal use elogind access display least kill elogind servic system kill compositor access drm immedi let wait void pkg committ accept reject unless ongo discuss irc someth part bouncer join whenev question ask meant even instal sway setuid system elogind instal use elogind access display one good motiv favour chang dual boot gnome exampl want elogind variant seen discuss late irc regard one good motiv favour chang dual boot gnome exampl want elogind variant want elogind smaller risk surfac setuid version abl coexist peac still depend elogind seem better look good want tag anyon review want wait patch still need setuid elogind input devic certain thing understand mean wait patch kernel take avail support kernel seem work rootless xorg someth void support point still need setuid elogind input devic certain thing understand udev suppos manag input logind somewhat new area afaik mayb logind better api udev around long time regard rootless xorg think due configur file specifi root right need default use setuid execut test set enough rootless xorg work adequ know enough udev sure handoff work read discuss regard input devic put user group allow access devic make implement keylogg extrem trivial well make implement keylogg extrem trivial well solv run sway custom user legitim case peopl want remap key etc see need remap key believ keymap wlroot load need daemon solv run sway custom user know think run graphic stuff anoth user feel weird try ask sway though base comment seem contrast bit comment link ask well edit group cours compromis multi user machin instead,9,53,login|security|integrity|scripting|ssh|protect|forge|privilege|availability,764,0.0693717277486911,0.46736815571784973
78,https://api.github.com/repos/multiformats/multihash/issues/78,issue,parameter hash,differ type hash requir paramet current specifi exampl argon paramet iter memori usag parallel one hand paramet view salt treat band howev swap argon hypothet argon much easier paramet treat band similar length one cannot anticip need futur hash function believ requir new arbitrari length field requir new section thought,seem current polici add entri tabl accept gener best polici come arbitrari param hash function mani input see let move,2,5,hash|salt,73,0.0684931506849315,0.4595140218734741
1480,https://api.github.com/repos/kaldi-asr/kaldi/issues/1480,issue,noexcept hash function object,never realli use noexcept appar import hash hope someon look kaldi variou hash function object see stl util h,time look moment look chanc take though cursori glanc idea annot function cannot throw noexcept right function specif oper hash function object appar perform issu either thought insight whether necessari thu mar pm dogan wrote moment look chanc take though cursori glanc idea annot function cannot throw noexcept right receiv author thread repli email directli view github mute thread oh yeah meant ask info gcc blog tldr c standard requir eras swap oper non throw libc libstdc implement unord multi map need access hash valu oper hash function throw cannot call oper henc hash valu item need store along item hash function fast oper rare store hash valu wast ok probabl add nothrow hash function declar variou place contain string hasher anyon time creat pr fairli mechan thu mar pm dogan wrote oh yeah meant ask info gcc manual blog post tldr c standard requir eras swap oper non throw libc libstdc implement unord multi map need access hash valu oper hash function throw cannot call oper henc hash valu item need store along item hash function fast oper rare store hash valu wast receiv author thread repli email directli view github mute thread time tom time look mar daniel povey wrote time receiv subscrib thread repli email directli view github mute thread start monday resolv,2,18,hash|authorise,240,0.075,0.45812761783599854
120,https://api.github.com/repos/osresearch/heads/issues/120,issue,sha hash collis implic head,head reli x tpm turn reli sha certain reli gnupg turn reli recent broken implic head part head need written thought mitig impact head sha way sidestep collis concern,use variou depend hope secur sinc tpm pcr extend oper subject chosen plaintext pre imag attack unlik tpm subvert new attack problem tpm hardwar defin standard machin discret tpm chip base ftpm concern gpg signatur potenti concern believ work around specifi appropri hash algorithm want improv thing patch allow sha signatur sign script explicitli use sha avoid collis sinc control measur measur modifi tpm extens code perform sha memori content let tpm extend pcr sha sha hash appear unreason assum well resourc adversari collid sha cryptograph understand collid sha feasibl timelin like requir introduct care chosen disturb vector input block sha sha thing measur construct appear intuit mitig abil adversari introduc disturb vector first collis full emphasi mine ensur messag word bit differ compat linear messag expans one use disturb vector dv correctli expand messag everi bit mark start local collis select good disturb vector import overal attack cost previous shown wang et al main reason use two block pair instead one pair choic allevi import restrict disturb vector name state differ last step similarli imposs unit input chain valu differ local collis arbitrari disturb vector howev cryptograph legal advic,10,28,sha|hash|gnupg|security|attack|signing|signature|scripting|adversarial|crypt,225,0.12444444444444444,0.45467719435691833
2654,https://api.github.com/repos/quicwg/base-drafts/issues/2654,issue,section transport contain transport congest control function,section contain mixtur transport congest control function choic path paramet rto window etc abstract suggest part differ comment intent deal path chang section nit confirm peer ownership new address endpoint immedi reset congest control round trip time estim new path clear reset requir set cc initi valu connect think cc endpoint must return send rate use previou path unless reason sure previou send rate valid new path congest control semant surpris part quic transport rather cc recoveri draft think normal transport assumpt chang path impli loss congest state path cc paramet therefor signific departur convent approach consid safe extend reason sure peopl quantifi reason sure inform say connect initi window cc new path capac significantli reduc ultim reli congest control respond congest signal reduc send rate appropri suggest signific chang practic tcp cc often huge perform implic initialis iw build cc multipl path use connect migrat singl congest control context singl loss recoveri context describ quic recoveri adequ think transport make claim seem cc decis actual understand specif claim current present,pleas creat separ issu made two issu close present issu,4,12,transport|validate|signing|safe,189,0.06349206349206349,0.45327162742614746
2032,https://api.github.com/repos/quicwg/base-drafts/issues/2032,pr,alway tls prefix initi packet,merg alway hkdf function defin tls allow endpoint tls version greater see section corner case correct prefix hkdf function initi packet client minimum tls version think worth clarifi one defin tls tls prefix otherwis peer cannot decrypt packet henc pr,nice thank good catch think danger dictat secur paramet futur version exampl hkdf broken e g advanc gpu chip possibl quantum crypto mayb import initi secret least implic understood altern text extend say hkdf use futur version wish abl interop version text introduc pr deal specif encrypt context initi packet actual obfusc therefor think risk propos use tls type packet agre secur concern though case option updat quic,6,14,tls|crypt|danger|security|encrypt|obfuscate,114,0.12280701754385964,0.44963619112968445
105,https://api.github.com/repos/multiformats/multihash/issues/105,issue,codec multicodec tabl csv defin implement multihash,state singl multicodec tabl across multiformat project share namespac reduc chanc accident interpret code wrong context howev mani codec tabl clear codec multicodec defin implement multihash exampl mayb basen hash sha blake b definit hash hash well tabl still need cleariti treat hash implement multihash project,code tabl divid section header line code valu specifi block follow hash base multiaddr protocol etc enough suggest altern ok understand codec hash thank,2,11,hash|sha,78,0.14102564102564102,0.44954532384872437
30,https://api.github.com/repos/multiformats/multihash/issues/30,issue,non cryptograph hash,non cryptograph hash includ tabl lean toward yes,lean toward yes alreadi plan includ ident hash function cryptograph better creat anoth tabl differ equival standard better creat anoth tabl differ equival standard agre far much discuss relev peopl look start ad non cryptograph hash well known hash function thu byte plenti small price pay two standard two differ standard tabl give week peopl voic reason discont okay,2,9,crypt|hash,71,0.1267605633802817,0.44930434226989746
2551,https://api.github.com/repos/rust-lang/rfcs/issues/2551,issue,put hashmap hasher result default default err default default,hashmap implement clone clone hashmap default produc hasher state instead distinct default hashmap empti clear hashmap empti former hasher import one easili accident introduc dos exploit code partial solv resiz default think proper solut,suggest help prevent one possibl caus denial servic vulner worth cost ad option hashmap think increas size word altern mitig without cost issu one write right categori function call lint version presum someth attribut paramet say someth prefer right default seem danger hide potenti dos exploit behind innoc look lint easili disabl resiz stabl yet either alway replac hasher clone empti new requir idea reseed etc worst incur one syscal per clone wors though actual replac hasher clone cost rehash everyth answer lint encourag explicit actual answer handl perfectli reason well add clone mode via option const paramet hashmap associ constant buildhash dislik although explicit mostli shift blame onto user instead simpli lint use entir even buri insid whatev need clone mayb wrapper desir behavior look think origin propos chang allow regardless whether want friend addit need someth break chang desir anyway mention enough sinc hashmap send mean need instead someth lazi init safe add depend type easili solv none case default call hashmap new altho wonder two impl hashmap one default one instanc becom danger sound rare thank strong protect provid user switch weaker hash function say fnv perform clone becom riski user justifi weaker hash function key separ clone actual becom danger warn use start write rfc summari summari summari allow implement trait warn unexpect behavior limit specif lint provid warn clone clone motiv motiv motiv encount scenarion implement trait make sens sem desir gener caveat specif case still exist expect scenario encourag abus heavi hand techniqu hidden trait implement rfc exampl want possibl use non cryptograph hasher creat dos vector even individu clone address shortcom hmm gonna use anoth word anyway alway go bikesh add name case one end one caveat impl pleas keep separ alreadi propos cannot work requir machineri afaik actual danger long hasher siphash provid cryptograph secur assur key materi afaik remain safe argu run adversari control data weak hasher fnv inher creat dos vector argu otherwis base ephemer hasher creat exactli problem clone full hashmap use afaik noth special empti hash map nice exploit even alreadi establish option function pointer make buildhash said instead work propos call buildbuildhash scheme strong reason believ improv secur use current default scheme cannot cleanli address clone non empti either principl scheme creat vulner new dos vector low entropi set right answer warn anyon use bound randomst guarante dos proof fact randomst affect low entropi set see yes improv thing least wors current nice know attack outsid siphash threat model scheme propos actual help empti hash map afraid lint bound remain solut cover case although cannot exclud lint becom intrus creat exactli problem clone full hashmap well take solv hash everyth hashmap clone right chang hash seed hash everyth think fine interest observ requir return new produc comput hash origin one specif say instanc produc hash say anyth instanc even implement rule noth say suppos arguabl bug today hash everyth yes exactli right cost alloc memcpi chang must rehash everyth becom extrem slow comparison want write scenario quickli cope make sens anoth method must provid still origin idea use lint lint bound method lint hidden impl make nervou hope lint give caveat impl help prevent usag hidden impl right cost alloc memcpi seem implaus lint pleas leav elsewher yes actual clone entri whatev mean entri simpl enough copi memori rehash larg tabl quit expens asid kinda anti pattern sinc peopl commonli envis constant even use hmm logic error key clone chang hash reread offici document seem logic error think need rerun everi key valu case hash chang think even legitim case say key type kind type whatev contain pointer case simpli return wrap pointer probabl pretti decent implement pointer valu obvious chang part sure ever want smart pointer key suspect someon answer order logic error need special rule type implement rule think add rule rule natur combin form guarante lot guarante clone valu semant instanc rule valu clone must observ differ behavior immedi invalid smart pointer probabl ton stuff okay imo reason make buildhash chang clone better solut secur issu make hashmap bigger,13,66,hash|exploit|vulnerability|danger|safe|protect|crypt|security|adversarial|attack|threat|intrusion|validate,719,0.0917941585535466,0.446522980928421
38,https://api.github.com/repos/DP-3T/documents/issues/38,issue,asymmetr sign ephid mitig fake contact risk,look ephid broadcast plain text secret key use seed gener ephid spoof fairli easi scenario potenti lead target attack fake contact individu known risk infect individu simul mitig user assign privat key broadcast data contain ephid timestamp signatur verifi public key timestamp synchron app good toler eventu devic specif offset packet signatur easi mitig fake contact attack possibl lead good side effect though still theoric possibl instantan record remot replic broadcast packet,agre need point ephid broadcast bluetooth low energi beacon technic limit size byte consid high entropi content small size like suitabl includ timestamp ecdh signatur even use compress right misread part document state far find advertis ble payload size v byte v includ byte mac alway arbitrarili leav byte avail part byte usual byte servic uuid still space know byte state document result cross compat evalu come standard uuid size let pretend byte limit ephid size byte still codomain hash function good distribut leav billion valu everi person earth timestamp byte leav byte signatur look check digit signatur guess bruteforc rate limit polici reliabl enough cours lead blind attack forc temporari ban ephid bruteforc still far less probabl effect obviou fake contact attack system current open know push limit undesir effect think deserv weight especi payload size actual byte game changer bluetooth support devic gap protocol max payload size actual byte solut alreadi implement googl exact problem ephemer identifi mitig track spoof threat ble rest back argument sign well answer new faq public key cryptographi encrypt sign faq describ session key exchang guess aim encrypt payload cours complex reliabl issu sign advertis data remain cleartext addit exchang need gener dp propos consid mani differ cryptograph techniqu rule solut requir deploy public key infrastructur pki understand approach requir form pki otherwis seem difficult verifi authent public key top sever space limit ble beacon signatur key chang time allow easi track infect non infect user anyon know public key payload need includ signatur byte spoof bruteforc packet burst detect someth need done regardless public key share togeth sk sinc infect user packet need confirm authent current propos alreadi allow link ephid infect user sk publish regress solut avoid publish infect ephid group implement publish mix set ephid instead user sk ts public key becom crucial link factor differ public key ephid need public key infrastructur need sinc key pair gener end user devic proof need sign bluetooth packet advertis ephid gener devic report sk report sk alreadi consid proof ident infrastructur need sign seem strong regress sinc addit allow link non infect user infect user infect chang sk note report sk consid proof ident design yes allow link non infect user differ public key need gener ephid possibl overcompl proof ident meant devic report infect sk acknowledg devic infect user gener sk propos public key third parti report sk anoth user publicli known state self gener public key work sinc report alreadi trust report public key grant origin one sign origin packet broadcast ephid sign fake contact ephid report place sk ts extrem easi file fake report third parti ephid report untrust scenario self gener public key trust sinc ephid sign public key broadcast fake report togeth fake public key far understand problem alreadi solv current protocol see fake contact event paragraph secur analysi least degre one consid epoch timestamp clear design yes strongli mitig new design much smarter sinc seem resolv close issu,15,59,signing|spoof|attack|private key|signature|public key|availability|hash|threat|crypt|encrypt|pki|authentication|trust|security,572,0.10314685314685315,0.44336801767349243
479,https://api.github.com/repos/WebBluetoothCG/web-bluetooth/issues/479,issue,allow specifi protect secur level upon request devic,devic requir higher level secur pair access gatt characterist exampl batteri level test iphon se run ios advertis batteri servic use nrf app comput run chromium window user receiv window uwp implement sever differ protect use bluetooth pair includ pair mode present code devic user need verifi appear requir access mani gatt characterist ios believ help abil pair protect level request access devic thought,think need specifi protect level ua abl attempt upgrad connect secur one fail connect protect characterist process differ variou os es maco perform pair process automat platform requir logic implement chrome chromium specif provid context need done order abl connect protect characterist thank explain look fix chromium think need specifi protect level ua abl attempt upgrad connect secur one fail connect protect characterist process differ variou os es maco perform pair process automat platform requir logic implement chrome chromium specif provid context need done order abl connect protect characterist well think idea automat upgrad failur peripher broken design secur perspect sad appl chosen idea sinc give client side secur promis client cours want assur notif come trust devic write goe trust devic client make requir connect must mitm protect exampl understand bluetooth secur model peripher choos level protect support central best allow client enforc particular level pair secur provid inform properti characterist indic whether secur requir understand wrong read bluetooth core specif vol part c gap section gatt client specif secur requir standard extrem detail shall implement,5,25,protect|security|signing|trust|mitm,250,0.1,0.44159185886383057
20930,https://api.github.com/repos/void-linux/void-packages/issues/20930,issue,restructur depend elogind,agre write wayland doc page elogind requir safe wayland session therefor make elogind depend wayland packag packag sway current build option default setuid binari instead cage hand enabl setuid definit requir elogind least current state howev cage current list elogind depend try simpli instal run without look doc error due miss capabl even run root work drop privileg properli make elogind depend wayland seem best solut case even make case instal messag tell user enabl servic restart devic log idk whenev enabl elogind reboot work tag made case elogind requir wayland,inde recommend add packag compositor individu requir socket path must standard locat agre client server order establish connect set suggest feel ad elogind compositor instead common librari part actual reqiuir duplic effort case whoever packag anoth wayland compositor know add depend realiz updat wayfir wayland requir privileg drm master compositor somehow bypass without setuid elogind necessari wayland use depend fwiw creator sway elogind systemd said wlroot base compositor consist behaviour wrt elogind setuid cage hand enabl setuid definit requir elogind least current state think setuid recent ad cage set suggest well want follow xdg spec pedant simpl manual know iirc requir login awar stuff creat folder first user login delet last log think actual matter much standard path put discov socket even strict requir convent use practic mayb someon futur write strip elogind program set idk wayland requir privileg drm master actual becom drm master without root privileg one alreadi master e launch consol drop master ask drm api technic possibl write wayland compositor vt switch edit actual sure mayb possibl close reopen gpu file descriptor recov client buffer try think ad compositor lot duplic e g add cover wlroot compositor anyway cent let see opinion least sway packag set setuid determin templat mean cage recent gain capabl setuid packag definit actual realli idea ad elogind depend wlroot gnome kde alreadi requir elogind compositor requir weston afaik ever use void atm use default setuid binari user must meant test regular though explicit previou respons think librari runtim depend elogind implement per templat basi hand wlroot compositor find furthermor even though current use elogind think good solut sever reason setuid problem priv drop correctli ideal solut much lightweight session manag written safe languag think altern elogind support offici capac setup environ variabl understand issu shell work need elogind set environ variabl creat directori said basic point xdg set specif requir tie login folder use wayland compositor realli matter exist right perm think discuss matter necessarili lead us anywher import point exist setuid binari order break user setup elogind direct depend sway setuid remov sway build script made build option least current work setuid requir elogind run even includ tell user instal elogind make sens packag directli depend elogind think problem remov default setuid made note run compsitor without elogind guess peopl want elogind setuid manual build option servic actual work without dbu understand elogind dbu activ servic file saw pr one issu context elogind setuid binari cap sys admin capabl requir one depend though start compositor unless add setuid hand make setuid build option work well think depend elogind make binari setuid given build option build packag even necessari test elogind without dbu back final know distro want push elogind solut problem guy feel advoc includ build option snippet compositor becom setuid binari take look popcorn voidlinux org see figur mani peopl wlroot base compositor elogind appear elogind usual start dbu without issu reason enabl servic issu deriv run system start basic experi issu elogind try enabl startup first creat pr hope resolv issu consu sure honestli seem want elogind switch default made everyth avail build style updat void doc base whatev agre upon merg appear elogind usual start dbu without issu reason enabl servic issu deriv run system start basic experi issu elogind try enabl startup first still need dbu document prefer issu document understand alway need dbu enabl elogind servic option best rout sure stuff work correctli regard document miss part mention doc issu time discuss remov setuid part potenti interest say cap sys admin need handl input want creat xdg runtim dir creator nosh packag believ due lack knowledg regard setup well exist look ad doc thank suggest pretti straightforward pam modul edit etc pam login add quit buggi time use work case sudden reboot power cut overh,6,52,login|safe|privilege|bypass|scripting|availability,725,0.07172413793103448,0.43513673543930054
282,https://api.github.com/repos/openservicebrokerapi/servicebroker/issues/282,issue,possibl vulner spec,bind ok must return bind alreadi exist request paramet ident exist bind expect respons bodi respons bodi must valid json minimum support sever non mandatori field includ spec explicit unreason implementor conclud respons bodi scenario includ credenti howev repres sever vulner ever requir steal credenti exist bind replay origin bind request spec explicitli state respons must includ credenti,fundament differ think authent protect doug sent iphon jul kent rancourt wrote bind ok must return bind alreadi exist request paramet ident exist bind expect respons bodi respons bodi must valid json minimum support sever non mandatori field includ credenti spec explicit unreason implementor conclud respons bodi scenario includ credenti howev repres sever vulner ever requir steal credenti exist bind replay origin bind request receiv subscrib thread repli email directli view github mute thread fundament differ fundament unless blind possibl admit spec includ bind guess deliber honestli go aws azur download secret key think authent protect authent establish ident make assert permiss author obvious absenc sort author model unless gap spec close noth stop one authent app simpli know right instanceid serviceid make put request effect steal credenti exist bind anoth app creat sure think underestim complex async op return fri jul pm kent rancourt wrote fundament differ fundament unless blind possibl admit spec includ bind think authent protect authent establish ident make assert permiss author obvious absenc sort author model unless gap spec close noth stop one authent app simpli know right instanceid serviceid make put request effect steal credenti exist bind anoth app creat receiv subscrib thread repli email directli view github mute thread async op return know horizon async bind current spec certainti current version spec easili interpret broker author caus vulner manifest sorri clear point process ad think handl return metadata particular talk case broker choos return subset data even none even support add support need clarifi respons duplic bind request actual empti even though return support return empti json quick respons minim think wait see make em consist take point broker return credenti return previou ident bind request case know broker probabl mention open issu investig ad endpoint servic instanc bind spec consid ad updat bind endpoint secur risk think latest think regard broker return async bind endpoint return bind readi catalog metadata flag someth similar platform know distinguish endpoint support resourc readi yet e found continu discuss mix thread f f talk return non process async request concern tell whether resourc progress readi vs idea talk quick search seen peopl advoc accept return sinc part descript request accept process process complet seem sort fit ah ok probabl revisit asap round ad bit logic sinc valid implement let continu discuss ok futur plan option support bind asid alreadi issu spec say receiv bind request ident previou bind request put fwiw respond goe describ respons look differenti respons origin bind request respons vs repeat bind request respons question whether bodi respons ident bodi origin respons therefor left imagin implementor confid everi implementor cogniz secur consider without consider receiv even pass mention spec alway better safe sorri endpoint asid probabl document secur concern text refer chang pr think good idea tackl submit pr draft chang submit pr draft chang got work pr wonder design discuss need next week f f start yet jamaica possibl start monday unless consensu discuss need hey updat pr even rough one welcom wg tidi anyth take updat bind attempt close due inact,11,41,vulnerability|validate|credential|steal|authentication|protect|authorise|security|scripting|safe|signing,572,0.07167832167832168,0.42400145530700684
227,https://api.github.com/repos/quicwg/base-drafts/issues/227,issue,encrypt initi cleartext packet determinist key,altern encrypt cleartext data initi handshak packet determinist key e g mixtur version depend key initi packet number aead use fix spec goal make harder middlebox ossifi stuff client hello e g sni detect initi packet hand addit comput cost decrypt packet server side,worth note aead fix per quic version fix time true decid protect version negoti packet otherwis version specif yes meant version specif said potenti confus keep come back theme version negoti packet protect want stuck protect time decid chose fnv chicago,3,6,encrypt|crypt|protect,92,0.06521739130434782,0.4202701449394226
706,https://api.github.com/repos/quicwg/base-drafts/issues/706,issue,version negoti integr protect first interop draft,belatedli finish first interop draft implement doubt regard version negoti packet text section cleartext packet say payload cleartext packet includ integr check describ quic tls text section version negoti packet say anyth integr protect understand clarifi futur draft resolv issu know implement deal version negoti packet st interop fnv,fnv version negoti afaict otoh probabl look version client implement slack great place kind interop question think obsolet sinc well past first implement draft think ekr clarifi text introduc aes gcm handshak crypto,5,8,integrity|protect|tls|aes|crypt,90,0.08888888888888889,0.4170256555080414
1414,https://api.github.com/repos/quicwg/base-drafts/issues/1414,issue,speed handshak recoveri undecrypt packet arriv,case handshak decrypt packet lost undecrypt packet arriv exampl includ client initi follow rtt packet server handshak packet follow rtt packet case packet acknowledg packet must decrypt process acknowledg possibl indic peer someth arriv dtl use empti ack frame instig faster standard retransmiss handshak data quic adopt similar mechan come someth slightli differ depend upon much feedback want provid one question whether encrypt packet number undecrypt packet provid feedback frame,discuss kista consensu room punt v anoth case occur consid server realli big cert first send server hello lost begin send certif handshak packet block x limit client decrypt handshak packet point retransmit client hello receiv second client hello server distinguish case describ case rtt long client retransmit client hello server packet arriv server want retransmit serverhello server addit byte receiv increas x limit continu send certif,3,9,crypt|encrypt|certificate,144,0.0625,0.41442352533340454
145,https://api.github.com/repos/DP-3T/documents/issues/145,issue,hash need design cuckoo filter,seem typic eu countri size cuckoo filter serialis along line reveal byte h trunch h seed quit possibl requir cuckoo filter hash key use e g sha hash,day reveal period daili download contain cuckoo filter one possibl meet day reveal period meet day filter one daili download differ seed meet day filter daili download differ day prevent collis attack filter doubt separ daili filter harm privaci sinc user devic retain meet day inform anyway infect peopl upload individu bluetooth ids seed gener omit sensit time period freeli compromis tree hash ratchet permit edit time period upload everyth separ cuckoo filter similar data structur tend fast non cryptograph hash function intern gener one cannot ensur given data structur librari cryptograph hash function sha origin post use insid cuckoo filter privaci guarante desir extra cryptograph hash step use data present filter kennypaterson apolog question differ one due respect quit key bottom want design use interoper european cross border implement actual implementor need guidanc cf filter need distribut wire henc need interoper serialis format cannot reli arbitrari non cryptograph hash two option enquir option valu protocol h trunch h seed e byte key e valu hash cuckoo filter cuckoo filter simpli part hash directli without hash option insist h trunch h seed hash sha us use key e valu hash cuckoo filter e h h trunch h seed cuckoo filter simpli part hash directli without hash third let cf ill defin make cross app cross border cross technolog implement stabl relat submit given size involv million infect peopl size h trunch h seed daili cf around origin h trunch h seed expos cf therefor need sha valu directli use cf filter serial raw e g describ shown rudimentari code mind open ticket got resolv design drop propos want abl cf blackbox follow guarante object present cf cf queri api alway confirm cf queri api still confirm present small fals posit rate happen insid blackbox librari depend want reli particular behaviour exhibit safe object cf secur critic applic consist modular approach program want delv insid cf librari make thing alreadi appli cryptograph hash data present cf add item api want addit properti cf discuss whitepap remark relat mani issu file delight enthusiast implement recommend ever tri implement whitepap wait spec refer implement along soon enough due respect person situat either realiti implement alreadi start mani countri eu countri tender due tomorrow noon nation size product follow end month extend desir detail un avoid side effect note offici eu guidelin expect sign tomorrow well carv thing stone wether mean improv make next hour day materi help keep open interoper standard neighbour countri gone life cross border interoper start drive network effect introduc stagnat protocol design realli much detail possibl given design serialis cf filter requir need distribut mobil devic one observ make part spec mind given answer conclud requir dp design valu secur hash anoth sha suffici prior hand cf filter regardless filter work expos mani bit de nl border de estim current around expect peak bit bit document whitepap whitepap say h trunch h seed insert cf alreadi includ extra hash beyond otherwis expect name outer hash addit hash step done beyond outsid whatev hash oper cf intern pleas look back origin post repli mayb help understand wrote wrote repli thank apolog troubl read first repli repli clear updat implement profil detail document incorpor track quick respons much appreci welcom good luck,8,44,hash|signing|sha|attack|privacy|crypt|safe|security,575,0.07652173913043478,0.4139900505542755
1669,https://api.github.com/repos/quicwg/base-drafts/issues/1669,issue,tls depend packet number encrypt,given pn encrypt tls specif perform even differ crypto handshak protocol use wonder part rather go tranport draft tls draft actual name use transport layer secur tls secur quic,argument made transport paramet transport paramet transport doc tls doc simpli defin tls extens capabl transport blob quic hand bit tls specif tend think packet protect belong transport document tls document tls produc key quic consum key crypto handshak version tls one piec restructur consid move packet protect complet across track address,6,24,tls|encrypt|crypt|transport|security|protect,87,0.27586206896551724,0.4122108817100525
1379,https://api.github.com/repos/rust-lang/rfcs/issues/1379,pr,chang thread local variabl accept async signal safe type,add trait thread local object use signal handler relax requir static,wrote bit async signal handler standard librari basic see safe async signal handler ever happen rust standard librari propos one thing worth point go throw posix reason async signal handler run exist thread basic see safe async signal handler ever happen rust standard librari propos rfc propos ad kind async signal handl standard librari see last altern propos ad right tool languag make rust code async signal safe default long ffi code call async signal safe languag alreadi exactli thread safeti code async signal unsaf code thread unsaf like possibl languag interact async signal safe ffi code definit possibl futur ffi code written async signal safe certainli rfc accept k r made c async signal safe default year ago discuss one thing worth point go throw posix reason async signal handler run exist thread sound incorrect gener async signal use interrupt thread uninterrupt work loop synchron signal handl requir addit atom oper best everi iter certain signal cannot handl synchron sometim one thread signal use interrupt arbitrari user code thread updat thread local state thread librari reserv variou signal nptl linuxthread thread synchron code propos compil far rustc concern impl conflict neg impl even languag modifi suffici impl conflict current implement oibit neither default impl neg impl ever appli asid compil error believ equival continu oppos propos add oibit least sort consensu whether current implement bug comment rfc text believ propos appear actual explicitli state anywher code propos compil far rustc concern sync impl conflict neg impl put libcor otherwis compil alreadi implement compil fine mayb bug never compil comment rfc text believ propos refcel interrupt appear actual explicitli state anywher give perform concern clear whether refcel fix librari supplement anoth type signal safe possibl implement singlethreadmutex move global problem mention compil singl branch put libcor otherwis compil alreadi implement lrs compil fine mayb bug never compil ah right forgot part coher rule still believ neg impl actual anyth though still believ neg impl actual anyth though simpl two liner post actual better implement sinc one add addit posit implement thing quit edit nope wrong impl break sinc previou version complic reduc rfc core old version still access via commit histori new version deal languag aspect async signal safeti type type variabl exactli implement longer dictat trait use type implement etc particular get default implement defin type put variabl case liter noth chang current user requir relax futur sinc everyth unstabl macro make trait type chang becom allow peopl familiar constraint differ librari decid distinct use say standard librari never signal safe without neg implement go depend legaci c code abl make better rfc longer propos break chang believ lang lib overal interest address signal handl first class fashion come context embed devic seem quit relat idea cooper multitask singl thread looser requir true multithread quit use embed devic forth obvious relat gener topic rfc though clear actual trait propos especi help anyth variabl use mind think trait formul rfc handl voluntari context switch cannot handl gener involuntari context switch e g userspac schedul via signal rfc enter week long final comment period explain thread safeti impli signal handler safeti type lib team got chanc discuss rfc yesterday conclus go close mention definit seem worthwhil ensur support signal nice time think want flesh stori littl thoroughli well thank regardless though rfc,4,43,signing|safe|unsafe|forge,572,0.07517482517482517,0.4116167724132538
840,https://api.github.com/repos/quicwg/base-drafts/issues/840,issue,version negoti respons fnv protect,read spec clear version negoti respons protect fnv imo explicitli call draft tls say quic add integr check cleartext packet draft transport say cleartext packet sent handshak prior key negoti neither made obviou version negoti respons exclud curios fnv seem odd special case,say clear spec howev sec defin version negoti packet sec defin cleartext packet state requir includ integr check subsect defin four cleartext packet agre fact spec defin cleartext packet packet encrypt confus becom moot point fnv replac aead cipher,6,8,protect|tls|integrity|transport|encrypt|cipher,88,0.09090909090909091,0.41144782304763794
795,https://api.github.com/repos/quicwg/base-drafts/issues/795,issue,sni encrypt,observ current draft sni encrypt propos solut best poor fit current quic design want address problem design fix problem earli avoid foreclos potenti solut futur possibl take advantag fact realli whole bunch deploy assumpt work around hand realli realli hard alreadi tri find solut tls tcp fwiw think resolv least discuss issu,secondari certif seem good achiev http tls put certif request real hostnam rtt data gener possibl tls alpn token carri tls session stream clienthello rtt data stream discourag prohibit wed oct pm mike bishop wrote secondari certif seem good achiev http tls put certif request real hostnam rtt data gener possibl tls alpn token carri tls session stream clienthello rtt data stream discourag prohibit think mean alpn token use select protocol point multipl protocol subset present serv differ back end process pose problem okay protocol tls pattern still point server name encrypt even protocol known anyon abl observ alpn token ted issu whether expos particular protocol tend small cardin tend compromis k anonym much exposur shift load alpn protocol build similar capabl propos http benefit advantag vis vis sni protect gener capabl need think alpn start look build quic extens form extens either replic http certif function quic quic probabl put tls stream export new key done use key updat manag instal christian ekr done work option tls doc basic design work quic none alpn creat undesir secondari signal everi time someon suggest make alpn anyth opaqu cring wait tls give us someth hope peopl realiz propos encrypt sni make multiplex connect nat middlebox see issu practic imposs ipv address exhaust realiti ipv adopt probabl much slower quic adopt quic contribut ipv address shortag problem encrypt piec inform server e dns name addit ipv address contrast sni remain unencrypt nat middlebox share ipv address multipl server choos correct server base sni feel offici punt tls wg expect whatev tls wg probabl better forum discuss mikkelfj said issu feel free email list clear use sni nat full explan somewher full explan easi incom connect case multipl http quic server multiplex behind singl ipv server address exampl iot adopt requir billion http server around world first quic packet sent contain sni nat compar full list sni intern ip pair exampl devic iot compani com devic iot compani com devic iot compani com devic iot compani com sni unencrypt requir alway present scheme work time problem configur sni intern ip map nat box carrier grade nat presum carrier allow configur wildcard match domain name custom outgo connect alway work nat without sni match discuss need happen tls wg importantli everi propos sni encrypt system requir opt site assess either happen tls need track special quic solut awar requir chang quic use happen entir outsid protocol e g dns entir within tls small risk overzeal pad case make hard quic benefit arrang design narrow applic appli quic seem unlik given actor involv motiv work quic go close need chang quic support particular design discuss specif requir come like discuss need left v one case see extern dns solut affect initi random odcid entir random rout appropri target spec necessarili chang basic properti quic destin connect id client initi packet control server therefor realli appropri rout packet connect id server choos solut encrypt sni propos new way select destin connect id seen suggest conced possibl work within constraint either request chang quic,5,37,encrypt|signing|tls|certificate|protect,562,0.06583629893238434,0.40927720069885254
44,https://api.github.com/repos/DP-3T/documents/issues/44,issue,interplay secur data protect assess,protocol roll interest kind optim within constraint decentr much possibl secur ensur person data given actor data protect therefor compos two assess data protect assess top secur assess howev paper fail convey well dynam data protect assess compar secur assess instanc follow condit satisfi one theoret attack demonstr function creep start occur hint new commerci actor come market see new deploy scenario consid entir data protect assess immedi reach differ conclus breyer test,theoret attack demonstr condit share expertis cto indooratla finish promot pitch condit condit met possibl twist origin thought data protect assess simpli chang reach differ conclus data inde person data suspect mathemat refer therein show fact better deploy dp peer peer instanc background devic base listen dp compat beacon emit possibl central system potenti problem deploy prevent appl googl case last point suggest model dpia alreadi incomplet fail address potenti compar advantag hybrid system,3,12,security|protect|attack,153,0.0784313725490196,0.40823784470558167
688,https://api.github.com/repos/OWASP/owasp-mstg/issues/688,issue,x e add dictionari check password polici section,section password polici mention length charact class miss practic check password dictionari case applic list unsaf password allow set password one occur list make possibl disallow welcom match complex rule still proper think good practic process request establish chang memor secret verifi shall compar prospect secret list contain valu known commonli use expect compromis exampl list includ limit password obtain previou breach corpus dictionari word repetit sequenti charact e g aaaaaa abcd context specif word name servic usernam deriv thereof chosen secret found list csp verifi shall advis subscrib need select differ secret shall provid reason reject shall requir subscrib choos differ valu user friendli effect insecur password still much use servic think deserv mention guid,hey think ago put test case sever reason password long enough charact mechan place address brute forc e g suspend account minut threshold hit time wrong password within minut captcha password polici strong alreadi describ test case suffici app attack vector brute forc password simpli even possess hash password dump cannot much strong hash algorithm uniqu salt entropi get reduc mani limit appli password enforc check make harder user pick password therefor think user friendli know password manag random string charact simpli realiti realli app servic handl sensit data function fa anyway dictionari check altern complex rule complex rule x e password must meet least three follow four complex rule least one uppercas charact z least one lowercas charact z least one digit least one special charact punctuat rule goal make user pick hard guess password reach goal nist anoth approach check password dictionari impos complex rule verifi impos composit rule e g requir mixtur differ charact type prohibit consecut repeat charact memor secret app follow nist recommend necessarili insecur even complex rule howev clearli describ x e mstg say must complex rule nist say think handl case guid someth ensur password hard guess done use password complex rule altern check dictionari understand thank point make sens wanna pr ad gonna add instruct dictionari attack burp made propos concern dictionari issu close,11,32,password|unsafe|breach|username|insecure|captcha|attack|attack vector|hash|salt|burp,347,0.09221902017291066,0.40665867924690247
2528,https://api.github.com/repos/quicwg/base-drafts/issues/2528,issue,transport paramet mandatori,default,mean send tp mandatori think endpoint receiv tp assum default valu endpoint use default valu need advertis issu precis word question entir quic transport paramet extens individu paramet still clearli option crisp mandatori need version paramet one nice properti make tls transport paramet extens mandatori help mitig cross protocol attack quic server abort connect miss tls tcp server abort extens present think call entir extens option point sure help practic tls stack run top tcp doubt capabl detect rais error see quic tp extens defens cross protocol attack alpn key separ probabl thing layer defens gener good idea transport paramet need anoth secondari layer agre point belt suspend approach said still think everi singl deploy actual send transport paramet therefor requir extens present sound simpler implement feel strongli question aros realiz perfectli function stack default non trivial send howev client send prevent server send seem bad howev client send prevent server send seem bad argument compel mine discuss pragu pushback make mandatori make pr alreadi pr tag properli close issu,4,12,transport|tls|attack|defense,175,0.06857142857142857,0.4003121852874756
121,https://api.github.com/repos/quicwg/base-drafts/issues/121,issue,version downgrad vulner,badli two version quic transport paramet confus confound valid version negoti transport paramet interpret differ differ quic version need write secur consider recommend preserv initi part transport paramet extens better yet use new extens codepoint format need chang,mark design improv visibl sure understand client engag version negoti claim version n valid step effort confirm transport paramet conform n concern version n paramet retain form differ mean case valid syntax work right agre design secur consider highlight issu reason recommend semant syntact element need chang new codepoint assign yes got certain though server declin speak n look handshak therefor ever attempt interpret transport paramet negoti round trip wind n client send fresh paramet format n guard client bug accident reus origin transport paramet new version semant leak version client support sever attack chang structur transport paramet client construct transport paramet version n due version negoti attack interpret version ensur server think client ok accord server version interpret time client see server version paramet valid accord version n interpret think sound like imagin move version field paramet follow logic plausibl unlik two variat interpret correct evalu differ schema think need text ted observ transport param use valid version negoti moment packet number vn packet verifi packet sent server check complet handshak,7,23,vulnerability|transport|validate|security|signing|leak|attack,214,0.10747663551401869,0.4000939130783081
122,https://api.github.com/repos/multiformats/multihash/issues/122,issue,benefit use multi hash,benefit use multi hash exampl even know hash function use decod sha one hash difficlut restor think featur hash function know hash function hash valu case use,gener question hash look section wikipedia articl usag hash function content digest content use know e hash function digest gener,3,12,hash|decode|sha,52,0.23076923076923078,0.39894285798072815
306,https://api.github.com/repos/dyne/Tomb/issues/306,issue,support pitchforkedsphinx password handl,stef see,scope password handl expect support oper rel straightforward oper clunki current mind ad sphinx host sphinx usernam paramet oper involv ask password obviou exampl open use pinentri receiv master password sphinx assum interact pwdsphinx think mostli perhap facilit put key password sphinx done although believ import make confus user two distinct password master human memoriz gener lack better word high entropi hard rememb use aforement master key usual password cannot store sphinx instead ascii string return sphinx use normal password host usernam pair use key password try make seamless user apart configur oracl locat pwdsphinx sphinx option password ask creat tomb serv master sphinx result sphinx oper serv actual password key unlock follow logic confus host usernam paramet still left user advis auto gener behalf ack remark euclidean comparison tomb key system host usernam pair use gener secret sinc tomb portabl across system problem think sphinx made tomb key think tomb substitut sphinx made becom think think simplifi lot user insecur look sphinx grate insight note host usernam system specif valu allow user distinguish variou store password sinc storag awar content necessari actual hostnam usernam user make call matter inde remov step process afaik output format sphinx alway charact ascii string tombsecret directli open close tomb mayb use standard key got confus note left last point yes decrypt content key file content tombsecret pipe cryptsetup never save support actual key materi use cryptsetup perform hash kdf afaik sphinx provid byte somehow bad sinc indic know exactli sorri key long byte cryptsetup mode default tomb afaik reliabl cryptsetup worth investig use key byte realli degrad lot secur tomb mistaken bit requir due xts use half cipher achiev bit encrypt need twice sphinx descript look charact longest afraid case worth consid whether case initi propos viabl reli judgment matter yes agre initi case best viabl approach sphinx provid tomb glad bash idea around bit seem hold well updat sphinx integr function close readi test travi seem possibl depend chain follow pwdsphinx libsphinx libsodium libsodium dev libsodium header provid trusti xenial repo old necessari code low level depend let us instal libsodium newer ubuntu repo travi accept bionic let alon disco anyth done mitig problem sure travi support docker imag try one recent dep make dockerfil run test travi,11,31,password|username|insecure|security|crypt|hash|cipher|encrypt|scripting|integrity|trust,383,0.08093994778067885,0.3976423442363739
105,https://api.github.com/repos/osresearch/heads/issues/105,issue,tpm pcr rewrit fail badfet attack,badfet empir tpm librari necessarili make sure valu written pcr correctli record potenti vulner exist badfet style devic interfer low speed lpc bus one approach read valu back ensur match expect valu although still potenti vulner,link document video post unfortun ang rick red balloon secur present preliminari research empir hack earlier month hypothet scenario want ensur pcr reset start recoveri shell issu tpmtotp retriev share secret issu attack prevent lpc write extend pcr step abl unseal secret recoveri shell apolog question uninform read full tcg spec someon probe lpc bus prevent perform clean boot snif log everyth power replay measur boot payload dose bus arriv state pcr legit boot code run instead inde attack see read back valu help sinc adversari need inject fault head thing boot order pull attack adversari access lpc bus directli play measur tpm unseal secret decrypt disk encrypt blob seal encrypt give key attack capabl tough defeat sinc swap flash chip concern red balloon research need access intern perform attack unopen machin still hypothet far fetch worth think defend concern red balloon research need access intern perform attack unopen machin still hypothet far fetch worth think defend woah magic definit interest see read talk paper hear publish copi,9,18,attack|vulnerability|security|hack|snif|adversarial|inject|crypt|encrypt,211,0.08530805687203792,0.39428243041038513
810,https://api.github.com/repos/quicwg/base-drafts/issues/810,pr,close connect receiv unprotect ack protect packet,tls draft say endpoint must ack frame unprotect packet acknowledg packet protect rtt rtt key endpoint must treat receipt ack frame unprotect packet claim acknowledg protect packet connect error type optimist ack loss recoveri draft current say unprotect packet contain ack protect packet ignor pr updat loss recoveri draft make consist tls draft,,2,10,protect|tls,61,0.16393442622950818,0.39286112785339355
3366,https://api.github.com/repos/quicwg/base-drafts/issues/3366,issue,retri integr protect add new requir tls api,retri integr protect specifi aes gcm key iv directli work fine peopl use tls stack provid direct access aes gcm peopl use tls stack provid access tls aead api previous consist use hkdf expand label specif peopl reli tls stack gener aead context think resolv concern simpli chang hard code aes gcm key iv specifi tls draft valu deriv use tls aead api,easier suggest overal effort small live either answer note addit indirect hard code peopl find want prime aes directli cours need run aes want go far agre must even though help implement highli appreci merg pr ship think chang default key ship first draft adopt gcm base retri protect least friction use merg think need design,5,18,integrity|protect|tls|aes|signing,128,0.140625,0.3926514685153961
115,https://api.github.com/repos/multiformats/multihash/issues/115,issue,mani size specif hash code,seem uniqu code defin lot algorithm plu size combin especi blake skein handl use length specifi,unfortun length specifi use truncat function common hash function well except ident hash function howev sure allow hash function handl length e g sha truncat etc part discuss unfortun fix well chang point option,2,5,hash|sha,56,0.08928571428571429,0.3922280967235565
1664,https://api.github.com/repos/OWASP/owasp-mstg/issues/1664,pr,wip updat android cryptographi,todo list close x updat crypto sign recommend android x updat key deriv function recommend right one derecommend wrong sweaker one x verifi provid select longer recommend anywher x keychain keystor key goal updat e g close x cover strongbox requir fallback older devic x cover titan term programmat interact necessari issu part job done x encrypt share prefer store data share prefernec masv issu x definit hardcod comment text help add note need done note provid select accord present exampl exampl bks bc keystor definit hardcod ad mstg crypto android,ad definit hardcod x g test cryptographi store encrypt key sharedprefer encrypt decrypt master key store android keystor exampl still progress review keystor keychain descript strongbox titan hardwar back review android test case push updat final pr howev work pr discov follow area improv dynam analysi mstg crypto dynam analysi mstg crypto mstg crypto mstg crypto dynam analysi mstg crypto recommend rais issu take separ pr grow review convers slack spike follow item woudl need ticket well gcmparameterspec address bit anti revers engin need love crypto e g nonc reus limit applic usag associ data etc sign need love rsa pss prefer older pkc pad due pad orracl attack pad rsa need love gener curv usag need love ad definit hardcod x g test cryptographi store encrypt key sharedprefer encrypt decrypt master key store android keystor exampl still progress review keystor keychain descript strongbox titan hardwar back review android test case btw stronger still master key server sort check monitor account usag least server side correct hardcod definit provid list section x test data storag hi pr close mention issu pleas substitut word issu close pr descript automat link see depend pr section link issu thank pleas look answer resolv readi go thank realli great work,7,27,crypt|signing|encrypt|scripting|nonce|rsa|attack,302,0.08940397350993377,0.386106014251709
2168,https://api.github.com/repos/pi-hole/pi-hole/issues/2168,issue,add support bcrypt hash algorithm,rais issu confirm follow x read understood contributor x issu report replic x ish issu report duplic see close open familiar sourc code relev issu expect behaviour password hash use slow hash algorithm actual behaviour current sure password hash transmiss new webui hash new ui done sha step reproduc password webui debug token provid upload undertaken relev inform n dig new webui commit notic sha use hash okay read much better noth follow gener recommend secur practic sha repres fast algorithm make rel easi brute forc password especi transmit plain hash text via http best practic suggest better slow hash algorithm bcrypt told bcrypt need support core,issu featur request differ hash algo believ featur request differ algorithm http transport password hash much point chang hash password effect password api alreadi good point interest promot good secur practic bcrypt help prevent brute forc revers engin origin password basic go industri standard give enough benefit better come store transmit password web interfac server secur run sha twice password better less vulner rainbow tabl attack brute forc think standard bcrypt round pass good start password salt think significantli valuabl plain hash refer modern high perform rig handl sha hash sec system bcrypt round quickmath translat round bcrypt x slower pass sha histori slower better cost benefit cost develop extra librari mainten upgrad new librari want secur bank applic protect life save admin page pi hole care secur protect part need protect come time return diminish latest algo doen make sens http transport password hash much point chang hash password effect password api alreadi bcrypt around longer sha well accept industri standard git link earli stabl zero depend pretti easi implement sinc alreadi use js sha implement want better explain section respons quot stronger hash sure benefit implement bash posix shell script http transport password hash much point chang hash password effect password api alreadi wish guarante everyon use pihol use uniqu password webui never use password system case yes right hash password transmit plain text alreadi vulner protect anyon ever use password twice implement bash posix shell script sha encrypt algorithm test new webui nice make sure everyon instal raspbian chang user pass much realli much hand hold great idea think secur primari look whole packag shell script web interfac includ complex thing know user instal inform protect inform webui shell well password shell util everyon make final comment close realli featur request issu bug need resolv feel free open featur request allow other vote voic,14,82,crypt|hash|password|sha|security|transport|vulnerability|rainbow table|attack|salt|signing|protect|scripting|encrypt,420,0.19523809523809524,0.38609322905540466
952,https://api.github.com/repos/dotnet/core/issues/952,issue,serial deseri untrust data transform proactiv mitig measur potenti zero day,news apach strut malform xml deseri lead though java side world industri wide wake call strengthen secur ground net core rel new think right time put strong emphasi secur put proper mitig place prevent similar event secur first model potenti serial deseri bug similar defect deal untrust data transform net core proper mitig place prevent attack implement multipl layer sandbox,binari serial use problemat includ net core origin howev come back part match net standard api howev help page binari carri warn binari serial danger never deseri data untrust sourc never round trip serial data system control suggest alway use differ type serial e g json protobuf xml etc secur code follow recommend secur resourc access design write code need protect limit access code resourc especi use invok code unknown origin keep mind follow techniqu ensur code secur code access secur cas partial trust code net remot distribut compon object model dcom binari formatt code access secur secur transpar code support secur boundari partial trust code advis load execut code unknown origin without put altern secur measur place altern secur measur virtual appcontain oper system os user permiss hyper v contain wcf long section secur consider probabl worth read recommend applic area wcf cc net core drop lot danger stuff well custom complain bitterli came back enabl peopl migrat complic fact thing secur take exampl encrypt encrypt without ad hmac problemat expos crypto primit peopl want low level primit scope static analysi fix simpl thing md binari formatt still legitim reason use peopl ignor fals posit disabl analysi thing higher level take data protect asp net forc sort opinion secur default primit must present peopl alway go roll simpli stop even sandbox go help tri code access secur implement properli within framework need provid os someth run process code goe without say take secur serious decad net platform year taken mani differ strategi help peopl stay safe respect serial mention even includ omit certain part stack net core plan continu find way make thing safer mitig categori problem specif idea want engag push forward potenti mitig type attack vector let us know continu harden stack secur go close alreadi alway work make thing secur need keep issu open track,13,40,trust|zero day|security|attack|sandbox|danger|signing|protect|encrypt|crypt|hmac|safe|attack vector,381,0.10498687664041995,0.38105258345603943
2925,https://api.github.com/repos/quicwg/base-drafts/issues/2925,pr,add initi threat model secur consider,add section quic threat model fill migrat section rest threat model come wordsmith appli want addit issu fill detail descript worst attack outlin heurist help focus pure document possibl possibl attack today address,upcom chang terminolog well note edit done comment issu fix well ad paragraph describ gener activ passiv attack context rfc clearli defin path path attack follow definit establish document like still take iter mostli readi comment welcom pleas take look love feedback quick read look fine mayb option remov redund sure howev expect talk likabl alreadi cover hat somewher els gener think help add text begin defin attack capabl intent goal attack thank section discuss linkabl set requir origin think want duplic secur consider realli good write guarante think n provid probabl separ issu though anyth els want readi land thank martin review definit agre chang increment editori chang much nicer land main chang,4,12,threat|security|scripting|attack,154,0.07792207792207792,0.37960970401763916
4129,https://api.github.com/repos/ohmyzsh/ohmyzsh/issues/4129,pr,add url encod decod function core lib,omz web orient tool per se sever place url use report pwd termin applic work repo url url encod decod string come play nontrivi nice function avail core librari plugin code use user build script work command line sinc lot develop work web stuff pr add function implement pure nativ perform consist across platform well except call need non utf local provid pretti full implement rfc handl charact class handl local charact safe respect liter encod string option encod mark reserv charact escap minim subshel call avoid perform overhead especi window cygwin extern depend except non utf pr accept singl urlencod urldecod function pend prs chang central implement make switch part pr want intertwin determin prs accept exist implement plugin suitabl core omz code plugin introduc core plugin plugin plugin depend option control encod mark reserv charact plu implement reli varieti extern compon definit appear incomplet inconsist local handl singl nativ implement ensur behavior system make thing easier debug fix updat function includ merg pr longer need,differ version one serv purpos sever small improv implement defens code know relat featur bit better encod one add decod option allow caller control extent escap better coverag differ type charact need escap handl escap arbitrari string embed insid url safe option behavior casual escap whole url string case still work add document thorough izat variabl avoid subshel use shell arithmet oper perform especi window use local option defend shell state though actual go step fix protect defeat old implement work us ascii local use instead tri pars local name robust encod detect good enough think suitabl reus name instead indic privat function implement better probabl copi still better code get merg though rather save work get merg chang stuff call function okay amend close favor includ exact urlencod urldecod function larger termin relat chang reject open urlencod function,7,21,encode|decode|availability|scripting|safe|defense|protect,314,0.06687898089171974,0.3764583468437195
3789,https://api.github.com/repos/quicwg/base-drafts/issues/3789,pr,expand aead limit consid multi user secur,address typic multi user set adversari assum perform massiv amount offlin work break integr singl random connect user repres uniqu key nonc pair consid threat model must treat key result keyupd event uniqu user result roughli speak bound impli multi user set impli minim lifetim singl connect hoang et al present tight multi user secur bound random aes gcm use tls quic take advantag per connect integr limit confidenti limit still appli per key analysi consid encrypt block chang endpoint updat key creat new connect contrast multi user secur bound aead chacha poli aead aes ccm must singl user bound stead,,9,13,security|adversarial|integrity|nonce|threat|aes|tls|confidential|encrypt,109,0.11926605504587157,0.3728031516075134
70,https://api.github.com/repos/multiformats/multihash/issues/70,issue,implement allow lock hash,multihash alreadi allow user give multihash tabl thu alreadi lock librari accept perhap messag clearli multihash implement allow lock certain hash make clear develop otherwis kind applic accept thing wire check self consist valid peopl abl forc weak non crypto hash recommend implement someth even take rang,todo figur good common interfac allow config construct tabl programmat easiest load differ tabl serial format messag better readm file issu current impl,3,8,hash|validate|crypt,75,0.10666666666666667,0.3709518611431122
63,https://api.github.com/repos/ProtonVPN/protonvpn-cli/issues/63,issue,verifi checksum updat resolv conf sh,pleas consid add checksum script download without verifi checksum verifi safe definit state download script chang time start someth malici,writabl anyon root system handi without alreadi instal attack root alreadi hose anyway file writabl user problem need fix file download trust github protonvpn compromis distribut malici file reason download script later execut root without verifi script still make secur audit useless download script chang checksum check know script everi time chang checksum case new file review attack access access modifi checksum see around add gpg sign bad thing imo complic setup process misunderstand someth right download review save checksum distribut system wether scp copi one host anoth packag use packag manag file chang trust audit found everi issu download file without check checksum break assumpt right ship code download exist safer ad hash check think reason easier download initi updat copi within system yeah actual happen download file requir fulfil explicitli tell program download execut file long say yes prompt good check everi user tell someon script know go execut base user choos verifi checksum break reproduc review useless user decid get instal mean good practic prompt say mention download file later execut root without verifi checksum think continu discuss think fix program mean download well without verifi checksum review distribut file download compar checksum code review differ download programm programm download someth els without check later execut root realli discuss download file execut root without check checksum greatest idea especi consid softwar relat privaci make safe possibl reason verifi checksum reason verifi checksum except pretti sure liter anyth instanc mayb misunderstand issu case feel free ignor read script download second script check checksum success review know main script updat checksum trust long checksum check tell anyon safe know file go download benefit see realli download file distribut across machin never download anoth version never updat say user download script github instal secur benefit add check version overal give benefit user script get updat take extra step updat checksum file reason verifi checksum file download execut root absolut reason worri prank april fool heheheh say user download script github instal secur benefit add check version overal give benefit user script get updat take extra step updat checksum file got right let add updat mechan updat plaintext instead user care use vpn protonvpn btw safe anyway right protonvpn secur free vpn servic protect privaci hi everyon idea came defin risk model wget check integr certif someon mitm attack fail typic compromis github compromis scenario mind everyth publicli today host anoth github real escap part trust github everyth central github hand github compromis user compromis eventu use packag use github daili life pleas put person thought protonmail thought avoid confus read articl recent everyth central github find link check add gener process sign protonvpn cli code meanwhil add hashsum check extern file pleas note extern file host host repo reason refer credit sourc script discuss construct base argument reason verifi checksum file download execut root absolut reason worri never said benefit verifi checksum within script file malici mean either protonvpn github hack protonvpn turn malici scenario chang main script attack alreadi verifi realli see secur benefit automat check file someon account push access get compromis yes sorri get funni reason verifi checksum still genuin main script download compromis one review script still download compromis script reason openvpn hook script updat without check checksum main script updat still see ad checksum check scenario chang main script attack alreadi verifi realli see secur benefit automat check file download main script proactiv read run fault necessari download anoth script without check checksum review render useless everi time download script stabl known old version person review still compromis see benefit checksum put extra secur measur account access data code although everyth possibl mind highli expect occur case creat hypothet scenario build secur measur protect ad check tonight case creat hypothet scenario build secur measur protect ad check tonight thank first reason repli reason scenario exist simpl avoid thank nice weekend protonvpn github account compromis repositori compromis well impli even integr check still need audit main script said awar protonvpn cli chang sever time day mind audit whole main script ever singl updat machin problem concern fals sens secur solut impli simpli address problem real world yep see benefit see downsid term mainten cost given script chang happen anyway fals sens secur script check resolv conf instal requir check case run issu run script first time resolv conf sh download never far script download github execut root without kind check check resolv conf legit point pc alreadi hijack protonvpn github account got hack see add benefit download script check done correct never download machin ever updat without check full code everi time think debat mani user go procedur right self updat mechan danger download second script least initi updat manual person tag releas possibl remov updat mechan updat mechan requir consid ad signatur tag releas verifi instal let make small step took repli one checksum lol agre idea mention ad valu quit low rel almost imposs say imposs scenario execut scenario howev ad secur addit break function harm commit let make small step took repli one checksum lol secur work approach make step think next think whole scenario move forward issu see file get save etc openvpn updat resolv conf anyway execut make imposs connect user program check file exist leav go make fix tomorrow nobodi come forth issu file complet useless maco keep instal done someth part thank everyon awesom discuss person tag releas possibl remov updat mechan actual favor tag releas chang rapidli releas tag lack built updat mechan make much easier build distribut packag yup chang soon finish issu implement featur roadmap done actual favor tag releas master chang rapidli main reason favor tag releas moment,19,117,checksum|scripting|safe|malicious|attack|trust|security|audit|signing|hash|privacy|protect|integrity|certificate|mitm|hack|hijacking|danger|signature,970,0.12061855670103093,0.3687683343887329
189,https://api.github.com/repos/AladW/aurutils/issues/189,pr,pin aur tls public key,wip toward implement x patch aursync patch aursearch patch aurgrep document,start document wait someth hesit know upstream support hpkp even client side pin work fine separ commit merg one directli though realli worth pr add two call want specif reason hesit actual prefer client side pin band trust model wherea everyth sent along hpkp cool github kept comment rebas forc push concern client side pin hpkp support site make sure fake mitm certif time public key configur suppos similar issu hpkp first connect respect websit make sure fake mitm certif time public key configur think care exampl check sever time week check within differ network e g uni differ dns server check vpn check sshing somewher els mayb admin machin aur run even gpg sign hash gener directli file post aur gener ask nice find inher less secur hpkp rather trade hpkp nice requir user interact mitm first connect negat complet wherea make channel check much easier even allow secur new machin ever connect internet simpli copi trust hash anoth one matter pass hash close friend compar refer result hash use curl prepend make mind sorri littl time look aurutil atm okay thank repli want lifesign see want implement separ repo let know link readm,8,19,tls|public key|trust|mitm|certificate|signing|hash|security,212,0.08962264150943396,0.36849766969680786
883,https://api.github.com/repos/quicwg/base-drafts/issues/883,issue,editori nit quic tls draft,thing unclear tri cleartext encrypt draft less tls novic ymmv section cleartext secret use state quit clearli connect id wire imag network order version connect id implement chang host order etc call hkdf extract section iv length larger n min see section rfc super user unfriendli minimum state n min aes gcm need cleartext byte best list iv size support cipher section prior tls provid key record protect perform plaintext p transmit unmodifi believ paragraph obsolet,wire order thing hash opaqu valu ever serial one decid number merg,6,8,tls|encrypt|aes|cipher|protect|hash,94,0.0851063829787234,0.36805346608161926
1689,https://api.github.com/repos/OWASP/owasp-mstg/issues/1689,issue,android crypto next level mstg crypto mstg crypto mstg crypto mstg crypto,describ issu need extend describ follow topic section dynam analysi mstg crypto dynam analysi mstg crypto mstg crypto mstg crypto dynam analysi mstg crypto key rotat key lifecycl manag gcmparameterspec address bit anti revers engin need love crypto e g nonc reus limit applic usag associ data etc sign need love rsa pss prefer older pkc pad due pad oracl attack pad rsa ellipt curv ec usag check altern crypto librari ndk use instead sdk verifi bcfk bounci castl fip implement discuss recommend spong castel updat time assign ticket topic show work,,5,18,crypt|nonce|signing|rsa|attack,105,0.17142857142857143,0.36688247323036194
456,https://api.github.com/repos/OWASP/owasp-mstg/issues/456,pr,differ encrypt mode,differ encrypt mode weak ecb mode,sure chang encrypt correctli fill anoth whole book extent encrypt scope mstg encrypt correctli fill anoth whole book extent encrypt scope mstg cover basic everyth relev mobil world encrypt data local encrypt network traffic plu recommend set min key length etc happi current structur move gener best practic chapter includ crypto stuff need think scenario best practic local storag exampl say one hardcod key later talk encrypt data aes inconsist part need x b merg request add diagram mention,3,11,encrypt|crypt|aes,89,0.12359550561797752,0.36393553018569946
883,https://api.github.com/repos/CISOfy/lynis/issues/883,pr,check system use encrypt swap devic,add test cryp check system use encrypt swap devic sign topi miettinen,comment problem pr harden perspect unencrypt swap contain sensit inform password encrypt key trace activ done system swap encrypt random throw away key boot make inform unread precis encrypt key longer exist previou boot forens case import know sinc mean reboot system destroy current content swap make sens preserv content swap first wast resourc investig content swap machin freshli boot forens analysi disk move anoth system cours possibl swap ever use pressur overcommit memori possibl non random encrypt swap encrypt filesystem system need encrypt key boot scope check swap use resum system disk key random new system resum devic separ swap content resum devic interest forens look good merg,4,12,encrypt|signing|sensitive information|password,128,0.09375,0.36307448148727417
461,https://api.github.com/repos/rust-lang/rfcs/issues/461,pr,rfc add thread local storag modul std tls,introduc new thread local storag modul standard librari provid scope tls non own variant tls valu own tls own dynam initi dynam destruct variant similar,cc good feedback propos istm scope tls prefer tls structur harder creat error prone access pattern design give tradit tls better modul name rfc seem explain achiev accept perform compar one main concern good point name take prefer perhap move everyth well macro think somewhat bias toward own default repo probabl today sampl implement benchmark number current par number comment try call specif tri mirror system primit much possibl today discov unsound api propos specif method own tls key return satisfi bound allow store refer tls variabl tls perhap caus undefin behavior destructor say tls variabl store stale refer one anoth realli want store insid ensur satisfi store anoth global talk irc possibl prevent land interim reason go modifi api semant scope tls hear tls think transport layer secur thread local storag make sens call someth emul appropri deref impl thought realli hope catch note case satisfi struct shown sadli detail comment rfc look simplest solut add marker seem gener use unsaf code,5,17,tls|signing|transport|security|unsafe,197,0.08629441624365482,0.3627954125404358
1473,https://api.github.com/repos/drwetter/testssl.sh/issues/1473,pr,full aead cipher implement,rfc specifi cipher suit three symmetr encrypt algorithm authent encrypt associ data aead algorithm algorithm data encrypt authent tag creat allow recipi verifi data modifi authent cover addit data encrypt current implement algorithm testssl sh decrypt ciphertext check authent tag correct involv recipi comput correct tag receiv data compar provid tag testssl sh away check authent tag receiv data abil comput authent tag need order send encrypt data tls server reject encrypt data correct authent tag abl send encrypt data necessari abl complet tls handshak pr replac current implement symmetr encrypt algorithm full implement algorithm full implement includ abil encrypt data send verifi authent tag decrypt data sinc bash implement algorithm slow decrypt code design comput check authent tag debug mode implement code comput authent tag aes ccm base nist special public abl implement code aes gcm poli specif nist special public rfc respect much thank implement implement aes gcm poli pr develop translat c code bash understand code seem work test code comput bit oper system test believ decrypt code work bit integ debug mode e tri comput authent tag believ aes ccm code comput authent tag work bit integ howev aes gcm poli code comput authent tag definit work system bit integ system bit integ encrypt work aes gcm chacha poli decrypt work algorithm debug mode,excel work,7,40,cipher|encrypt|crypt|authentication|tls|signing|aes,225,0.17777777777777778,0.3621354401111603
3662,https://api.github.com/repos/quicwg/base-drafts/issues/3662,issue,forgeri attack updat key,point receiv junk e unauthent packet odd distribut evenli current packet protect key next packet protect key key phase bit nearli random true forgeri result endpoint approach integr limit key usag updat next packet protect key find key similar amount authent failur lead need two updat quick success fatal time tight time need updat say endpoint calcul forgeri rate tri delay updat late possibl allow mani forgeri without anyth react key updat howev matter good hygien worth say someth take editori follow,integr,5,12,forgery|attack|authentication|protect|integrity,88,0.13636363636363635,0.35747599601745605
173,https://api.github.com/repos/mviereck/x11docker/issues/173,issue,question hostwayland secur,understand good secur secur concern context current use kde plasma consid switch sway reduc overhead caus multipl contain run,secur concern wayland protocol design isol applic window opposit x protocol allow access x applic run x server goe protocol design alway possibl secur leak somewher softwar implement e wayland librari someth x docker cannot control affect setup imagin tl dr concern except fact softwar never secur context current use kde plasma consid switch sway reduc overhead caus multipl contain run xpra use caus less overhead x applic kde plasma provid wayland compositor wayland applic compar howev sure kde wayland readi regular thank quick insight answer,3,9,security|signing|leak,109,0.08256880733944955,0.35727158188819885
994,https://api.github.com/repos/quicwg/base-drafts/issues/994,issue,consist term protect packet,quic tls sec claim clear text packet protect aead key deriv connect id correct later tls document use terminolog protect unprotect distinguish cleartext packet rtt protect packet transport document refer packet type protect key except version neg stateless reset correct terminolog match tls unprotect terminolog term cleartext bit vagu point realiz like left cleartext packet becam protect rephras entir quic tls doc probabl top prioriti edit process,definit saniti check done note,4,14,protect|tls|transport|sanitise,77,0.18181818181818182,0.3554374575614929
473,https://api.github.com/repos/emberjs/rfcs/issues/473,issue,rfrfc remov hash ember lexicon,specif talk call map dictionari object hash hash locat router problem probabl rubi ism inherit make littl sens js context asid rubi refer fact implement hash tabl howev believ common name abstract data type e decoupl implement map dictionari associ array javascript probabl common refer object pojo thing modern javascript helper produc mayb probabl unknown straw man propos renam helper mayb later deprec provid codemod call second argument pass helper current signatur commonli refer param hash name identifi gener function paramet blueprint option param want renam,call second argument pass helper imho call favor transit helper land sinc seem analog,3,8,hash|scripting|signature,106,0.07547169811320754,0.3540452718734741
251,https://api.github.com/repos/DP-3T/documents/issues/251,issue,add basic pre compromis secur,far tell current thread model cover attack unauthor access devic let alic devic owner bob adversari bob learn immedi recogn publish list alic sick day attack cours reason prevent bob easi make much harder bob acquir sinc next parti need health author ha ha seem reason encrypt public key health author let result ciphertext sinc alic devic store compromis reveal long bob receiv secret key ha much harder get access alic devic note strictli strengthen secur worst case secret key ha becom fulli public end scenario right anyway comput overhead essenti neglig one encrypt per day alic devic decrypt one per infecti day per actual infect patient side ha primari scenario protect come play alic bob live togeth exampl famili bob either abl access devic without alic know compuls,hi thank input sound similar move discuss thank sound similar yes current issu see fool simpl divers thank meant secur ephid store sorri actual search issu find one actual read issu entir feel differ enough warrant two distinct issu secur ephemer token possibl substanti comput cost one secur actual seed essenti neglig cost cours alway anoth attack one defend cost comput work clearli line denot insuffici return invest drawn somewher given comment issu feel qualifi judg side suggest lie feel roi suffici differ discuss independ,9,18,security|attack|authorise|adversarial|encrypt|crypt|public key|cipher|protect,220,0.08181818181818182,0.35291633009910583
617,https://api.github.com/repos/quicwg/base-drafts/issues/617,issue,quic tls wrong doc talk integr check unprotect packet,total miss fnv stuff ad quic tls follow doc recent code tls yet find anyth fnv quic transport start grep text found section quic tls imo wrong document talk sinc noth tls move section quic transport altern quic transport need pointer section quic tls noth quic transport alert reader exist hash,plan provid peopl stop open editori issu move packet protect stuff transport ad text tls draft mean move piec sorri know plan good plan pure stopgap transport say payload cleartext packet includ integr check describ quic tls alert hash friday june lar eggert wrote sorri know plan good plan receiv subscrib thread repli email directli view github mute thread think issu becom stale close,5,20,tls|integrity|protect|transport|hash,125,0.16,0.35255271196365356
3402,https://api.github.com/repos/kaldi-asr/kaldi/issues/3402,pr,updat insert function hashlist decod,insert function hashlist chang inlin void insert key val inlin elem insert key val differ origin insert function user charg assert element alreadi present new insert function check new element whehter key alreadi present hashtabl element insert return pointer exist element e new insert function abil find insert chang insert correspond decod modifi chang vector queue vector queue findoraddtoken return elem rather token implement chang littl bit find replac insert differ decod test chang step nnet decod sh step decod biglm sh minilibrispeech compar previou code consist result obtain perhap test,pleas report result speed test probabl make sens coupl differ optim level e g follow form show result speed test use grid think standalon use test conduct mini librispeech test utter nnet latgen faster parallel use step nnet decod sh call latticefasterdecod see column test job think result exact wrote binari latgen biglm faster map call latticefasterbiglmdecod see column test job slow sum think result ok mayb littl bit deviat utt latticefasterdecod latticefasterbiglmdecod base new base default new base new result see new version littl bit faster previou,2,13,hash|decode,185,0.07027027027027027,0.3499714136123657
317,https://api.github.com/repos/OWASP/wstg/issues/317,issue,test session integr,ad recent research work propos test strategi cover wide rang session integr vulner e session hijack session fixat cross site request forgeri compar tradit approach test strategi principl parametr respect assumpt attack capabl simpler carri current recommend owasp test guid delight see test strategi consid inclus owasp test guid besid technic contribut think base sound methodolog greatli benefit edit test guid full detail propos avail attach research assign issu check box submit pr add propos content pleas read contribut md assign pleas though love contribut agenda allow time interest try make effort futur possibl involv coauthor,thank great contribut origin author find time meantim one grab great hear interest try investig whether student will pick meanwhil interest contributor warmli encourag look paper start work glad provid extens feedback lack time activ contribut time compar two think exist test guid cover session test session manag hi hsiang chih certainli connect two document notabl secur best practic well known howev think two import differ consid inclus test guid focu test owasp test guid provid recommend cooki mark secur cours sound practic yet mani web app wild compli gener reason still achiev reason degre secur e g secur critic cooki inde secur esor paper provid systemat dynam test vulner oppos inspect traffic lead fals posit see section test strategi threat model test strategi esor paper design w r rigor threat model includ web attack network attack relat domain attack import let site oper take inform decis w r threat care key ingredi clearli sinc modern browser work think esor paper still provid valuabl inform enter owasp test guid thought interest see abl tackl topic mainli oppos cooki attribut page read paper interest discuss differ aspect everi attack model look step requir tackl see implement project try help see look improv content definit refresh thing differ discuss long time result improv larg chunk better focu topic section see relev let know thought avail thank interest avail fairli limit try find time mayb coupl student help help kickstart process guess go easier provid content go super complic consid alreadi paper hard part get familiar tg find right place rework avail discuss proceed email skype whatev suit sure thing hit eli saadwhen possibl abl creat rough overview plan come day unless anyon beat,15,38,integrity|vulnerability|hijacking|session fixation|cross site|forgery|attack|owasp|availability|signing|oauth|authorise|security|cookie|threat,381,0.09973753280839895,0.3484184741973877
3087,https://api.github.com/repos/quicwg/base-drafts/issues/3087,pr,make transport paramet varint,pr move transport paramet away tls present languag instead quic notat allow us encod small integ transport paramet byte instead main goal make identifi bit space allow uncoordin experi without risk collis fix,seem consensu base issu discuss agre issu reach consensu yet wrote pr better describ tri chang issu close replac,3,5,transport|tls|encode,57,0.08771929824561403,0.34194695949554443
9,https://api.github.com/repos/DP-3T/documents/issues/9,issue,data protect consequ miss secur actor,give mani exampl deploy vast mesh passiv bluetooth antenna provid easier mean identif relay secur analysi deploy system encourag care assess around breyer test page overview data protect secur state underscor data protect natur measur worth note identif test cjeu breyer c necessari classifi person data met firstli establish effect side databas like requir break law surveil individu without effect law basi e g illegitim use covert camera direct outward person see ryne c breyer court note test mean reason like use identifi natur person met identif data subject prohibit law furthermor arguabl specialis attack requir disproportion effort term time cost man power risk identif appear realiti insignific breyer howev discuss suggest ensur oblig appli person data still appli good practic light ble deploy threat mention use covert camera reduct full threat landscap fuller extent actual nullifi first test breyer databas alreadi exist legal basi actual consid legitim mani addit databas reduc effort term time cost man power much longer true risk identif appear realiti insignific fact describ commerci servic perform task prohibit law breyer test thin line reli current circumst certainli warrant lot detail discuss scenario threat come state actor fetch addit data privat actor facilit reidentif seem ill advis reli gap jurisprud high stake protocol forc assert data inde consist person data deploy scenario,purpos full document ahead revis legal analysi see exampl track attack bluetooth note attack poc share bottom leverag exist ble mesh forc least citat white paper exist poc least data protect standpoint know run counter secur commun cultur think addit secur perspect exist poc chang littl impact data protect evalu paper particularli light recit gdpr,6,19,protect|security|illegitimate|attack|signing|threat,278,0.0683453237410072,0.3397895395755768
113,https://api.github.com/repos/firehol/firehol/issues/113,pr,hash filter,hi patch first draft ad tc hash filter fireqo hash filter use reduc cpu load classifi everi singl packet bigger tc ruleset exampl lot subnet compani network let say accordingli fireqo configur look first fireqo instal new hashtabl major id divisor current hardcod divisor tell tc creat hashtabl space entri anoth tc filter captur packet built root hashtabl match sourc address packet configur prefix forward packet hashtabl addit success match packet configur mask appli packet address result mask valu use intern lookup match entri hashtabl illustr imag hashtabl look mask valu indic tc continu hashtabl entri third octet subnet network hashtabl entri filter bound redirect packet select hashtabl entri tc class match protocol port etc happen exampl dscp match without hash least filter rule instal match packet first match filter reach right filter hash filter phonebook lookup identifi mask address use lookup match entri hashtabl immedi without lot cpu effort specif match start hope abl explain concept bit,merg last pull request give conflict pleas resolv nice work know function exist suggest see multipl hashtabl per interfac exampl one hashfilt classifi traffic anoth hashfilt nest chang accomplish seem simpl dynam handl instead keyword defin new hashtabl class keyword defin class particip hashtabl anoth allow match gener someth note chang valu someth gener mask specif target match name handl use name array exampl think array variabl note bug certain bash version name array sometim work declar within function declar global reset within function use size hashtabl calcul mask firehol function adapt return hashtabl size return hashtabl size given mask decim hex prefix hex valu exampl suggest replac last pull request alreadi merg look close exampl oh forgot variabl function first time assign keyword otherwis global variabl interfer function made comment pleas comment github email thank merg pleas test work structur gener replac ad thank sorri late respons thank merg give go one major router,3,25,hash|forge|signing,316,0.07911392405063292,0.3393539786338806
1833,https://api.github.com/repos/quicwg/base-drafts/issues/1833,issue,forbid tls level keyupd draft ietf quic tls,sinc quic use mechan spec say tls level keyupd must sent must treat fatal error receiv otherwis implement forget tls see keyupd call callback weird unexpect confus thing,must form key updat otherwis gcm safe long run connect tls section right thu inc quic use mechan either keyupd messag discuss text somewher quic replac mechan spec text forbid quic make tls level keyupd somehow meaning got actual specifi quic handl record encrypt order tcp exist tls keyupd behavior appli,4,10,tls|forge|safe|encrypt,88,0.11363636363636363,0.3363271653652191
1790,https://api.github.com/repos/docker-library/official-images/issues/1790,pr,replac insecur git protocol,git protocol provid authent encrypt use data transfer mechan ssh protocol without encrypt authent,need chang script use gener file specif repo exampl definit true repo hous github mani maintain similar script repo ok check whole organis submit pull request think extern repositori handl improv document fix templat mani fine pr updat similar script need note let know want hold bit plan rewrit librari file rfc format keep backward compat script updat chang doc updat recommend use benefit use instead sinc none url use credenti authent ad switch encrypt abil verifi actual come real provid ssl certif verif sure provid ton valu beyond provid cryptograph secur use commit sha suppos hurt seem necessari first use unencrypt channel network commun mean unnecessarili increas risk attack rd parti e g use unpatch vulner git second use sha git though secur mechan consist check nevertheless time sha consid fairli secur observ gradual transit stronger hash function estim provid attack sha feasibl malici actor given urgent better one step ahead start implement secur practis thank awar sunset sha consid critic context git commit due difficulti creat wellform commit hash collis still said cryptograph secur almost delet comment post sinc realiz reason add layer ssl encrypt figur serv strawman bring good point possibl unpatch vulner git,15,37,insecure|security|authentication|encrypt|crypt|ssh|scripting|credential|ssl|certificate|sha|attack|vulnerability|hash|malicious,216,0.1712962962962963,0.3351421654224396
1172,https://api.github.com/repos/quicwg/base-drafts/issues/1172,issue,ban trial decrypt tls stream reject earli data,tls earli data requir trial decrypt reject earli data skip record encrypt rtt key cannot decrypt client finish quic app data rtt record endofearlydata requir tls sent earli data accept record skip tls implement still like record layer skip tls record fail decrypt,seem reason allow stack disabl trial decrypt requir though intrus stack instanc doubt provid knob nss,4,12,crypt|tls|encrypt|intrusion,68,0.17647058823529413,0.33380407094955444
739,https://api.github.com/repos/kaldi-asr/kaldi/issues/739,issue,readbasicfiletyp confound eof unsign char length,hi write length byte use sign determin signed valu howev error read either mean eof per c ref unsign char best sean,expect istream return either eof unsign char cast int otherwis c doc state make sens kaldi code vulner problem sorri quit understand length byte assum unsign mean neg length correspond unsign integ unsign char uint uint uint resp interpret unsign two complement apologis misunderstand misread code cast char check oh think understand extra zero crop cast char basic overflow back correct valu thank much strang aspect stream unawar,2,10,signing|vulnerability,97,0.10309278350515463,0.32948434352874756
607,https://api.github.com/repos/quicwg/base-drafts/issues/607,issue,report exactli caus frame decod error,pari discuss error code includ connect close idea option specifi packet number byte offset packet error occur seem potenti use debug allow autom error analysi unless one save everi packet ever sent given reproduc error help dramat,rather use suggest print inform string without standard assum fulli encrypt otherwis potenti crypto attack concern releat note error text variabl length open crypto analysi string close frame detail one express strong need close,4,5,decode|encrypt|crypt|attack,78,0.0641025641025641,0.327654629945755
45,https://api.github.com/repos/kaitai-io/kaitai_struct/issues/45,issue,process real cryptograph cipher,time time request implement real cryptograph cipher ks des aes idea rc etc try outlin mind implement start creat ks standard cipher name paramet current ton name avail differ implement want unifi name use ksy file map exist implement slowli gather implement algorithm target languag try map stuff standard librari much possibl cours everyth thu includ extern librari ok strive much possibl option e ksy use algorithm x need link includ librari x support target project exampl translat someth rubi anyon realli interest suggest start gather list cipher paramet list librari target languag support,key iv settabl applic rare file encrypt data except possibl ransomwar realli matter come long avail exampl via sort express turn seq attribut instanc attribut param etc work get anoth file read technic imposs express mean input runtim exampl type use result class app pass e constructor look ahh oki doki wasnt awar param start read user manual far finish think isnt actual equival construct,6,11,crypt|cipher|aes|availability|encrypt|ransomware,164,0.06707317073170732,0.32606175541877747
1347,https://api.github.com/repos/quicwg/base-drafts/issues/1347,pr,write spoof packet guarante,agre back never got around put conclus document done work write rule connect close tls alert relat chang basic principl never got articul attempt outlin authent packet receiv handshak done mostli simpl aead fail drop small carv type icmp strong limit inform use expand pmtu usag cover destunreach use permit narrow rang action stateless reset anoth snowflak bulk text concern handshak cover two mechan tie connect ids echo valu protect version negoti instanc aead use connect id input explain defens path attack fail establish connect think cover necessari point close,,6,6,spoof|tls|authentication|protect|defense|attack,95,0.06315789473684211,0.32374629378318787
451,https://api.github.com/repos/pivpn/pivpn/issues/451,issue,danger bit encrypt,hello use bit encrypt privaci vpn concern much mainli fact bypass firewal use port cours want speed bit good enough kinda hope less target extra layer add hassl power hacker break key see data send power connect hack router say bank info anyon explain great know real issu find info onlin mani thank,bit encrypt good casual attack consid deprec today standard modern browser even allow connect websit use encrypt strongli suggest switch bit reinstal pivpn fastest need regener ovpn file certif crack weak encrypt stolen config file imperson thu entri point insid local network try attack comput sniff tamper hijack traffic consid littl none speed drawback use bit higher certif use initi authent key renegoti occur everi hour vpn usag feel speed connect lower symmetr cipher size aes cbc aes cbc still secur wow thank expain try bit speed drop come back ask lower aes cbc mani thank hello went mbp mbp honest fine still secur woulden see con switch aes bit sooo u explain xd mani thank well doubl check home network local client use bandwidth clearli lower speed tunnel realli want chang cipher edit server config chang restart server lastli appli chang client config mean want chang cipher regardless certif size get lower speed compar link speed impli raspberri pi power enough hello realiz sister back vacat use skype watch movi explain speed drop u say vpn speed slower internet speed chang aes bit internet speed without vpn vpn con use bit sentenc u realli want chang sound bit downsid xd mani thank suppos internet speed home connect vpn run speedtest client download upload speed think client download someth server send upload data mb max client upload someth server upload data well mb max server configur compress pivpn sometim even higher speed vpn second scenario home speed exampl mb via vpn sever reason speed drop far away server slow client speed weak wifi network low signal cellular connect power server reason exclud think raspberri pi cannot sustain encrypt requir aforement speed case lower cipher size lower cpu requir check throughput higher upload speed home mb perfectli fine aes rsa explain better thank lot consid ad issu faq someth sinc question explan quit pertin enlighten user hello wow made much sens guess best speed vpn home internet mbp upload get around mbp vpn think pi still bottleneck get usag core try bit post result bit standard u say secur differ mani thank one note compress reli redund chunk data look aaaaaaaaaaaaaaa easi compress send data look ahbjdbdfhqwuhif harder spot patter result compress effect huge gain take exampl traffic alreadi encrypt server client modern cipher properti look random nois observ point view mention random data compress well less benefit standard traffic instead compress nice download test vlc binari check mb aes secur mani year come mayb fact time aes use perform reason far expert though take word grant hello test bit bit server minut away speed differ zero still get mbp cpu usag lock ping improv ms go bit raspberri pi littl less struggl speed boost client use raspberri pi vlc file download second use vpn mani thank give experi server home north europ right uk connect home wife home watch stream iptv watch youtub porn whatev like web one rpi torrent client time vpn ed home hotel connect easili watch movi tvshow ssh cloud server day day life default openvpn setup pivpn actual issu tbh edit tell rpi liter scratch ball max seen reach one core load averag top thing see bottleneck rpi inde nic mbp nic speed test report even bigger drop mbp make total sens loss far far away hotel wifi mean realli expect home network speed connect vpn even neighbor next door still go bunch server still lose bandwidth close seem discuss end noth add,21,47,danger|encrypt|privacy|bypass|firewall|hack|attack|certificate|crack|snif|tampering|hijacking|authentication|cipher|aes|cbc|security|tunnelling|signing|rsa|ssh,634,0.07413249211356467,0.3225688934326172
140,https://api.github.com/repos/pypa/manylinux/issues/140,pr,enabl hash check mode pip instal,good idea add packag instal via upsid allow build use detect whether packag modifi expect downsid requir manual updat depend accept case pin version hash mani packag fix,nervou secur maintain trade upsid give us protect compromis pypi attack modifi old releas instead make new one mitm attack connect pypi latter happen sinc time run pip suppos work tls etc plu main reason someon want compromis manylinux docker imag compromis packag built upload pypi someon alreadi pwned pypi alreadi lost downsid substanti increas mainten burden docker imag manual updat hash everi time packag make releas someth happen pretti often practic probabl mean updat packag time mean get secur fix releas seem bigger problem one origin tri solv think threat model think note current kind cryptograph check actual compil get tls packag signatur noth probabl weakest link asid attack develop laptop commit access look peopl cento org support http repo file mayb use copi repo file url swap good improv secur upsid think need compromis pypi attack need e g steal credenti one pypi packag use manylinux case protect downsid right increas mainten burden updat requir txt secur updat one pypi packag think alway case anyway softwar includ manylinux e g openssl updat week ago allevi burden automat tool e g use monitor whether pin depend suffer known vulner summar agre increas mainten burden think need updat softwar manylinux secur fix alway anyway exampl even fix pypi packag hash probabl need build reupload new docker imag anyway secur updat packag aris old imag contain vulner updat address hope make sens maintain think regard devtool repo look packag updat three year simplest bundl static copi packag github repositori possibl think alway case anyway softwar includ manylinux e g openssl updat week ago inde right openssl main thing need updat manual ad anoth item list big chang especi sinc project setuptool releas much frequent openssl set someth pyup requir io inde make sens improv prompt rebuild independ pr handl updat hash total understand leav decis maintain look believ pyup updat requir txt file need test know tuf use pyup sorri bother happen know pyup automat updat requir txt file yes support pip thank good know okay enabl pyup io think address concern guess see goe thank much sir,13,31,hash|security|protect|attack|mitm|tls|threat|crypt|signature|steal|credential|openssl|vulnerability,382,0.08115183246073299,0.3188706636428833
85,https://api.github.com/repos/elasticdog/transcrypt/issues/85,issue,consid improv transcrypt handl larg file,mention transcrypt current thing hinder encrypt mani larg file ticket draw suggest improv lost broader discuss particular paraphras encrypt file base encod flag take space binari data textual encod necessari sinc encrypt content human readabl diff abl text ad encrypt file line disabl git pack delta compress avoid wast work push encrypt file compress exampl make sens updat transcrypt binari data instead base recommend default implic thing new transcrypt ed repo exist one,,3,11,crypt|encrypt|encode,80,0.1375,0.3185054361820221
314,https://api.github.com/repos/aws/containers-roadmap/issues/314,issue,fargat ephemer volum encrypt,aws fargat encrypt ephemer volum servic manag key,thank put public roadmap common web server spool larg http request upload temporari disk applic temporari disk build larg download etc data spool disk often contain sensit custom data includ person identifi inform mani busi make contractu commit custom data alway encrypt rest one argu disk necessarili mean rest ephemer storag scope lifetim contain task one argu assum ebs data secur made unread contain task end prior underli storag realloc anoth aws custom howev without encrypt use task scope key less confid anoth aws custom somehow read data later volum encrypt custom kms key account kms key updat particularli kms cmk issu encrypt data process work around encrypt drive howev case fargat option encrypt drive use kms option encrypt drive realli good step secur data end end cent featur still built order compli review accept manag statu baa account sign aws artifact aws manag announc blog use servic key see propos around custom manag cmk kms ship call work cmk kms track,3,12,encrypt|security|signing,175,0.06857142857142857,0.3171694874763489
167,https://api.github.com/repos/quicwg/base-drafts/issues/167,issue,hash unencrypt packet,quic origin specifi byte hash unencrypt packet drop quic crypto swap tls map add back sinc use elimin corrupt packet random internet junk possibl prevent reflect attack mention,discuss tokyo gener support editor clearli choos propos run straw poll chicago chose fnv,5,7,hash|encrypt|crypt|tls|attack,46,0.15217391304347827,0.31659626960754395
3701,https://api.github.com/repos/quicwg/base-drafts/issues/3701,issue,quic tls draft defin anti forgeri limit packet length,issu respons pr introduc anti forgeri limit packet length inherit maximum tls record size sinc mention comput limit size put limit document instead leav exercis reader,case help,2,4,tls|forgery,38,0.10526315789473684,0.3145480453968048
512,https://api.github.com/repos/quicwg/base-drafts/issues/512,pr,forc server client rememb transport paramet rtt,includ victor recommend avoid client violat server constraint oper mean server accept rtt requir provid new transport paramet compat previous advertis valu reject rtt made easier server allow advertis differ transport paramet appli rtt includ valu tls newsessionticket messag alongsid ticket use resum,,3,5,transport|violate|tls,51,0.09803921568627451,0.31319090723991394
97,https://api.github.com/repos/multiformats/multihash/issues/97,pr,add kotlin multihash implement,add kotlin multihash implement,look good start possibl prefer varint support place merg prevent nasti bug support varint ad decod function constructor still look assum length multicodec fit singl byte refer go implement refactor code,2,3,hash|decode,40,0.075,0.31100717186927795
299,https://api.github.com/repos/gliderlabs/docker-alpine/issues/299,issue,node alpin zlib vulner,hello dockerfil ibm bluemix provid vulner advisor featur scan imag provid report notifi follow packag summari url zlib inftre c zlib allow context depend attack unspecifi impact leverag improp pointer arithmet inffast c zlib allow context depend attack unspecifi impact leverag improp pointer arithmet inflatemark function inflat c zlib allow context depend attack unspecifi impact via vector involv left shift neg integ crc big function crc c zlib allow context depend attack unspecifi impact via vector involv big endian crc calcul address given must stay base imag patch fix thank,use better approach provid minimum differ version better question node packag alpin packag index actual built upstream continu node issu,3,9,vulnerability|attack|crc,115,0.0782608695652174,0.31048235297203064
562,https://api.github.com/repos/quicwg/base-drafts/issues/562,issue,key phase bit protect long header,transport draft say packet protect rtt key sent long header need kay phase bit protect packet long header,sorri spam realiz two differ packet type confus packet type one case bit case,3,5,protect|transport|spam,39,0.1282051282051282,0.3100786805152893
4,https://api.github.com/repos/WebBluetoothCG/web-bluetooth/issues/4,issue,figur much fingerprint need accept,current devic expos uniqu ids devic possibl allow site enumer servic devic defin probabl enough fingerprint devic much need expos let peopl write use app fact user explicitli pair devic site mitig privaci concern,per meet obscur much possibl order forc devic put effort toward make fingerprint want basic idea requir ids randomli select per websit devic pair probabl word standard borrow specifi frame tradeoff util api amount obfusc key question region util accept high malici fingerprint impract doubt think focu access devic explicitli pair devic part obfusc access control polici essenti anyway evolv easili obfusc avoid complex obfusc implement background read,5,11,fingerprint|privacy|obfuscate|malicious|access control,108,0.10185185185185185,0.3086707592010498
373,https://api.github.com/repos/drwetter/testssl.sh/issues/373,pr,openssl rfc rfc openssl,pr provid implement openssl rfc rfc openssl use openssl rfc run server prefer help determin display negoti cipher believ use rfc name address current fixm understand cipher ecdh aes mark pr svrti minor wherea cbc cipher caught mark pr svrti medium left unchang,hi idea good thx look pick one suppos head map file rfc cannot found someth still ok l throw error fyi plan work futur fix tabl extend replac ineffic look th repeatedli openssl binari mayb array even effici pr unveil error exist code cbc cipher medium find tls avail fyi commit yesterday stumbl numer time today seem waayyy difficult x sed x grep x egrep chang one goe hi test openssl rfc everi cipher support openssl andrfc openssl everi cipher etc map rfc txt fairli certain function correctli least map file rfc found better implement howev fine need openssl rfc code write thought go ahead implement submit result openssl rfc head sinc call openssl alway return one line openssl cipher rc md output head awk grab byte hexcod head similar reason rfc openssl sinc grep map file rfc return line ssl rsa fip des cbc sha ssl rsa fip des ede cbc sha want hexcod first match line xfefe xfeff fix code code throw error map file rfc miss idea extend map rfc txt version run allciph run cipher per proto sslv socket tls socket rather openssl client howev moment reli openssl cipher v list cipher suit hexcod text local version reli openssl need file similar map rfc txt cipher order strength kx enc provid openssl cipher v includ hi long run thought use th atm howev person spend spare time get bug squash releas eventu cheer dirk pr certainli wait releas howev decid try idea use array load array first creat temporari file load content file array array seem bit faster fast convinc speed differ matter think case os keep copi map file ram disk cach use file involv disk oper map file creat similar copi format openssl cipher v sort cipher encrypt strength file easili use function e g run allciph run cipher per proto need cipher order addit includ cipher map rfc txt even find openssl name sinc cipher still test use tls socket pr certainli wait releas yes howev decid try idea use array load array first creat temporari file load content file array array seem bit faster fast convinc speed differ matter think case os keep copi map file ram disk cach use file involv disk oper map file creat similar etc map txt copi format openssl cipher v raw data e openssl better one oper map file gener sever openssl version pm other actual releas thought replac addit includ cipher map rfc txt even find openssl name sinc cipher still test use tls socket look cheer dirk hi see comment wrt slight renam propos thx david merg dev via convinc current master,10,63,openssl|ssl|cipher|aes|cbc|tls|availability|rsa|sha|encrypt,486,0.12962962962962962,0.3071708381175995
6040,https://api.github.com/repos/fish-shell/fish-shell/issues/6040,issue,fish user path prepend vs append secur,recommend augment path document behavior prepend thu search first overrid binari name found path use want overrid system binari privat copi howev prepend approach secur risk exampl say ad binari distribut npm ad path npm modul instal malici depend npm depend tree instal binari name system binari overrid import system function besid secur vector confus bug system binari start exhibit differ behavior safer default behavior append path fish user actual intend overrid binari worth handl separ user opt secur risk explicitli npm ecosystem use altern handl use recommend run local npm specif binari use explicitli ask local npm search path check binari come npm persist ad path approach ok still number sourc repo encourag user add directori path often disclosur extra path use overrid system binari defens depth measur recommend fish take secur default approach append system path rather prepend,howev prepend approach secur risk user decid add user modifi path malici depend npm depend tree instal binari name system binari overrid import system function malici depend npm depend tree alreadi lost presum execut point anyway defens depth measur recommend fish take secur default approach append fish user path system path rather prepend sorri make fish user path much less use thank swift respons anyway,5,14,security|malicious|safe|disclosure|defense,213,0.06572769953051644,0.30711495876312256
72,https://api.github.com/repos/DP-3T/documents/issues/72,issue,secur level prg prf skt broadcast key,refer prove secur strength aes ctr hmac sha skt broadcast key seem simplest prg skt,perform consider aes key repeatedli encrypt differ input block key multipl ephemer ids analys use standard result hmac secur prf plu aes secur prp use prp prf switch lemma analysi requir two game hop first switch hmac output real random use prf secur hmac make aes key uniformli random second aes prp secur prp prf switch lemma chang output aes truli random string end one obtain bound distinguish tri distinguish output sequenc random sum term relat prf secur hmac prp secur aes term form q n q number output use aes come form prp prf switch lemma q n analysi standard,5,23,security|aes|hmac|sha|encrypt,124,0.18548387096774194,0.30590930581092834
2742,https://api.github.com/repos/quicwg/base-drafts/issues/2742,issue,automat applic new tls cipher suit,suppos futur tls cipher suit aes ocb sha work quic without new quic draft aead part alreadi clearli defin given aes ocb use aes hp mechan current gcm use perspect desir properti add new tls cipher suit analog cipher core block cipher nonc base stream cipher exist spec new quic document requir altern design requir quic applic paragraph new tls cipher suit analog dtl ok iana flag see,header protect depend defin negoti aead paragraph,7,18,tls|cipher|aes|sha|nonce|signing|protect,82,0.21951219512195122,0.30535590648651123
322,https://api.github.com/repos/rust-lang-nursery/rust-cookbook/issues/322,pr,add recip salt hash password use ring crate,add recip slightli chang word exampl explicitli mention pbkdf use pbkdf key deriv function verifi password hash cc fix,excel feedback alway want run everyth rustfmt updat pr one thing want run format function call deriv verifi rustfmt reformat two argument column format seen exampl consist ad third format make exampl bit longer term line count happi flatten thing prefer thank fine work,3,5,salt|hash|password,72,0.06944444444444445,0.3048202097415924
953,https://api.github.com/repos/rbenv/ruby-build/issues/953,pr,mirror checksum,hint add mult digest support mirror script present form add md sha support exist sha behavior md support isol commit drop pr desir ad complet sake realli sure test realli test fact mostli copi,kept local var fan use posit arg without local name abundantli clear variabl went instead sinc keyword renam well particularli happi anyway sinc peopl assum actual checksum comment allow mirror handl md fine handl md sinc cost us much realiz think comment sinc made request variabl name chang think readi merg unless test mirror script md need best includ known broken algorithm numer problem known collis best stick sha hash algorithm yet broken agre thing produc md howev script ought abl handl wide rang checksum possibl imo consum widest possibl build definit file especi script oper git histori take rang commit input therefor even though exist repositori therefor kept lockstep definit file consum oper rang histori rather exist outsid repo histori well think make sens abl oper old commit contain md checksum find share checksum function execut checksum approach sophist look forward maintain differ implement differ execut go away week around review accept prs recogn substanti contribut rbenv famili project invit org write access howev pleas wari merg larger chang includ either project without approv peopl org ad rubiniu scraper rubi build exampl larger chang probabl hold come back bin rubi build alreadi function use share function move checksum function mirror script howev bring anoth thought nodenv long thought organiz distinct probabl differ file privat function rubi build use intern public function intend use build definit go suggest make file contain function respect sourc current function crazi clever nearli quin sure valu separ file sourc thought simpl solut move checksum function lib decid potenti extract later actual recogn keep rubi build function singl file make step trivial still move checksum function soon bigger convers around lib extract much later,4,20,checksum|scripting|sha|hash,316,0.06329113924050633,0.30442455410957336
3585,https://api.github.com/repos/kaldi-asr/kaldi/issues/3585,issue,threadsaf,nnet x vector extract thread safe,nnet oper multipl thread safe use gpu even use gpu actual safe iirc mayb optim best batch thing multipl utter want creat version xvector comput base decod alreadi exist comput xvector fix size chunk utter averag rather comput entir utter think make substanti differ time though forward note think specif object gener safe call multipl thread unless const argument function call constructor call thread thank,3,6,threadsafe|safe|decode,73,0.0821917808219178,0.2993914484977722
2965,https://api.github.com/repos/quicwg/base-drafts/issues/2965,pr,updat stream commit attack exampl,stream commit attack part ad draft ietf quic transport unidirect stream use draft ietf quic transport stream split unidirect bidirect exampl stream commit attack miss,thank done editori merg,2,5,attack|transport,35,0.14285714285714285,0.2986607551574707
86,https://api.github.com/repos/dyne/Tomb/issues/86,issue,upgrad develop hash algorithm revok old signatur,hey guy love work notic site use gpg sign md hash softwar verifi authent well hash easili collid critic applic encrypt softwar e tomb consid high valu target forgeri trivial creat collis exist hash make new malici alter think seem possibl hardwar avail consum hash collis made thusli prior gpg sign signatur append malici code make look person attest authent secur sha better nice code sign thank cathal,mh leav work gpg actual think overrid default gpg behaviour pointer research btw realli possibl chang gpg sign algorithm suppos sure read consid cours gpg use old hash order remain backward compat openpgp implement gather strike bit short sight honestli learn go read stuff encount debian guid prevent old hash algorithm done work nice even notic default behaviour gpg deriv apg favour newer hash md sha said think easi make messag match exist sign hash attack sort exist fact even exist sha famili hash still difficult enough peopl consid sha reliabl accord wikipedia newer ripemd hash ripe famili resist known convent attack although note ripe hash less coverag test e big bad organis secret collis alreadi know test public bodi thank advic good pointer start sign sha hash file issu gpg interest wonder go polici gpg,11,36,hash|signing|signature|authentication|encrypt|forgery|malicious|availability|security|sha|attack,212,0.16981132075471697,0.2986217141151428
45,https://api.github.com/repos/DP-3T/documents/issues/45,issue,circular reason around breyer affect trust,breyer case invit two type circular reason eventu affect trust purpos increas trust deploy system new law rush curtail commerci offer around bluetooth track see least durat covid opportun great kick mention author slip paper purpos decreas trust deploy system actor want leverag interplay secur data protect see actual carri attack therefor forc shift data protect assess like lead polit footbal around whether legal collect data exact pretens use delegitim deploy system etc current time belief trust attack actual quit like word exist trust attack actual increas chanc identif attack conduct turn via breyer affect data protect assess first place,,6,16,trust|authorise|security|protect|attack|delegation,107,0.14953271028037382,0.297673761844635
2550,https://api.github.com/repos/quicwg/base-drafts/issues/2550,issue,appli greas transport paramet,space privat transport paramet process assign new standard transport paramet howev sinc appli greas transport paramet leav open flexibl ossifi happi produc pr address spec,interop london found implement fail handshak upon see unknown transport paramet think appli greas transport paramet great idea discuss london prepar pr progress prepar someth open pr friday june mark nottingham wrote progress receiv subscrib thread repli email directli view github mute thread sorri total drop ball text age ago circl back today final thank see,2,7,transport|signing,86,0.08139534883720931,0.29764077067375183
603,https://api.github.com/repos/emberjs/rfcs/issues/603,issue,html safe awar string escap,background ember use function still code base public live move modul import port deliber howev port problem anyon want implement publicli avail reli privat api unless miss someth obviou implement look someth x x const bad char let escapechar function chr return escap chr borrow handlebar util escapeexpress escapeexpress function string typeof string string escap safestr sinc alreadi safe string ishtmlsaf string return string tohtml privat api sinc safestr public els string null return els string return string string forc string convers done append regardless regex test transpar behind scene caus issu object string escap charact string string string possibl test string return string return string replac bad char escapechar tohtmlsafestr tohtmlescapeexpress public let slide probabl major issu peopl handl app land open pr close fine open rfc issu sinc sure close know privat api must reli,tri accomplish need bunch helper mark code safe best exampl give idea escap fallback handlebar util escapeexpressionsafestringhandlebar util escapeexpressionsafestringtohtml method current sync fine kind weird depend need know api one consum implement safestr live ember,3,12,safe|availability|capec,178,0.06741573033707865,0.2938937842845917
1233,https://api.github.com/repos/debops/debops/issues/1233,issue,rfc support subpath subdir host addit secur,last three servic deploy searx bitwarden etesync start think worri requir expos servic open internet basic everybodi talk api servic easi find obvious http think ct log expos quit bit attack surfac servic reduc client certif firewal vpn feasibl came misus sub dir path deploy schema ref idea host servic instead depend applic much distract user bitwarden etesync work fine normal usag url visibl end user servic nextcloud done mayb shorter psk visibl end user mayb even use give hint reason think nowaday bookmark browser auto complet common old day use done human offload machin thu url rememb tast still estim admin weight secur vs usabl implement done nginx easi audit applic get request request know psk exampl implement debop nginx deni probabl chang user friendli relat,seem secur obscur url matter random subdomain e g instead worri expos servic name via ct log nobodi realli forc let encrypt debop intern ca distribut root ca among user sure commerci certif author oblig ct log buy commerci certif sensit servic want provid wider public cours ct log mandatori realli work even though etesync applic cannot client certif authent certainli want setup vpn anoth method protect servic requir valid client certif access webserv idenf user think compar method vpn term user annoy set vpn servic vs instal cert everywher host multipl separ applic subdirectori fqdn amount end sure applic secur case cooki etc enforc http server respect client applic need modifi trampl cooki secur obscur disagre protect direct access api save case pre auth vulner api mean protect discuss ct log around intern ca feasibl case commerci cas forc browser vendor behav submit everi certif ct log bug bit propos case requir commerci ca someth requir secur featur note extend valid basic eye candi give much secur commerci cas much anymor except mayb longer certif valid system support acm client certif option alway prefer obvious wrote open comment least bitwarden support right tri known issu someth deploy right fhem actual care enough work author support searx case definit feasibl want much traffic search request abus client certif suitabl imagin case want send someon search result instanc try chat manag client ansibl end rather protect except servic build think make sens support subpath host specif case pleas think user debop subpath psk ship secur default servic bitwarden etesync without sacrif usabl save ass case patch time zero day solut togeth wildcard certif downsid current domain often leak unencrypt dns psk subpath via http much better secur properti host multipl separ applic subdirectori absolut right secur risk cooki sensibl admin ct log around intern ca feasibl case case talk creat privat servic known group user public servic tell user go provid url random path new user find servic commerci cas forc browser vendor behav submit everi certif ct log said ct log mandatori commerci certif good solut sure offici requir bug bit propos case requir commerci ca someth requir secur featur certif certif certif care debop user take role support extern ca option debop come standard intern ca think commerci certif requir per se servic known user go intern ca approach suggest case option note extend valid basic eye candi give much secur commerci cas much anymor except mayb longer certif valid system support acm current commerci ca give public wildcard certif debop current offer let encrypt searx case definit feasibl want much traffic search request abus client certif suitabl imag case want send someon search result instanc try chat manag client ansibl end rather protect except servic build think make sens support subpath host specif case pleas think user debop subpath psk ship secur default servic bitwarden etesync without sacrif usabl save ass case patch time zero day still bug bit opinion ad random string th url make servic harder sure suppos option disabl default go think support level enough support applic requir similar option found exampl wordpress instal use univers implement ct log around intern ca feasibl case case talk creat privat servic known group user public servic tell user go provid url random path new user find servic searx second case imagi run searx well defin group user constraint want exclud script kiddi read ct log etesync bitwarden privat open switch client certif long run thing nextcloud mind client certif support guess want share file link subpath interest still bug bit opinion ad random string th url make servic harder sure point look nice guess often trade secur vs usabl point servic basic secur free suppos option disabl default go thank applic straight forward gener applic need awar configur one set hard case current bitwarden note use subpath psk requir patch sourc code recompil ref ref compil bitwarden anyway maintain addit patch result minim higher mainten overhead realli start approach ad secur virtual cost except look bit cryptic due home assist decid support home assist accept contribut add support worth ad complex deal forev decis final ref need check option check http knock test quit run compil dynam modul work nginx trigger secret knock sequenc anyway work deploy anyway nginx modul unlock client base sourc ip address work haproxi setup without tls inspect port knock downsid requir peopl first manual open url return purpos web applic realli user friendli requir custom code run nginx custom modul compil current ship debian subpath thing work long applic support luckili,18,68,security|attack|certificate|firewall|audit|encrypt|crypt|authorise|authentication|protect|validate|cookie|vulnerability|forced browsing|zero day|leak|script kiddie|tls,894,0.07606263982102908,0.28962984681129456
20,https://api.github.com/repos/quicwg/base-drafts/issues/20,pr,add support hash base public reset packet,model neither path path attack abl forg one path element abl valid public reset,hey ekr pleas open issu track discuss pull request seen peopl thank hi mark alreadi email list want issu well ekr wed nov pm mark nottingham wrote hey ekr pleas open issu track discuss pull request seen peopl thank receiv author thread repli email directli view github mute thread current pretti badli bitrotten need revisit work place block transport paramet header chang close favour care github mechan think tri address differ design constraint specif whether want public reset invis middlebox want make indistinguish middlebox rather label unverifi possibl relev question intend updat track chang draft plan updat mean make publicli verifi make reset indistinguish whatev work group end hope discuss design constraint pari design crypto suit work yep work perfectli expect need wait pari anyway close favour base discuss pari,8,10,hash|attack|forge|validate|authorise|transport|signing|crypt,152,0.06578947368421052,0.2887100577354431
2920,https://api.github.com/repos/quicwg/base-drafts/issues/2920,issue,server tp encrypt requir cryptograph handshak,tps carri stateless reset token must encrypt transit section transport document list requir handshak includ authent tps yet includ mention encrypt server client cc,make sens tls document ensur server transport paramet encrypt editori pr chang transport doc requir suffici good catch mark design consensu call arguabl editori,6,11,encrypt|crypt|transport|authentication|tls|signing,55,0.2,0.28812265396118164
68,https://api.github.com/repos/megastep/makeself/issues/68,issue,sha sum instead md sum verifi file integr,md wide consid unsaf past year today provid absolut secur strongli recommend switch sha command instead verifi integr file sinc md easili falsifi,take sha take consider main concern though avail command across support platform keep work check first case mayb keep md alongsid sha backup still alreadi crc backup mayb time switch take sha anytim progress case mayb keep md alongsid sha backup still alreadi crc backup mayb time switch uncommon e g packag manag provid multipl hash redund case one hash fail anoth hash compat exampl gentoo packag manag portag ebuild use whirlpool sha sha put fine point support platform sure top head ventur guess mani standard unix instal say earli solari hp ux etc come command solari command support sha md sha sha sha hp ux support sha sha sha sha sha refer sha secur reason one sha famili sha sha sha agre better md sure interpret silenc late busi sure previou comment anyth argument better digest command understand concern pretti much agre main concern though alway need maintain cross platform compat much possibl mean reli lowest common denomin lot way ideal handl variou case best possibl restrict scenario exampl love archiv built recent linux distribut need checksum command extract ideal verifi first someth minim stock hp ux instal prove minim stock hp ux instal support exampl sha research suggest cannot realli refer hp ux specif though handl plenti older unix system bare anyth command specif moment think even outdat system sco irix okay let gener support schedul oper system mention long support system call outdat point cost secur modern system becom import run unix seen releas last decad tone seem overli aggress apolog person profession interest secur archiv creat without modern digest tool old system requir insecur tool understand want know exactli situat like chang fair point truth use makeself commerci project minim system requir main one baselin far concern avail target os support softwar name solari aix freebsd etc believ favor drop support dinosaur sco sinc nobodi use anymor time alway reluct activ disabl support old os leav place cost anyth makeself alreadi option xz compress incompat legaci system introduc option sha sha let user decid main checksum decid compress keep crc backup second seem perfectli reason compromis make sens digest function follow preced compress function e backward compat default overrid via command line option guess ok command line option seem fine compromis ad new option use comput verifi archiv addit md crc method still rid legaci checksum use addit pleas test let know work well happi report new featur work splendidli thank much recept request time implement featur maven plugin releas well support releas good thank outlook android neil roza sent wednesday megastep makeself cc jeremi landi comment subject megastep makeself sha sum instead md sum verifi file integr happi report new featur work splendidli thank much recept request time implement featur receiv comment repli email directli view github mute thread,9,47,sha|integrity|unsafe|security|availability|crc|hash|checksum|insecure,496,0.09475806451612903,0.28755301237106323
993,https://api.github.com/repos/kaldi-asr/kaldi/issues/993,pr,quick fix kaldi onlin decod crash,experi rare case kaldi onlin decod crash due last seen input frame previous made quick fix deal issu decod longer crash,hm thank find problem think quit right fix pleas let know crash exactli mayb stack trace one crash log attach em quick fix fix fundament issu error copyrowsfromvec kaldi matrix cc wrong size argument stack trace kaldi messagelogg handlemessag kaldi logmessageenvelop const char const kaldi messagelogg messagelogg kaldi matrixbas copyrowsfromvec kaldi vectorbas const kaldi nnet nnetonlinecomput flush kaldi cumatrix kaldi singleutterancennet decoderthread runnnetevaluationintern kaldi singleutterancennet decoderthread runnnetevalu void pleas appli patch pr see fix problem sure test thank origin messag daniel povey notificationskaldi asr kaldi kaldifansky fanskyerauthor authortu aug pm subject kaldi asr kaldi quick fix kaldi onlin decod crash pleas appli patch pr see fix problem receiv author thread repli email directli view github mute thread,2,9,decode|authorise,145,0.06206896551724138,0.2864665687084198
58,https://api.github.com/repos/osresearch/heads/issues/58,pr,wip replac gnupg signifi,sign philipp deppenwies,gpgv big fairli matur ecosystem around one reason use gpg integr well hardwar token yubikey allow sign key separ system potenti threat sign key live machin attack abl code execut machin abl updat sign kernel root hash okay someon access system everyth expos understand gpg good decis come secur yubikey user opinion need boot chain secur signifi key store encrypt oper system xen modul compabl layer qube os mayb signifi dm veriti stuff offer option gpg support qube os modul okay someon access system everyth expos yes bad enough happen want attack abl updat sign kernel root hash let sign hash elimin last line defens attack modifi kernel etc chanc detect chang next boot negat primari purpos head signifi key store encrypt oper system sure patient wait user decrypt key grab ram offload key smart card prevent possibl signifi moment gnupg sure pull request well intent hope reject reason yeah real secur system compromis everyth expos code qualiti gnupg wors everyth els seen made pull request payload size coreboot mind close yeah real secur system compromis everyth expos think one want breach one happen far better chanc know happen gnupg code qualiti best take gnupg maintain thank close pr,11,33,gnupg|signing|integrity|threat|attack|hash|security|encrypt|crypt|defense|breach,207,0.15942028985507245,0.28465285897254944
263,https://api.github.com/repos/speed47/spectre-meltdown-checker/issues/263,issue,multipl new vulner disclos,paper present sound extens systemat transient execut attack systemat uncov new transient execut attack overlook investig far includ new meltdown variant meltdown pk intel meltdown br intel amd includ new spectr mistrain strategi evalu attack proof concept implement major processor vendor intel amd arm systemat yield complet pictur attack surfac allow systemat evalu defens systemat evalu discov still mount transient execut attack suppos mitig roll patch,refer intel seem say addit mitig variant moment mitig check still keep ticket open inform tag case chang futur first time thank,4,8,vulnerability|disclose|attack|defense,93,0.08602150537634409,0.2842848598957062
1014,https://api.github.com/repos/AdoptOpenJDK/openjdk-build/issues/1014,issue,bit keysiz java secur keypairgener,ibm jdk use accept bit keysiz keypairgener openjdk restrict key size rang ibm recommend custom openjdk openjdk allow bit keysiz expect support openjdk,current think rsa least bit bit rather insecur mail list openjdk secur issu reach sign send issu view whether commun intend support smaller key size review code seem specif implement keypairgener class allow disallow limit key size anyon investig need know specif algorithm use close provid support bit key size longer deem meet secur baselin current think rsa least bit bit rather insecur agre less secur due restrict server side unabl increas key size,4,9,security|rsa|insecure|signing,103,0.08737864077669903,0.2837231159210205
1201,https://api.github.com/repos/OWASP/owasp-mstg/issues/1201,issue,slow attack android keystor via side channel attack,describ issu mitig step address new attack form ncc qualcomm back key store ad mstg,mitig step appar upgrad devic leak ecdsa recommend older devic patch ecdsa key let exampl describ mstg storag mstg demonstr defens depth requir android develop keystor applic take advantag user authent requir key attest offer keystor includ suggest consid use ecdsa older devic due issu mayb extend issu wirth take away,5,9,attack|leak|ecdsa|defense|authentication,75,0.12,0.2834166884422302
2521,https://api.github.com/repos/pi-hole/pi-hole/issues/2521,issue,insecur password hash salt need,rais issu confirm follow x read understood contributor x issu report replic x issu report duplic see close open familiar sourc code relev issu expect behaviour hash behaviour step reproduc affect token provid upload undertaken relev inform,password never store plaintext anywher procedur hash password twice client send hash back server compar local hash see chang exactli e g client inform salt furthermor work futur password chang fact noon except user head know password prevent us autom encod right right password hash twice insuffici guard rainbow tabl attack salt someth ever reveal end user store random valu hash user password prevent two user password password hash thu guard rainbow tabl attack code written rainbow tabl gener possibl password hash given simpli hash possibl password given length twice realli good explan never gener pull request work modif describ work develop branch gener pull request pi hole adminlt repo salt someth ever reveal end user misunderstood secur transport password http need cryptograph work user browser javascript send network meant client code written rainbow tabl gener possibl password hash given simpli hash possibl password given length twice understand keyword sentenc gener implement pi hole guard commonli known rainbow tabl perfectli agre specif rainbow tabl gener doubl hash password go beyond meaning amount work password suffici long vulner e g dictionari attack hard time gener brute forc doubl hash tabl pi hole password doubt anyon ever pi hole interfac meant face public internet concern regard attack within network probabl appli measur protect pi hole e g firewal rule allow certain devic access pi hole port complet block port allow connect use tunnel key authent ssh connect work develop branch gener pull request pi hole adminlt repo doubt make sure care review discuss submiss come work still entir clear help practic still see need send salt user browser salt easili intercept suitabl rainbow tabl gener salt intent mere modifi lengthen password even intermedi hash pleas wrong never top prioriti list current implement good enough term robust standard rainbow tabl typic threat potenti within properli shield network rather low recommend access ssh deni everyon local host probabl best check hash actual done client side header inspect password transmit plaintext http yike hash server receiv file adminlt script pi hole php password php tell file handl hash javascript client side look check standard instal current releas new web interfac hash password client side send allow web interfac access extern put http actual feasibl case easili cert place let encrypt point admit digress issu topic conceal user type password field differ make correct read code wrong effect authent hash hash transmit plaintext http still issu authent token transmit plaintext exploit sniff hash network exchang client server password authent authent client side question obviou reason authent server side feasibl client still transmit authent token server plaintext see workabl solut involv http without kind pre share secret never transmit network requir browser extens addit softwar think one bad option store actual password server insecur bad idea send client one time salt hash client side salt authent token hash client send hash back server server recomput hash copi one time salt store password server verifi authent made use hash authent client log hash cannot resus authent ensur salt one time salt yes gist good secur http authent without roll authent protocol implement someth tls make connect http issu larg ignor defer applic router log via basic authent http basic base encod password local instal applic either live http add self sign cert need accept devic connect usual still mark insecur untrust go close wait see login stuff end next version add salt password,25,120,insecure|security|password|hash|salt|encode|rainbow table|attack|transport|crypt|scripting|vulnerability|protect|firewall|tunnelling|authentication|ssh|threat|encrypt|exploit|snif|tls|signing|trust|login,608,0.19736842105263158,0.2830747961997986
73,https://api.github.com/repos/multiformats/multihash/issues/73,issue,java bounci castl digest multihash support librari,ad decod java messag digest librari complet encod util intent function varint encod getter multihash function code getter digest length quickli visual support digest function intersect multihash function issu see interest ad implement project readm,cool yeah definit pr think make sens thank open coupl,3,6,hash|decode|encode,53,0.11320754716981132,0.2815593481063843
3031,https://api.github.com/repos/quicwg/base-drafts/issues/3031,pr,refer nonc notic header protect analysi section,paper studi sever nonc hide transform quic header protect algorithm one chang replac old analysi text someth bit crisp,realli happi see good research confirm intuit one import quic specif construct thank chri plan make similar contribut dtl thank chri pleasur plan make similar contribut dtl yep,2,4,nonce|protect,55,0.07272727272727272,0.28128668665885925
43,https://api.github.com/repos/WebBluetoothCG/web-bluetooth/issues/43,pr,ad secur concern risk,per discuss discuss palmer ad secur concern risk particular ad increas kernel attack surfac devic manag xss csrf attack,make scarier expect bluetooth driver go much divers handl data audio case expect float array refer get pretti much pass directli devic question process kernel much case bluetooth understand underli driver much complex thing insid kernel abstract simpl admittedli know much bluetooth love convinc otherwis say care xss csrf bluetooth privileg websit argu potenti effect xss csrf much nuanc complex tradit websit origin polici basic make even site compromis damag limit origin say local brows instanc server commun addit bluetooth permiss sudden xss csrf potenti affect devic well way think entir new privileg domain altern view devic ad origin either case commun user meaning go tough imposs say user great understand origin polici chang promis browser make look great squash merg thank done,5,14,security|attack|xss|csrf|privilege,147,0.09523809523809523,0.27974385023117065
185,https://api.github.com/repos/AladW/aurutils/issues/185,issue,featur propos pin aur tls certif,sinc aur probabl never sign packag good fairli straightforward thing pin tls certif least fulli safe mitm attack use support propos ad follow featur environ variabl along line use popul use popul never use document command use updat valu clone build repositori will implement guidelin green light other want exactli want see implement,look complex implement option array curl c f anoth option use argument file curl end fond configur file specif aurutil note document made clear strictli mitm content aur pkgbuild plu relat file guarante gener attack exampl upstream author sign releas tarbal even provid checksum matter manual inspect pkgbuild remain necessari feel free make pull request mind comment relat probabl make option array seem eleg solut add explicit warn document relat nice pacman though sign packag make less urgent ask archlinux secur seem aur support hpkp first place compar github explan thank guess hang archlinux time see propos code though actual implement hpkp simpl client side pin user decid key trust akin trust system local gpg keyr hpkp actual reli server side support beyond http support remov download function move separ script wish pin public key client side easili implement case,12,19,tls|certificate|signing|safe|mitm|attack|authorise|checksum|security|trust|scripting|public key,200,0.095,0.2794511020183563
292,https://api.github.com/repos/zimfw/zimfw/issues/292,pr,ssh updat init zsh,base base code issu depend env variabl avail everi shell session tri creat new socket agent forward check instead safer creat env file flag user home directori,think chang propos ssh modul retcod shorthand new thought requir refer var ex omit work even find much document look first substitut variabl valu arithmet oper follow without arithmet oper perform directli use variabl name integ make use better choic edit section arithmet evalu zshmisc say name paramet subscript array referenc name within arithmet express without use paramet expans syntax exampl val val assign twice valu paramet name intern integ represent name paramet specifi builtin arithmet evalu perform valu assign name paramet declar integ manner complet forgotten old variabl refer habit die hard,6,8,ssh|availability|safe|scripting|signing|forge,125,0.064,0.27816227078437805
729,https://api.github.com/repos/rust-lang/rfcs/issues/729,issue,support hashsum algorithm,current sha pleas consid support md sha etc rust lang rust,think reason rust sha actual need compil provid variou hash algorithm seem job extern librari standard librari fact think support function std lib make sens handi everi extern librari crate io standard librari conveni well practic handi realli reason includ someth standard librari someth peopl often common sha md realli qualifi sat jan ivan cai notificationswrot std lib make sens handi repli email directli view github well agre smile see encrypt well hash import critic conveni secur everyon make encrypt crate creat bug progress discov fix everi buggi crate take time effort peopl even need move anoth crate safeti standard lib need concentr problem one singl place bug greater chanc discov fix soon think support sha anymor libstd crypto lib crate io close,6,13,hash|sha|encrypt|crypt|security|safe,138,0.09420289855072464,0.2778274118900299
3521,https://api.github.com/repos/MichaIng/DietPi/issues/3521,issue,dietpi com hash signatur download authent check,sha checksum download link featur request relat problem pleas describ feel littl late check sha imag file describ solut co locat download link awesom sha z file certain tamper even uncompress describ altern consid good refer propos seen download link verifi download addit context checksum co locat link make harder ill intend peopl tamper imag vote featur feathub,mani thank request hmm common includ hash checksum archiv final imag must origin corrupt failur download faulti unpack howev cours archiv corrupt alreadi one skip unpack first place sure best place hash file specif algorithm download directori file meaning file end easili autom compar put style hash file md sha sha contain one archiv download dir archiv file name hash file end mani thank request hmm common includ hash checksum archiv final imag must origin corrupt failur download faulti unpack howev cours archiv corrupt alreadi one skip unpack first place sure best place hash file specif algorithm download directori file meaning file end easili autom compar put style hash file md sha sha contain one archiv download dir archiv file name hash file end thank follow think checksum fine detect issu corrupt download categori talk gear toward ill intend person deliber mess compress file care rebuild imag mayb best separ two case make hacker life harder think checksum publish right next compress file good thing differ site differ end day assum websit compromis checksum compar download file awesom flaviof love kind thread hope fine join thought hash design prove integr inher reliabl prove authent websit compromis point alter download noth stop attack alter hash file signatur la gpg suitabl sort scenario sinc gpg signatur aim prove authent implicitli integr mind authent fli window gpg key stolen though practic risk depend adversari capabl exampl hyper v imag publish gpg signatur respect archiv addit commit repres releas sign github compromis attack need compromis key imperson releas tamper releas behalf hope fine join welcom hash design prove integr inher reliabl prove authent inde hash place besid insid download meant check corrupt download unpack flash categori talk gear toward ill intend person deliber mess compress file care rebuild imag mayb best separ two case inde anoth request though fulfil togeth sinc place hash checksum onto server download place cannot guarante authent attack modifi file hash without much effort note due http theori imposs file wrong sourc e g attack mitm cheat fauliti download present fake websit use offici domain basic talk us creat key sign download enabl user verifi download public key luckili roadmap anyway sinc plan setup dietpi apt repositori fulli sign first place key pair use download outsid repo well easi flash signatur besid download add websit next download link,13,60,hash|signing|signature|authentication|sha|checksum|tampering|hack|integrity|attack|adversarial|mitm|public key,454,0.13215859030837004,0.2774140536785126
310,https://api.github.com/repos/archlinuxfr/yaourt/issues/310,issue,check packag integr gossip hash amonst user,aur insecur packag cryptograph sign use trust pkgbuild written verifi hash file download hash insid correct potenti get malici pkgbuild instal malwar instead softwar want yaourt fault yaourt someth improv secur user imagin yaourt run secur internet connect central server store hash pkgbuild file file pkgbuild download file matter packag aur hash collect two way central server download comput hash tool default send file hash see instal packag central server server see user got differ file hash server got lot user got send back warn file seen improv secur someon want attack replac pkgbuild malici one compromis yaourt server yaourt user harder leav evid behind easier detect central server publish log hash seen make attack detect retrospect potenti year happen yaourt pull start trend packag instal follow obvious written best final formul idea lot work secur review need go design curiou much interest featur suffici interest first step take look similar thing certif transpar gather lesson learn design,interest idea noth yaourt simpl download client want complet central server probabl add along upstream infrastructur propos implement client function describ yaourt entiti respons implement maintain central server great separ concern yaourt peopl run central server disappear becom unreli word central server alreadi exist well document api interest guess best place feedback one arch mail list,11,26,integrity|hash|insecure|security|crypt|signing|trust|malicious|malware|attack|certificate,222,0.11711711711711711,0.2760264277458191
433,https://api.github.com/repos/basho/riak/issues/433,issue,concern new secur featur ad riak,read code sampl creat respons two major concern first authent done use http basic exampl ssl great http basic broken mechan even connect happen clear essenti whenev possibl authn done sent clear failur mode minim protocol http request sign much robust scenario especi payload signatur book goe much detail issu relatedli look notic noth done restrict version ssl tls use given research last year great opportun mandat tls part code base essenti reason support older known broken protocol given new featur similarli restrict allow cipher cipher des cbc explicitli disallow likewis remov md hash review key exchang algorithm excel idea well,yes http basic realli ideal especi sinc credenti sent everi request howev one design constraint riak secur system allow pluggabl authent backend except case password backend riak store password data pass backend valid sinc control backend accept password hash scheme even support hash password feasabl client send hash password wire futur work investig altern approach problem move offici riak client support pb interfac http still support anyon use offici basho client use protocol commun riak regard tls complet agre saner cipher list knob tune minium allow tls version thing todo list writeup ricon talk gave week read sure forc tls default lot languag gain support year tls certainli provid knob peopl cababl client forc move offici riak client support pb interfac http still support anyon use offici basho client use protocol commun riak python client cc still support http time python client user alreadi built consider secur authent audit infrastructur around http thank prompt great answer usual far complex problem seem first blush worth ad document http basic ideal user want option happi contribut caus thank link writeup ricon talk video post well sure forc tls default lot languag gain support year tls certainli provid knob peopl cababl client forc yay knob choic great great cipher hash gener ssl option gener set default let folk uncom thing lower secur though rather make opt better secur option implement cipher work basho riak core cipher want even turn honor cipher order style behaviour use basho packag patch erlang ssl applic support option default cipher list one taken,13,45,security|authentication|ssl|signing|signature|tls|cipher|cbc|hash|credential|password|validate|audit,363,0.12396694214876033,0.2753501832485199
12,https://api.github.com/repos/tylertreat/chan/issues/12,issue,deadlock,follow test program produc deadlock case condit variabl implement fifo wait reader signal first gist problem wait reader woken run caus simul higher prioriti write thread th writer wait queue becom full reader run signal wait writer pthread cond signal chan cond receiv wait reader condit variabl least linux implement serv fifo order therefor signal receiv wait reader first propos add two condit variabl one reader one writer empti vs full reader signal writer condit writer signal reader condit,thank see last commit possibkl speedup multi test,2,8,deadlock|signing,89,0.0898876404494382,0.27188029885292053
1495,https://api.github.com/repos/drwetter/testssl.sh/issues/1495,pr,fix public key length calcul,pr fix minor bug key size determin manual length encod requir byte current code comput length incorrectli insignific bug sinc appli rsa ecc key key least megabyt long requir byte encod pr clean bit replac enclos math,thank,4,5,public key|encode|signing|rsa,44,0.11363636363636363,0.27164700627326965
18,https://api.github.com/repos/multiformats/multihash/issues/18,pr,updat rust multihash,multihash complet googl version handl decod,includ put first tabl notion complet updat agre tabl percentag realli help nobodi know calcul suggest list featur check instead yeah clear wip complet well realli defin implement interfac suggest eg distinguish simpl vs fulli featur one,2,3,hash|decode,47,0.06382978723404255,0.270493745803833
1489,https://api.github.com/repos/dnschneid/crouton/issues/1489,issue,encrypt chroot take space origin,recent encrypt chroot unsur suppos bigger origin non encrypt chroot natur crouton thing linux gener,answer encrypt expand origin content instanc one take filenam near filesystem limit length encrypt filenam becom longer usabl man pgs encf info ecryptf specifi shorter limit filenam underli fs encrypt exceed fs limit content follow likewis hard data someth output encrypt vs non encrypt chroot top said anoth thing ecryptf support spars file depend content chroot matter,2,10,encrypt|crypt,78,0.1282051282051282,0.2696976363658905
1042,https://api.github.com/repos/quicwg/base-drafts/issues/1042,issue,transport paramet minimum size,current draft say minimum size tls transport paramet format transport paramet recent chang new minimum size,,2,4,transport|tls,21,0.19047619047619047,0.26625385880470276
1138,https://api.github.com/repos/arrow-kt/arrow/issues/1138,pr,implement hash typeclass interfac,wip miss doc open question datatyp specif listk setk etc overrid hashcod kotlin hashcod instead point instanc hash paramet need substitut datatyp miss skip unsur coproduct sum etc pleas take look law hash realli need consist hold law enough readi doc hope see evil solv,datatyp specif listk setk etc overrid hashcod kotlin hashcod instead point instanc hash paramet need substitut hash idea instanc deleg origin implement case one type wrap list sequenc etc datatyp miss per java indic anyth qualifi one go list miss one new issu law hashlaw scala imo given univers hash calcul good two ad see comment ad make sure hash instanc impli correct eq instanc readi doc hope agre step add menu entri add short descript typeclass one folder readm see exampl attent header match folder capit tag difficulti beginn gener section ad arrow core optiontest optiontest hash law equal impli equal hash fail java lang assertionerror gradlew clean detekt absolut impact affect miss data gradlew dokka arrow doc runankrr typeclass combin doc took gb ram complet last phase run ank took around gb peak someth definitli wrong definitli hash try figur well exercis ank work tho expect much edit gb total ram usag gb around gradl alon correct wrong ank work top level creat target dir list relev file read file preprocess file magic output reason sequenti file content load memori oppos whole workflow file one one import instanc instead necessari one lot code make problem wors think caus lot code doc use wildcard import previous work fine doc equal exactli import well problem ank built process mani api doc file pretti sure issu forget try fix branch push master,4,18,hash|delegation|scripting|forge,281,0.06405693950177936,0.26533135771751404
588,https://api.github.com/repos/saltstack/salt-bootstrap/issues/588,issue,multipl mitm secur issu,multipl place bootstrap salt sh script text file download via http integr never check hash gpg signatur open door mitm put salt bootstrap script less level one liner advic interweb day ad cleartext insecur gather follow exampl current master commit ab dac c e b ab bf f b pgp public repo repo repo repo file possibl other come extens analysi harden tip instead move file http sourc suggest includ inlin script use heredoc syntax cat,issu download bootstrap script offici fix longer case remov debian suse becom complic repositori layout chang quit often day think use heredoc option least yes sorri includ commit hash op link shall review current version script issu open track remain problem edit see still plenti cleartext http download yum repositori sourc verifi signatur hash afaik thu inclin close issu fix address technic bad practic problem rather individu issu collect issu per fast pace chang use heredoc includ file ad hash signatur verif equival think eleg compact implement proper secur valid download yet allow mani depend without hinder updat feel free studi current develop version put tabl concern find believ mani thing deprec reason sooner improv person interest make bootstrap secur reliabl good point make pull request show tackl perspect one anybodi will integr system requir secur prevent type mitm code anywher fix anyway via fork patch ad pull request add remain mitm vulner close gap two use md sum size valid http http anonscm debian org access first one exemplari show issu tackl pin love idea check remot file hash salt exactli state modul think better sha even sha checksum strong hash need perform addit size valid mayb concern file size combin md file length use exclus usual avail mani system box otherwis sha hash pin feel free close issu address shall updat close guess cherri pick adjust need reproduc part need credit small thing feedback much appreci person keep issu pr open remind kind todo list alright keep eye guess thing left secur suse stuff fix test http support repo saltstack com download opensus org anyth els need done look code see opensus one one mirror list perhap issu everi download come openbsd ftp server verifi signatur know think issu final resolv salt packag suse host distro repositori sign appropri gpg key bundl os openbsd instal function rewritten mirror list local configur instead plain http url believ close thank rais think sound good thing say okay close clean comment convert comment say state yeah one fixm suse left current develop address pr soon oh nice work yes agre close issu inde initi open rais awar asid actual problem leav guy close thank notic singl left url return expect edit seem typo sinc multipl similarli name directori list cannot guess one correct one error expect wonder chang someth end look thank check pleas see pr let know think,15,46,mitm|security|salt|scripting|integrity|hash|signing|signature|insecure|pgp|sha|validate|vulnerability|checksum|availability,479,0.09603340292275574,0.26458102464675903
17,https://api.github.com/repos/OpenVPN/easy-rsa/issues/17,issue,allow select cipher privat key,openssl support varieti symmetr cipher privat key encrypt user wish expos support easi rsa allow flexibl secur choic user,initi work push branch creat happen next coupl week user rsa nsa purport broken brought relat issu openssl list week ago encrypt privat key use rsa result legaci format encrypt evid poor discuss rsa encrypt least use openssl pkc util openssl rsa ticket relat separ key gen csr gener initi privat key simpli des encrypt anoth cypher openssl req either des noth see ticket quit old mo someth differ feel confid mess bash code accomplish plan actual implement soon minimum work togeth least modifi code pass function aes newer pkc format seem fairli straight forward work around without lot code chang great goal perhap decent better privat key cypher without much work test debug seem modifi small section code allow stronger cypher des weakish pbkdf iter horrid glad help wari make chang critic piec util bad choic magnifi far beyond greg idea make chang git sourc realli readi commit anyway implement modifi pass function find column chang ad line quit lot hard code key encrypt command want make lot chang code ec key option even maintain dynam element help us much far tell produc new pkc format key much better encrypt,7,27,cipher|private key|openssl|encrypt|rsa|security|aes,216,0.125,0.26382526755332947
424,https://api.github.com/repos/OWASP/owasp-mstg/issues/424,issue,review x data classif polici sensit inform,todo sensit inform need describ ideal defin custom data classif polici,first paragraph bit dens mani word per line someth good thank ananthshri shorten sentenc let know think read section look quit ok short clear wonder data transit data rest mention data ad list suggest sensit inform commonli use app add session token list authent inform session token store app rather credenti import protect devic sinc use session fixat attack add devic identifi locat inform list person identifi inform pend regul eu requir inform protect easi misus type inform,6,9,sensitive information|authentication|credential|protect|session fixation|attack,97,0.09278350515463918,0.2635311186313629
3405,https://api.github.com/repos/quicwg/base-drafts/issues/3405,issue,type activ connect id limit transport paramet,unlik transport paramet definit type specifi paramet assum type integ numer transport paramet submit pr adjust word line transport paramet descript ok thank great work get quic specifi,good catch look valu type either implicitli explicitli state inde intend integ pr effect great,2,5,transport|scripting,51,0.09803921568627451,0.2624196410179138
94,https://api.github.com/repos/Nyr/openvpn-install/issues/94,issue,insecur cipher suit,default array cipher suit includ number cipher known vulner cipher comput cheap crack given modern comput power openvpn harden wiki background convers continu go forc user upgrad break system script instal openvpn definit forc upgrad anyon expect outcom openvpn instal instal anoth rd parti tool via latter secur thank discuss prior instal aforement mean depend softwar need updat regardless run updat modifi user server sort way document anywher sinc script openvpn instal openvpn dummi speak think make lot sens handl suggest other made feel step far fine relat howev still need clear instal openvpn make effort secur instal eg make mention anywher instal edit iptabl rule scope break thing much greater simpl make mention support insecur cipher readm lead mani assum secur box solut seem case judg issu close reason behind decis genuin tri rude see popular project offer experi project improv nobodi get unexpect nasti surpris list one vulner one liner complet option open new issu find reason vulner within openvpn instal sh make sure address wast time list quit vulner actual realli want argument offer friendli suggest harden instal,quot seem big problem understand english unfortun updat yum upgrad apt see mention statement right instal iptabl well rd parti tool via wget like alreadi present packag third parti script need script work obvious instal requir depend els script work use default array cipher suit includ number cipher known vulner cipher comput cheap crack given modern comput power right openssl support lot less secur cipher theoret use control channel downgrad negoti nearli imposs default weaker cypher latest order prefer stronger one use quot posit openvpn guy matter tls cipher realli expert featur unlik browser openvpn perform downgrad danc make lot saner reli ssl libari version cipher downgrad protect anyway set specif tls cypher bad idea caus troubl benefit better instead forbid weak cipher instead pleas rememb default barebon instal default suggest develop try leav person prefer away script much possibl,10,26,insecure|security|cipher|vulnerability|crack|scripting|openssl|ssl|tls|protect,325,0.08,0.2619953155517578
207,https://api.github.com/repos/sobolevn/git-secret/issues/207,pr,rfc stabl forward compat public key storag format,rfc review discuss share design,took format put first part discuss want see folk feel approach format addit actual design hope review edit pr rather entir burden initi author final state let us see work thank awesom work rfc big step forward apolog pr noisi perfect fork keen earli draft look build final pass merg,3,4,public key|signing|authorise,64,0.0625,0.26150697469711304
317,https://api.github.com/repos/jedi4ever/veewee/issues/317,issue,abstract commun channel support ssh,propos current postinstal script ssh scp assum remot exec copi yeah hope renam gener implement match base channel provid think make sens take least pain channel know possibl implement futur easili long implement basic interfac ssh switch winrm base either definit rb detect guest type yes hack quick chang core renam port host usernam password refer ssh channel still sure name seem wrong channel implement option overlap os detect good idea howev need abl specifi definit peopl want continu ssh window unsur remot copi equival window winrm heh magic work dan winrm gem support function bit hack definit work small file say mb current implement memori friendli howev ga featur fix bug,start robust framework feedback seem solv problem dry implement ssh yet snap core interfac test winrm implement code found hey still valid request abl review current veewe implement check much propos fit close librari maintain,6,12,ssh|scripting|hack|username|password|validate,153,0.0784313725490196,0.2611663341522217
763,https://api.github.com/repos/docker-library/official-images/issues/763,issue,cve global threat,want notifi recent studi show built cve threat idea address imho shall provid least inform box cve free,look pull tag docker hub api cf need taken grain salt count tag current support tag count thing alreadi fix mani case run tool sinc enough time disk space download everi tag everi offici imag say sure mani vulner appli current support tag tag current support defin offici imag project mean peopl use howev sinc usag number percentag deploy run contain base vulner build offici imag hard say actual impact number one thing discuss idea docker hub support tag imag ids metadata whether vulner known exploit cve nvd client enhanc warn user instal known vulner imag id deriv imag includ known vulner layer even mode client error vulner assign high risk categori specif vulner current support tag offici imag cours address experi seen report cve offici imag address quickli transpar cc matter abl queri docker hub api current support tag imag instead look text descript docker hub help agre mani figur tag unsupport figur specif latest tag think extract meaning data better yet build analysi support imag tag agre tool docker engin registri provid better warn inform imag eol tag imag eol give expiri trigger info warn messag end user potenti help issu insecur gener imag note articl final base oper system patch cve inherit fact know push time upstream distribut patch secur vulner curiou know differ cloud imag oper system bootabl iso instal medium strive excel regardless comparison imag analysi specif support tag far interest term improv secur imag user play collector tool see run script gather inform version packag packag depend graph inform come os cli tool mostli see anyth non os softwar imag look extend function banyanop collector user defin check well sound similar theori test script repositori except actual function test presum saa offer take os packag info analyz produc result post part current black box account yet hope account banyan see detail see valu offer think agre bigger pictur stay top across offici imag beyond easi problem one mani peopl reli us handl clear thorough analysi realli match distro packag version cve use part pictur raw result per imag basi interest review post good remind continu think thing improv strategi go well awar alreadi good deal work area commun much effort perfect perfect solut continu effort stay top problem best assur provid still depend number extern entiti thank comment intent public imag vulner etc want offend blame stake holder focu make peopl awar secur vulner take account contain deploy strategi said love work offici repositori team stuff good move forward good point gener result support tag abl pretti quickli cheer jayanth speak tarun friday perhap follow join best mario ah yes sound great invit alreadi sure agenda differ call look forward thank jayanth good start follow,10,30,cve|threat|salt|vulnerability|exploit|nvd|signing|scripting|insecure|security,473,0.06342494714587738,0.2600606381893158
940,https://api.github.com/repos/drwetter/testssl.sh/issues/940,pr,decrypt server tlsv respons,pr add code decrypt encrypt portion server respons tlsv process certif encrypt extens code support tlsv cipher suit respons decrypt long session key deriv requir openssl support ephemer key use see symmetr decrypt function use openssl possibl intern bash function need aes gcm aes ccm cipher normal use intern bash function reli use aes ecb mode gener key stream bash function xor key stream ciphertext version openssl aes gcm cipher decrypt use aes gcm mode directli system howev method seem work equal fast chacha cipher use support openssl x bash intern function without openssl support use otherwis case bash intern function need use decrypt slow fortun typic run testssl sh mani case connect tlsv chacha entir respons need process requir decrypt case even connect tlsv chacha testssl sh need ephemer key avail plain text,wow remind openssl support backport dirti stuff anywher time xma busi northern hemispher hi priorit enough yet afraid still need hang,7,27,crypt|encrypt|certificate|cipher|openssl|aes|availability,160,0.16875,0.25930920243263245
347,https://api.github.com/repos/speed47/spectre-meltdown-checker/issues/347,issue,new intel vulner snoop assist l sampl advisori cve intel sa,domain bypass transient execut attack variant known snoop assist l data sampl assign cve cvss medium cvss av l ac h pr l ui n c c h n n specif complex condit involv cach coher snoop modifi cach line malici adversari abl infer data valu modifi cach line l data l cach use snoop assist l data sampl local execut malici softwar abl infer valu data cach line modifi physic core applic oper system os system manag mode smm virtual machin monitor vmm look intel recommend leav oper system vulner attack snoop assist l sampl mitig flush l cach execut potenti malici applic requir chang os schedul hyperthread enabl impact perform system transit difficulti method perform impact caus mitig intel recommend appli mitig os,thank head mitig seem includ kernel probabl hint intel keep open inform,7,12,vulnerability|cve|bypass|attack|signing|malicious|adversarial,149,0.08053691275167785,0.25914761424064636
207,https://api.github.com/repos/postmodern/ruby-install/issues/207,issue,recommend improv checksum verif output clariti simplifi ux,pass hash valid follow rubi instal rubi sha af e b ff ecbca bcf c b b b b fcbe c ac abd e b ae bab ed c ffcd ui confus user say checksum valid give explicit respons valid exampl yield presum checksum verifi output realli say extrem confus say noth sha hash acknowledg receiv except omiss say whether pass valid step expect behavior someth along line think make clearer go result better user experi less relev messag checksum provid valuabl perhap verbos flag debug process right place log inform pleas consid merit improv clariti checksum valid process think result cleaner effect commun user,keep exhaust list checksum think annoy anymor perhap chang logic fail checksum found think ux perspect expect messag say someth verifi sha whatev output show verifi fail checksum found provid unless someon use kind forc flag think verif explicit user visibl action rather someth implicit process strongest checksum need use rather unless overriden look code assum go valid case allow user instal without checksum e g known good tarbal shasum similar unavail forc flag seem good ux even though bad secur fail close certainli secur default gener prefer prevent power user shoot foot intent final sure date checksum exampl instal rubi day releas checksum rubi instal updat yet still specifi checksum command line henc still think remain valid bug although new checksum process like mitig issu everyon except earli adopt new rubi version thought,6,30,checksum|hash|validate|sha|availability|security,248,0.12096774193548387,0.2590448558330536
1560,https://api.github.com/repos/nvm-sh/nvm/issues/1560,issue,creat cryptograph verifi download instal,current user nvm method verifi download instal use http allow measur secur determin adversari still hijack connect replac download malici script order prevent nvm method cryptograph verifi download public key base sign perhap sign releas updat document user verifi download pipe directli bash,refer verifi instal need instal work posix system like form public key sign verif probabl relev refer instal nvm make sens provid option instruct user verifi download file want suppos inde provid checksum part releas process howev ad complex understand valu two reason see use verifi content two file ensur download corrupt match curli brace surround content file ensur alreadi determin somebodi hijack ssl connect github com sinc os theoret certif pin sinc secur consciou second case scenario secur consciou yet never previous success connect real github com obtain valid ssl certif via anoth channel top somebodi somehow manag middleman ssl connect alreadi detect obscen unlik scenario want download verifi run verifi download prior sourc seem reason verifi checksum natur mention obtain github previous establish compromis unlik hypothet scenario fail see secur benefit verif beyond ssl help understand thank respond read well written repli realiz unlik addit checksum use reason mention close issu thank time thank file issu,12,26,crypt|security|adversarial|hijacking|malicious|scripting|public key|signing|checksum|ssl|certificate|validate,207,0.12560386473429952,0.25900301337242126
537,https://api.github.com/repos/rust-lang-nursery/rust-cookbook/issues/537,issue,move pbkdf code hash section,read header encrypt think someth revers say use aes exampl specif state hash make sens move code hash section someth reason adjust,look done encrypt cookbook think remov encrypt prudent open brainstorm encrypt idea,3,8,hash|encrypt|aes,40,0.2,0.2579399645328522
442,https://api.github.com/repos/papers-we-love/papers-we-love/issues/442,pr,descript ad consist hash random tree paper,paper titl consist hash random tree distribut cach protocol reliev hot spot world wide web paper year reason includ paper semin paper load distribut cach,,2,3,scripting|hash,33,0.09090909090909091,0.25611525774002075
1308,https://api.github.com/repos/acmesh-official/acme.sh/issues/1308,issue,default forc new privat key,certbot default chang privat key protect forward secreci option ad user forc make behaviour default align offici client instead option keep key case user key pin,thank prompt never goal align certbot goal honest sure certbot confid make chang system administr upgrad system upgrad python stuff instal lot rubbish system even modifi apach nginx config silent look stupid system administr never allow behavior want anybodi mess system either acm sh never chang system respect system set write littl file even allow respect user custom file access mode keep cautiou danger command etc never rm overwrit file without explicit permiss confirm especi critic file account key cert key acm sh take easi never anyth permiss expect silli overwrit key default silent want silent process run renew process expect chang thing bit decis sensibl secur default le stand yes renew process silent overwrit file default unless explicitli told respect opinion state particular case disagre implement great weekend buddi rotat privat key renew secur standpoint make absolut sens downsid keep privat key make hpkp bit easier deprec replac ct dns caa anyway use understand contributor opinion idea behind rotat privat key default thu chang current behavior acm sh clearli big issu current lot domain dane tlsa record occasion chang mean everi time certif renew use public key pin main postfix server authent satellit mta rotat key break record renew given acm sh updat automat even inform introduc rotat key chang default behavior case http public key pin nich major browser complet remov person believ rotat key certif renew default behaviour switch disabl probabl peopl actual case rotat key deploy hpkp applic probabl custom one still support like know need specifi flag order peopl want tls certif web server less like look switch run minim command cert case definit key rotat default ok soon impact renew certif creat use script chang introduc avoid manual updat config file certif rotat key desir ideal keep retrocompat alreadi issu cert keep exist set newli issu cert default rotat key sound plan leav exist cert chang default behaviour futur rotat key deploy cert help alreadi renew config rotat key far better noth let wait see privat key overwritten silent want option issu cert hi neil thank code save lot time renew certif question paramet passphras encrypt key possibl includ input cfn file paramet passphras encrypt key possibl includ input cfn file cfn file paramet passphras encrypt key possibl includ input cfn file cfn file thank prompt repli bad typo refer openssl cnf templat gener csr,11,26,private key|protect|danger|security|tls|certificate|public key|authentication|scripting|encrypt|openssl,423,0.061465721040189124,0.25513339042663574
1394,https://api.github.com/repos/postmarketOS/pmbootstrap/issues/1394,pr,ask copi ssh public key init,move question copi ssh key command remain question instal password user encrypt allow someth close,though leav move someon creat init possibl run init never someon one devic run init suggest ask present chang set fals automat case key remov later keep config last choic reason copi rsa ed key check histori begin rsa someon ad ed glob suggest instal kind key right suggest ask present chang set fals automat yes recommend case key remov later keep config last choic keep last choic config case someth similar firmwar question exampl firmwar subpackag chosen devic keep last choic reason copi rsa ed key check histori begin rsa someon ad ed look reason think use glob glob suggest instal kind key right yeah usual disclaim opinion necessarili best one wrote thought well wrote reason argument think choic better fine solut glob agre includ kind key second thought make sens ask copi ssh key exist chang glob copi,5,10,ssh|public key|password|encrypt|rsa,162,0.06172839506172839,0.25502052903175354
83,https://api.github.com/repos/megastep/makeself/issues/83,pr,fix issu assign encod licens file content,softtwar tri packag pretti larg eula file eula text contain charact requir escap encod text allow assign script variabl content,yeah guess old termin unicod charact look binari caus kind problem howev solut work use non standard command break compat mani system base less check base decod tri ignor garbag option avail accross board believ base avail system agre e switch less command case accept merg non standard suggest least replac least fall back grace realli think anywher near standard command mani unix system though commonplac understand time right put hold thank take time check pleas look pull request altern solut,5,8,signing|encode|scripting|decode|availability,109,0.07339449541284404,0.2542974352836609
314,https://api.github.com/repos/quicwg/base-drafts/issues/314,issue,rephras crypto cover,non secur folk see phase crypto cover make sens earli handshak packet version negoti packet encrypt inform sent unencrypt handshak packet later verifi crypto cover mayb earli handshak packet version negoti packet encrypt inform sent unencrypt handshak packet later verifi part cryptograph process,lost text somewher process make happi close issu,3,9,crypt|security|encrypt,55,0.16363636363636364,0.2537466585636139
142,https://api.github.com/repos/OWASP/wstg/issues/142,issue,outdat advic password polici brute forc resist articl,describ issu found check test weak password polici otg authn md migrat test string must user chang password day account lockout due excess log attempt particular day base old advic actual overturn therefor look item regard brute forc attack password see updat text edit comment mention fix refer well known date password ident guidelin instead duplic guid advic includ verifi refer think memori allow correct hors batteri style password strong provid suffici entropi instead ask two symbol bunch number uppercas letter lower case letter result pa word say good idea chang password arbitrarili els password summer autumn winter,expand point made slack prudent us avoid detail prescript instead refer cheatsheet nist digit ident cheatsheet ad advantag reli owasp contributor keep prescript date differ place work well make sens given scope document best link defend guid rather expand scope beyond breaker role origin post edit old text kept histor purpos,4,12,password|attack|scripting|owasp,158,0.0759493670886076,0.25374549627304077
176,https://api.github.com/repos/debian-pi/raspbian-ua-netinst/issues/176,issue,insecur valid archiv raspberrypi org sign key,hello mark line allow malici key import temporari one mere check presenc good key previous import file check absenc malici key specif allow import multipl key one file therefor attack must append malici key file download http leav good key order inject malici key fix recommend embed verifi copi correct key updat sh,probabl count duplic open new issu chang alreadi merg issu old yet close make valid correct point specif left issu open sinc raspberrypi org key still verifi consequ recommend fix appli fetch latest version key provid raspbian org key correct one though smile appar check fingerprint import requir manual pars gpg output think good go sourc think found proper solut ad extra check count number key keyr sourc first import count must second must note familiar gpg stuff wrong raspberrypi org sign key download http think issu solv think see commit hello read commit pull request think miss point key fingerprint actual variou comment mention wish includ whole key kib file distribut instead download internet order keep date howev check key fingerprint order ensur key tamper two mutual exclus thing cannot actual replac key apart chang irrelev metadata without chang fingerprint fingerprint valu mathemat deriv key content therefor updat script key fingerprint chang either therefor download key machin ensur correct one ask develop key fingerprint emb whole key repositori believ easier user updat key afterward replac key file either trust server trust http connect compromis trust key content identifi fingerprint provid develop redund potenti insecur gpg allow limit import key file current method attempt limit key import work ugli hack use http conveni less secur use verifi key directli approach feel hack huge fan ad key version control think littl though ad key directli repositori suggest seem cleaner simpler current approach download verifi key updat implement think edit still great raspberri pi foundat offer pgp key http help peopl use help peopl audit prefer key repositori agre point still prefer fetch key http thought balloon benefit fetch key http vs verifi key repositori tri better understand know someth gpg exactli expert inclin agre need figur thought process went wrong went back previou issu pr etc figur thing found follow fetch key updat sh user get latest version key includ key repo notifi key get revok expir date pass mayb thing right miss misinterpret thing stuck tongu edit probabl make mistak say stupid thing regard subject feel free point prefer explan bonu point link read follow thing happen key still keep fingerprint see man page add remov revok signatur signatur anoth gpg user user id key signifi believ id accur add remov reorder user ids notat photo chang prefer use key e g prefer keyserv algorithm prefer etc add remov revok subkey chang expir date add design revok key revok primari key one realli matter case key current never expir expir date shorten key revok current check possibl probabl appear requir pars gpg output return code howev key revok expir expect raspberri pi raspbian peopl replac key server new key differ fingerprint detect includ key repositori someon mayb person tag releas period check key still valid tradeoff code complex vulner thought download key vs someon check valid key everi option ideal add addit code check expir revok key think better download key otherwis think better ad key repositori check period edit thing miss list p show much easier verifi thing manual gpg throw variou warn messag try autom stuff think possibl thank extens info current read gpg better understand thing welcom gnu privaci best introduct found concept gpg public key encrypt work key manag web trust etc statu updat side hope review point error omiss suggest improv embed key repo vs download key time embed key repo ad key keyr key keyr refresh keyr key actual keyr program automat emb key repo luxuri instead remind period check valid key manual therefor error prone procedur implement check automat done often build instal lot mean someth right possibl other inform immedi take action accordingli actual exampl mainten work raspbian org archiv gpg key accident delet one build notic inform plugwash maintain issu resolv almost immedi particular case respons instal exampl fingerprint key chang immedi notic take appropri action therefor prefer current method download verifi key time download key http check fingerprint kind agre seem redund download http inde ensur tamper transit check fingerprint similar thing howev see harm especi sinc autom procedur improv see suggest advantag key chang notifi immedi improv check procedur afaict variou check import key keyr think follow improv download http inde ensur tamper transit check fingerprint similar thing realli http ensur well reason level funni stuff happen transmiss fingerprint ensur funni stuff happen server agre lean toward go code later today download time sound good kind busi right sinc graduat univers time sunday monday take look code np good luck want consid use switch save extra good point comment code overal code look good basic thing current version addit check key separ import first coupl minor suggest need add option call gpg check key fingerprint fingerprint print otherwis least machin good practic quot expans even know expand form space e g simplifi last command sequenc possibl improv neither current version propos check expir revoc etc key nice check field record see primari key subkey invalid disabl revok expir nice check field see key subkey deprec see detail list format good point thank review implement submit pr need add fingerprint option call gpg check key fingerprint fingerprint print otherwis least machin test play machin quit differ output vs former construct fingerprint print primairi key subkey latter inde need see fingerprint inform field present one output tri yet think expir valu present still suggest valid manual valu kind form second sinc epoch date yyyi mm dd format date iso format mind inclin check fingerprint key present file check return valu see anyth els wrong thu reli gpg check opinion welcom issu fix merg,19,61,insecure|security|validate|signing|malicious|attack|inject|fingerprint|tampering|scripting|trust|hack|pgp|audit|signature|vulnerability|privacy|public key|encrypt,993,0.06143001007049345,0.2533923089504242
524,https://api.github.com/repos/quicwg/base-drafts/issues/524,pr,increas resili spoof version negoti packet,two layer defens version negoti echo bit entropi mayb consid version unpredict client sourc address contain entropi valid fail version negoti happen encourag client try ignor version negoti packet match fail profil close,end drop reason updat make version negoti special compar first packet server obe decid worri spoof version negoti much cover bit want keep,3,4,spoof|defense|validate,63,0.06349206349206349,0.2531052231788635
947,https://api.github.com/repos/OWASP/owasp-mstg/issues/947,issue,android oreo p updat chang cryptographi,nice updat android p term cryptographi handl hmac cipher time updat mstg cryptographi android,part dealt updat revisitng android part well littl bit seem code check providerselect bc sc recommend remov urg patch secur provid stringent underlin note incldu better key deriv function etc well todo updat crypto sign recommend android updat key deriv function recommend right one derecommend wrong sweaker one verifi provid select longer recommend anywher keychain keystor key goal updat e g still valid investig case submit pr assign issu assign thank provid select bc sc mention x test data storag md older android android keystor avail leav addit move whole section keystor keychain x test data storag md x e test cryptographi md left refer describ cryptographi x e test cryptographi md think need organ content test section keystor key gener cryptographi featur gather move bottom overview section recommend went test guid lead seriou redesign chapter propos structur think proceed hi thank analyz content suggest structur chang evalu let know proceed hi ok restructur propos pleas consid pr ticket list content restructur list content restructur consid two issu comment pr assign well,7,18,crypt|hmac|cipher|security|signing|validate|availability,193,0.09326424870466321,0.2527525722980499
1796,https://api.github.com/repos/pi-hole/pi-hole/issues/1796,pr,ad test logic password valid issu,submit pull request confirm follow pleas check box eg x failur fill templat close pr pleas submit pull request branch failur delay deni request x read understood contributor x check anoth pull purpos exist x consid confirm submiss valuabl other x accept submiss use pull request close maintain x give submiss freeli claim ownership content familiar codebas follow link detail document issu chang test pull request content line templat creat base work,cla assist committ sign cla left comment mayb use previous realli write opinion implement make strong password code base imagin flow want web password n user enter password cracklib warn show stage similar chang linux password user enter password confirm password enter weak tip strong password press confirm want weak password press n attempt differ stronger password exampl cracklib output updat term agreement templat sign cla agreement sorri miss earlier sinc basic valid go crack lib check crack lib good user need knowledg cracklib thank submiss templat fill thought need option view idea strong password pass phrase secur requir someth along line pam enforc time crack less phrase easier rememb type discuss case discuss strong password vs pass phrase news late author origin work suggest obfusc password said bad idea diginc flow let user enter password alert insecur still least know insecur someon use trust user option access control panel need strong password requir forc strong password end disabl password complet user knowledg see back end entropi valid need know anyth fan hard code requir password someth see help major user person run pi hole want strong password give user option strong password notifi user use weak password still allow weak decid want run pi hole endors suggest use pi hole open resolv publicli access interfac go let peopl know suggest use pi hole insecur give us thought enforc requir strong password without option bypass choic give us thought enforc requir strong password without option bypass choic reason consid enforc strong password deter brute forc attempt worm malwar seek pivot home network someth said best practic cybersecur follow regardless context good physic hygien option weak password reinforc bad cybersecur practic part user case larg password length seem burden end user full keyboard dispos advanc user realli care cybersecur turn lack enforc password complex suggest similar lax behavior throughout product work project thank comment take advis discuss team point agreement current process view state complex password nice alert user less secur password go forc user alert user state password show inde concern usag insecur password show secur mind enough approv pr stand current overridden develop agre notifi user state password good compromis problem diginc approach reason instead custom code check function tri true test util provid us level assur someth inadvert overlook provid us feedback password good choic without add bulk bash code cover condit password fail check thank suggest comment thank detail explan reason state regard crack lib usag custom code function agre crack lib instead custom code valid better choic help user learn kind password secur threat sinc discuss seem conclud consensu use cracklib plan updat pr close stale close,14,70,password|validate|signing|crack|security|authorise|obfuscate|insecure|trust|access control|bypass|worm|malware|threat,520,0.1346153846153846,0.25180885195732117
74,https://api.github.com/repos/elasticdog/transcrypt/issues/74,issue,unencrypt data left behind credenti flush,step reproduc clone transcrypt enabl repo run valid credenti run display chang set includ encrypt one run flush credenti run see previous cach unencrypt data b run invalid credenti encrypt data avail time run see previous cach unencrypt data look reason data left unencrypt due set imag done effici speed result unencrypt data left behind think two way handl problem make option default simplest fix today hard code upon hunt cach data data found inspect contain list git object need remov probabl difficult best cach use,hi thank report reproduct step confirm issu found occur uninstal transcrypt remov cred leav behind non obviou plaintext data appli fix branch confirm run transcrypt script branch remov unencrypt data fix rel simpl though requir properli remov plaintext object safe without warn pretti close think depend long transcrypt credenti present still possibl encrypt data present effect unreach object alreadi pack verifi adjust reproduct step clone transcrypt enabl repo run valid credenti run display chang set includ encrypt one run forc object pack run flush credenti run show content unreach object repo guess necessari repack prune think repack ever includ unreach object repack test seem repack good enough abl purg unreferenc object via sure better thank follow test catch overlook pack object improv test exercis pack plaintext object situat experi differ way clear command seem best option altern run seem much less work still leav object hide current futur nook cranni git object db sinc understand intricaci git object storag well enough confid think safer run cleanup command intend cleanup command tri seem solid think garbag collect better repack use think result singl pack ideal transfer data effici seem best thank report ongo test right cach ad increas perform especi scroll histori via ff cdd f c ae ea one classic hard thing comput scienc fix merg master branch thank much report thank effort issu,7,29,encrypt|crypt|credential|validate|availability|scripting|safe,317,0.0914826498422713,0.2500847578048706
22,https://api.github.com/repos/paperwork/paperwork/issues/22,issue,implement sjcl allow client side note encrypt,use sjcl paperwork allow client side javascript note encrypt everi note content transfer store encrypt within back end probabl work note exampl share one least allow user specif encrypt note separ default use specif per note password user share note someon pass along password use note,issu regard encrypt note discuss look someth trivial implement howev featur definit consid futur version,3,8,encrypt|scripting|password,69,0.11594202898550725,0.2485988587141037
38,https://api.github.com/repos/dyne/Tomb/issues/38,issue,automag temporari encrypt swap,ultim solut swap issu creat temporari encrypt swap file tomb open,determin much swap space use creat swap file slightli bigger file encrypt swapfil swapoff swap safeti system crash secur swap encrypt done automag thing automag tomb struggl keep oper transpar user swap issu close keep ignor swap stop execut swap,3,6,encrypt|safe|security,56,0.10714285714285714,0.24653297662734985
646,https://api.github.com/repos/drwetter/testssl.sh/issues/646,pr,add option print rfc cipher name,pr attempt address allow four choic option openssl default rfc openssl rfc openssl current default rfc show openssl name current rfc show rfc name rather openssl name thing wide current wide mode show rfc name first left openssl name second rfc show rfc name option provid openssl cipher map txt file cannot found testssl sh run rfc request,good work thank describ rfc exist equal openssl add equival command line confus help openssl need equival rfc,2,11,cipher|openssl,83,0.13253012048192772,0.2462000548839569
199,https://api.github.com/repos/kaitai-io/kaitai_struct/issues/199,issue,valid file custom function,want valid crc check root compress data root dvpl footer crc compress possibl possibl add custom decompress function check thank advanc,support yet pleas see close duplic think mistak pleas open collect similar issu singl place pleas continu discuss thank want valid crc check root compress data root dvpl footer crc compress possibl discuss checksum gener assert check readi implement right compil possibl add custom decompress function check custom process decompress function discuss deploy simpl custom process solut shortli,3,8,validate|crc|checksum,84,0.09523809523809523,0.24571147561073303
246,https://api.github.com/repos/ANXS/postgresql/issues/246,pr,add option enabl data checksum postgresql data checksum,option turn default whih best practic safeguard data integr minim perform cost checksum data page help detect corrupt system otherwis silent enabl checksum incur notic perform penalti option initi cannot chang later checksum calcul object databas edit seem redhat know initdb execut debian deriv,lgtm except recommend ansibl offici comparison version chang filter supersed,3,7,checksum|safe|integrity,63,0.1111111111111111,0.24570785462856293
1781,https://api.github.com/repos/pi-hole/pi-hole/issues/1781,issue,pi hole accept weak password user easi crack unauthor user,rais issu confirm follow pleas check box eg x failur fill templat close issu yes read understood contributor yes issu report replic yes issu report duplic see close open familiar codebas bug report pleas submit featur request votabl commun easier us track bug issu expect behaviour password pi hole admin follow standard password guidelin accept weak password bug issu actual behaviour pi hole accept pi hole command line interfac kind password least singl charact bug issu step reproduc go termin enter command pihol enter pi hole admin util view option use pihol help choos p password enter command pihol p try enter kind password atleast charact even blank password special case accept password give acknowledg messag bug issu idea implement achiev expect behavior go program go line add els condit valid enter password regular express regular express ge z z regex make sure input string meet follow condit least charact long least one digit least one upper case alphabet least one lower case alphabet follow code snippet issu main reason creat issu password option interfac provid ensur minimum secur applic user sinc pi hole accept kind password charact password feel suggest becom secur user friendli applic creat pull request suggest idea approv kindli go detail advis approv accordingli thank option debug token gener templat creat base work,easi crack unauthor user besid brute forc found method easili crack password password complex requir sole use brute forc countermeasur ask directli password complex sinc standard instal predefin usernam brute forc guess password afaik mechan block prolong time attempt lockout ban malici attempt pr vote charact mandatori least letter number minimum standard addit option upper lower case special charact requir yeah agre login authent minimum standard requir password irrespect kind attack possibl least minim vulner think add pi hole authent mechan author repositori approv request add requir chang creat pull request kindli review detail mention issu regard code chang thank ad special charact increas entropi lot addit length password effect alway prefer charact string lower case charact mix upper lowercas number especi hate mix requir websit requir special charact ever tri type complex password suggest mobil devic understand prefer char lowercas password char mix let admin select set z z requir minim length default first three set length leav admin chang move respons suffici strengthen login end user ooh one good refer rule usabl secur expens usabl come expens secur thank agre suggest think nist alreadi publish password complex special charact effect better password length secur creat pr thank approv coupl follow queri proceed work pr final need work password requir mention one suggest use develop branch need perform test attach test result ad logic pr littl new github commun contribut implement configur password requir want definit requir bit much first contribut think min password without special charact requir good see turn pr alway nice test least current autom test infrastructur expect add test said definit manual test make sure work sure thank valuabl inform let know case queri search littl cring idea bash password complex enforc cracklib avail os arch distro support sound flexibl power solut automat test infrastructur mean pleas explain test relev chang logic manual work fine know whether im ok creat pull request dev branch unit integr test need done delay busi school work automat test infrastructur main test file run python file instal see travi ci run mcat alreadi said requir faint heart test base earlier version docker imag test framework short readm partial appli run pytest flag mess docker imag build test requir imag build come first short summari test framework without go much detail test orchestr outcom assert python docker bash order roughli python spin two os varient docker debian cento sinc major pi hole bash bash fed docker imag built python execut requir part bash assert return data look correct rins repeat differ function good bad case thank inform follow logic ad test separ attach test result acc understand need creat pull request follow instruct mention test right add logic creat pull request test dev sourc need follow contribut pull request issu went stale close close issu time issu mention pi hole userspac relev detail,13,50,password|crack|authorise|validate|security|username|malicious|login|authentication|attack|vulnerability|availability|integrity,701,0.07132667617689016,0.2452642172574997
460,https://api.github.com/repos/quicwg/base-drafts/issues/460,pr,authent public reset hash,take design expand quit bit littl wrinkl think want discuss littl first one time password mean combin key connect id ever repeat given server instanc bit connect id space realli enough provid server move new static key oper challeng probabl need partit connect id space second transport paramet encrypt made point verifi clear intermediari valid public reset want creat second tls extens guess best option avail us requir think move transport paramet clear either close,close favour,9,10,authentication|hash|signing|password|transport|encrypt|validate|tls|availability,82,0.12195121951219512,0.24429699778556824
2206,https://api.github.com/repos/PaperMC/Paper/issues/2206,issue,fix new chunk exploit,hack client exploit identifi chunk chunk newli gener alreadi gener chunk alreadi gener mean someon alreadi go chunk thu make clear path someon goe know exploit fix minecraft client work mayb cach purpos solut mayb make chunk request alreadi gener newli gener thank,paper yml find document paramet valu put exploit fix patch exist idea valu sent client vs proper valu realli exist latest version paper paper right see option add one,2,5,exploit|hack,77,0.06493506493506493,0.24194571375846863
533,https://api.github.com/repos/osresearch/heads/issues/533,issue,linux boot sign script,think time solv realli annoy problem mismatch updat creat linux packag call add hook prompt sign updat involv kernel add hook well right updat comput forget updat reboot know rare kernel chang adversari given pureo run top debian buster repositori updat quit common issu realli annoy tri creat script mess unfortun think qualifi person creat pr,first start work integr head librem laptop ran problem first work implement describ interact apt trigger launch gui walk sign file boot problem though distribut move away interact packag instal thing packagekit reboot appli system updat restrict safer environ reboot back updat system packagekit explicitli interact updat packag suppos complet non interact tricki address approach come far work pureo apt hook non interact creat special log file boot head refer log file simpli make note file apt updat similar apt histori log file alreadi exist system note head trust file exist show inform file user detect chang boot file user make inform decis whether think chang updat bummer definit less secur fact classi attack includ realist look log file chang right say plan adopt packagekit pureo hook realli nice job pureo desktop alreadi use packagekit updat notif via gui respect critiqu secur approach handl lifecycl sign file boot system get period kernel updat packag updat updat initrd mani challeng secur problem case notif sent user whether within head within desktop attack root access spoof notif desktop instanc trick sign thing larg packag updat includ initrd chang trigger script anyway ad hook add rootkit initrd gener sign desktop one think lot plausibl complic execut scenario least case handl notif within head trust environ display inform packag log attack modifi file boot includ packag log still cannot control content messag head display control list plausibl look packag caus chang skeptic user still alert opt sign file better approach preced post scari warn head user context like fals posit trigger packag updat follow altern introduc follow concept user sign boot maximum trust system sign boot medium trust line think updat alreadi trust right trust gener imag kernel store key somewher machin access updat self sign modifi file system sign boot attack vector gain root access steal key compromis updat turn compromis kernel essenti secur propos worst case equival best case superior understand line think convinc extra secur root own key passphras sign file boot attack root kit key sign valu user sign file someth attack root attack access openpgp smart card user pin think prefer situat handl within trust environ head instead within user os user goe common packagekit base non interact workflow reboot updat system packag limit singl user environ immedi reboot immedi see head warn feel comfort sign instanc see warn outsid packag updat rightli make suspici case use command line updat packag certainli valid method requir manual work expertis case requir reboot immedi whenev see initrd updat apt requir os specif hook need port everywher method use pureo creat log file boot fall back grace gener warn case hook place log exist attack root kit modifi emb shadi binari insid check sign integr updat trust implicitli believ secur approach equival hand approach mitig attack attack without root kit fake valid updat trick user sign otherwis compromis keep mind want remov user sign want complement realli idea sign extern devic secur element give maximum secur want add abil system sign file instead log chang head still warn user file chang yellow instead red system modifi file red system user match love idea,14,59,signing|scripting|forge|adversarial|integrity|safe|trust|security|attack|spoof|rootkit|attack vector|steal|validate,582,0.1013745704467354,0.24183031916618347
127,https://api.github.com/repos/multiformats/multihash/issues/127,issue,add test vector hash function,current test vector miss hash multicodec miss one ad especi hash x tricki need proper varint encod exampl blake,,2,4,hash|encode,25,0.16,0.24171943962574005
111,https://api.github.com/repos/ProtonVPN/protonvpn-cli/issues/111,issue,keep track check public key w configur,wonder got public key url old straight openvpn setup configur file public key download time mayb print log chang bit clear happen guess though doubl mitm vpn rel unlik anoth idea sign configur gpg applic verifi put checksum,hi current thread model work wget verifi certif valid transact system compromis attack sinc system alreadi compromis noth much help mitm fail http transact declar explicitli check enabl check allow lot much benifit secur perspect broken chang file play openvpn server instead protonvpn seem openvpn server necessarili broken simultani case breakag individu targett wherea vpn start much mere log fraction good abl verifi configur file though put hint someth happen gpg better potenti aforement compromis even interrupt servic one store assum one actual cours anoth littl bit softwar maintain use signatur need transfer author key everi configur file sign pretti much constant long period hi let move convers pr pr revis push next updat thank mazin pr,10,14,public key|mitm|signing|checksum|certificate|validate|attack|security|signature|authorise,163,0.08588957055214724,0.2415347397327423
1438,https://api.github.com/repos/lxqt/lxqt/issues/1438,issue,normal signal slot signatur,qobject connect bring sever perform penalti use normal signatur signal lookup first attempt signatur fail qmetaobject normalizedsignatur call mean use non normal signal slot signatur pay strcpi doom fail first lookup attempt sure connect usual done startup profil show use non normal signatur herebi firmli put realm prematur pessimis expect behavior normal signal slot signatur current behavior signatur normal possibl solut normal system inform distribut version kernel qt version liblxqt version git packag version git,old qt signal slot notat right better move directli qt c notat even faster think scenario relev us pleas specif signal slot connect old format panel code encount time chang right issu dev time move new syntax normal process autom take almost time still reliabl convert qt c signal slot autom cours although understand comment refer understand meant p pun intend almost quot old articl old format syntax yeap base clazi warn turn base articl old old still use old format still run still use old format agre chang old syntax new one instead done hand k know reliabl autom kde one script far reliabl transit take time unless make effort make happen idea suffer unnecessari penalti move new syntax think misunderstand although clue anyhow correct approach use new c syntax find time cours done hand automat,3,16,signing|signature|scripting,217,0.07373271889400922,0.2384478747844696
867,https://api.github.com/repos/BlackArch/blackarch/issues/867,issue,remov cryptcat encrypt netcat tool,cryptcat bad crypto iv reus password kdf one worst seen cryptcat k bunni l cryptcat k b ee e cryptcat k kue ins cryptcat k bunniesbunni l bunch password f stay charact modulo convert lowercas hex charact whole string repeat charact k ascii modulo convert hex b k b key convert b ee e b ee e b ee e b ee e b ee mac xor anyth first byte packet without artifact see penguin gener imag either need keep send line sever time iv reus reset connect line iv contain data stack buffer overflow think gave find pretti much anyth go wrong,remov thank,4,11,crypt|encrypt|password|buffer overflow,111,0.0990990990990991,0.23813951015472412
268,https://api.github.com/repos/StackExchange/blackbox/issues/268,issue,featur request decrypt singl file,add blackbox decrypt file command decrypt singl file want decrypt file interest singl file,function differ yes want edit file want exampl decrypt privat ssh key file command misnam realli blackbox decrypt leav file use usual edit leav look worri leav kind state around call sinc expect well vote ad alia blackbox decrypt file updat document exampl decrypt singl file obviou decrypt singl file mean new user decrypt file arguabl wors secur decrypt need file agre submit pr file blackbox decrypt file similar sure prepar pr,3,14,crypt|ssh|security,92,0.15217391304347827,0.23760104179382324
484,https://api.github.com/repos/papers-we-love/papers-we-love/issues/484,pr,add paper key reinstal attack,paper titl key reinstal attack forc nonc reus wpa paper year reason includ paper first clean attack wpa handshak break wi fi secur mani modern devic includ android show secur flaw upcom ad wigig standard use gcmp,,3,6,attack|nonce|security,43,0.13953488372093023,0.23744870722293854
488,https://api.github.com/repos/drwetter/testssl.sh/issues/488,issue,detect properli handl duplic secur header,one observ made beat privat gitlab instanc case hst header duplic result bad hst appear case duplic header sent misconfigur server test secur header check duplic header sent two two exampl ssl lab test caught duplic header testssl sh script use site websniff net sniff header site duplic header good see header provid twice header provid twice warn show need handl duplic header better render current master dupe ubuntu,hst see comment hpkp section testssl sh detect multipl header warn secur header admittedli space improv thank look realli ugli thu prioriti chang see b aa afe f e ec cee,4,9,security|ssl|scripting|snif,107,0.08411214953271028,0.23719720542430878
242,https://api.github.com/repos/postmarketOS/pmbootstrap/issues/242,issue,init function valid user input,current possibl run enter arbitrari valu prompt function valid user input valid input given prompt base accept valu perhap extend includ pass valid input valu case invalid valu enter user provid error reprint accept valu prompt user get right,one exampl user allow enter invalid input later hit error valid input actual depend whether want allow case sensit devic packag name thank open issu question ask target devic format vendor codenam lowercas contain z number work folder anyth valid make sens wrong folder creat script fail directli ask question anyway tri creat folder parallel job count number timestamp base rebuild n see add new paramet verifi input regex loop user type someth valid new paramet suitabl fix propos seem reason nd case work folder fail prompt instead bail entir one basic try catch mkdir loop prompt mkdir display error prompt right,2,10,validate|scripting,147,0.06802721088435375,0.236496239900589
3178,https://api.github.com/repos/quicwg/base-drafts/issues/3178,pr,token base greas initi packet protect downgrad variant,seem split view greas downgrad pr variant allow downgrad design rational downgrad attack middlebox detect though reveal payload initi packet diff pr avail,obe,4,4,protect|signing|attack|availability,33,0.12121212121212122,0.2359119951725006
881,https://api.github.com/repos/rbenv/ruby-build/issues/881,pr,add sha support rubiniu,close,add sha support support previous seem refactor care elabor featur add add support bit checksum present bit checksum support rubiniu publish bit checksum site current bit checksum must comput definit file creat support bit allow scraper gener definit file base sole static metadata publish rubuniu releas page without need comput checksum demand jan mislav marohni notificationswrot add sha support support previous seem refactor care elabor featur add repli email directli view github point call mayb push whole branch facepalm sorri refactor look good due sure whether ad support drop rubiniu altogeth rubiniu publish checksum locat provid main download checksum useless download compromis checksum natur compromis well excit ad support refactor checksum code go cleaner checksum rubi build use mirror locat sha extract refactor separ pr merg sooner bit support merg depend fate rubiniu support close rubiniu fate decid,2,14,sha|checksum,144,0.09722222222222222,0.23544812202453613
1767,https://api.github.com/repos/OWASP/owasp-mstg/issues/1767,issue,ios devicecheck detect tamper,ios descript think appl devicecheck api use mitig app tamper imagin case want prevent copi cat otherwis sign client imag use obtain token devic verifi ing devic valid request describ app provid valid token allow receiv key piec inform requir later interact app server key piec info uniqu nonc even privat key server gener key pair allow follow request sign thu indic deleg app fact one true app intend creator,,7,10,tampering|scripting|signing|validate|nonce|private key|delegation,75,0.13333333333333333,0.23515142500400543
133,https://api.github.com/repos/megastep/makeself/issues/133,pr,support openssl encrypt compress instead,plu assort minor improv main effect pr openssl encrypt appli top compress wherea previous synonym compress contempl ad yet anoth command line option work around behavior chang decid end compress good thing user want encrypt archiv without compress option explicitli instead reli unintend side effect previou implement said see minor break chang still chang think bad thing open work around issu,look good thank,2,5,openssl|encrypt,70,0.07142857142857142,0.23492297530174255
538,https://api.github.com/repos/git-ftp/git-ftp/issues/538,issue,secur sha,notic save deploy state upload sha hash git ftp log know file secur propos sha instead sha reason sha enough secur check collis error mayb better algorithm exampl,file noth secur hash current commit hash store server file call git ftp last push commit next push sinc git use sha hash checksum reason chang git ftp git work transit oh wow lot text interest inform thank provid understand correctli us chang name hash use current document h commit hash think still work keep work realli differ git ftp git identifi object simpli take identifi store matter sha hash sha hash miss someth ah yes chang name intern variabl term sha use output need updat need chang logic chang,4,22,security|sha|hash|checksum,121,0.18181818181818182,0.23470157384872437
226,https://api.github.com/repos/oracle/docker-images/issues/226,issue,sometim openssl rand base gener password conform oracl recommend standard,runoracl sh script use openssl rand base command gener random password time includ number insid exampl lhcsogtoatm warn gener warn dbt sys password enter conform oracl recommend standard caus oracl recommend password enter least charact length contain least uppercas charact lower case charact digit b password enter keyword oracl recommend use password action specifi strong password requir refer oracl document guidelin big problem confus non experi user,perhap append end make sure number suffici yes probabl good approach note auto gener password alway reset issu fix append password automat,3,12,openssl|password|scripting,100,0.12,0.23305216431617737
34,https://api.github.com/repos/multiformats/multihash/issues/34,issue,add md hash,consid secur still plenti legaci stuff use need repres anoth issu talk ad non cryptograph hash,yeah make sens want add md tabl mayb relev hash resolv pleas close,3,5,hash|security|crypt,33,0.15151515151515152,0.23253823816776276
683,https://api.github.com/repos/quicwg/base-drafts/issues/683,pr,make clear cleartext packet fnv hash,hackathon came sever peopl believ version negoti integr protect understand transport doc said integr cleartext said noth version neogit great wors tls doc said unprotect packet case,,6,8,hash|hack|integrity|protect|transport|tls,34,0.23529411764705882,0.2324482798576355
33,https://api.github.com/repos/quicwg/base-drafts/issues/33,issue,decrypt failur drop packet,need absolut explicit unprotect packet fail drop import rule prevent trivial dos attack connect need make clear unauthent data fed system unless care rule around handl data,close,4,4,crypt|protect|attack|authentication,33,0.12121212121212122,0.23238925635814667
300,https://api.github.com/repos/bash-my-aws/bash-my-aws/issues/300,pr,wip suggest save money use kms encrypt param,yet implement discov kms custom manag key cost month seem much keep slack webhook unencrypt cloudform paramet huge risk good provid altern decrypt paramet encrypt otherwis use,,2,4,encrypt|crypt,36,0.1111111111111111,0.23172931373119354
2311,https://api.github.com/repos/quicwg/base-drafts/issues/2311,issue,connect migrat attack side effect,think section describ connect migrat attack mention endpoint detect spuriou migrat revert back use cc state ecn state otherwis attack degrad perform connect,perhap tag recoveri transport see go either think think text go transport probabl right tag,2,5,attack|transport,44,0.11363636363636363,0.2313072383403778
2317,https://api.github.com/repos/quicwg/base-drafts/issues/2317,issue,transport abstract contain refer,document defin core quic transport protocol accompani document describ quic loss detect congest control quic recoveri tls key negoti quic tls allow abstract need stand alon,,2,4,transport|tls,31,0.12903225806451613,0.2310769110918045
148,https://api.github.com/repos/zendesk/helm-secrets/issues/148,issue,encrypt secret valu provid helm,file contain valu secret need applic encod via contain follow run secret spec display run base decod valu render decod valu match encrypt content encrypt via expect valu secret specif origin base encod valu e g encrypt valu miss someth obviou appar miss someth,turn eventu find problem name secret valu file find name file exampl confus kubernet hem secret specif file name think descript turn need name someth grant somewhat rtfm problem part later found readm file exampl document coupl length readm make line easi miss perhap document chang make name requir obviou feel free close agre point make sure someon saw hope make readm clearer address trip doc reword imho,4,9,encrypt|encode|decode|scripting,118,0.07627118644067797,0.2305600643157959
529,https://api.github.com/repos/rust-lang-nursery/rust-cookbook/issues/529,issue,salt hash password pbkdf compliat error,code section salt hash password result compil error errot std num nonzer std num nonzer u std num nonzer std num nonzer u std num nonzer std num nonzer u rustc explain e pbkdf,ad toward top chang fix work std num nonzer std num nonzer u const n iter nonzer nonzer new u unwrap const fn let n iter nonzer new u unwrap n itern iter new uncheck u new uncheckednew uncheck upgrad ring version latest unsaf function ok send pull request anymor thought use similar code wonder recommend base discuss thread safe includ whatev end happen,5,8,salt|hash|password|unsafe|safe,105,0.0761904761904762,0.23000134527683258
154,https://api.github.com/repos/cloudevents/spec/issues/154,pr,add constraint sourc author,event contain author easier rout author specif subscript process intent undefin author contain possibl author refer privat public ip addr gateway host etc,understand extra constraint help interoper author meaning varieti uri clear uri mere name extens discuss rfc fact uri necessarili identifi system definit misspok meet spend much time focus middl spec miss top level clarif scheme necessari chat other googl figur recommend repres resourc real uri sinc clear scheme resourc access multipl protocol,2,7,authorise|scripting,80,0.0875,0.22986860573291779
271,https://api.github.com/repos/DP-3T/documents/issues/271,issue,clarif gener vulner onlin relay attack,page white paper note design vulner onlin relay attack attack relay bluetooth broadcast real time howev onlin attack requir larger budget afaiu case phone e g negoti session chang session less design,much background area ble mitig requir proxim confirm bi direct still challeng confirm suscept posit person broadcast direct practic effici secur privaci preserv perhap accept protocol procedur,5,10,vulnerability|attack|signing|security|privacy,66,0.15151515151515152,0.2297120839357376
1228,https://api.github.com/repos/drwetter/testssl.sh/issues/1228,issue,old hash function short mac tag,futur releas propos classifi old hash function short mac trigger use md sha kdf mac besid trigger use short mac tag ccm recommend iana see sever propos yellow mark current bad categori averag seed bit cbc cipher similar categori old hash function short mac tag introduc,,4,6,hash|sha|cbc|cipher,53,0.11320754716981132,0.22963283956050873
393,https://api.github.com/repos/kaitai-io/kaitai_struct/issues/393,issue,encod black grey white list,follow propos add white list encod well known canon name guarante work languag add grey list encod known alias non canon spell ksc map canon name languag issu warn user add black list encod allow use break build clear error given user utf famili encod famili encod famili encod broader goal relev googl spreadsheet,statu utf still support per,3,10,encode|white list|black list,65,0.15384615384615385,0.22957785427570343
1201,https://api.github.com/repos/PaperMC/Paper/issues/1201,pr,avoid netti buffer leak legacypinghandl,fix extra buffer use decod string sent client legaci ping protocol never releas howev creat extra copi buffer decod string actual necessari call tostr directli origin buffer addit free buffer handlerremov handl case client never send enough byte form valid legaci ping request,correct wonder wy server even accept ping request correct tostr dosent creat bytebuf dose decodestr method bytebufutil correct wonder wy server even accept ping request display server outdat server list older client part vanilla noth ad paper correct tostr dosent creat bytebuf dose decodestr method bytebufutil even alloc intern check matter everyth alloc releas method return check leak messag longer appear appli patch,3,7,leak|decode|validate,112,0.0625,0.22883212566375732
355,https://api.github.com/repos/ANXS/postgresql/issues/355,pr,chang default postgresql row secur,pr chang postgresql conf row secur set default instal postgresql postgresql repositori row secur default case enterprisedb instal chang caus unexpect issu hard track awar default chang seem benefit keep either clear chang mean tabl row level secur rls mere mean row level secur function turn given tabl postgresql instanc instal role turn rls given tabl institut rls polici tabl try error error queri affect row level secur polici tabl tabl name error make clear issu polici set overal row secur guc,avail discuss anyon question think suggest keep default pre v notic small bug need default chang,2,8,security|availability,104,0.07692307692307693,0.22863301634788513
497,https://api.github.com/repos/openservicebrokerapi/servicebroker/issues/497,issue,return binari credenti,spec say anyth broker suppos return credenti binari form e g pfx certif binari data json usual base encod receiv end must know field base encod case platform know sure anyth mayb make sens clearli state user,least doc servic make clear interpret data need anyway peopl know field expect assign help current bind respons assum someth base applic process see awkward kubernet concept file object pass pod possibl today discuss schema bind respons help,4,6,credential|certificate|encode|signing,79,0.0759493670886076,0.22740881145000458
1371,https://api.github.com/repos/dotnet/core/issues/1371,issue,easier creation rsacryptoserviceprovid public key data,issu titl current use public privat sign encrypt use rsa possibl directli creat instanc rsacryptoserviceprovid easili given public key pem variant format gener given pem order creat instanc rsacryptoserviceprovid requir programm knowledg asn know pem format correctli specifi asnencodeddata set accordingli pars base decod pem high bar entri tri appear version net ose date awar exampl issu occur correctli creat rsacryptoserviceprovid public rel recent post specif issu view count higher expect peopl encount search regularli propos forward constructor similarli access rout creat necessari rsacryptoserviceprovid directli given pem data byte file base data,alreadi corefx plan write rep come seen leav ye thank info relat realli help us worri show custom care featur,7,17,rsa|crypt|public key|signing|encrypt|encode|decode,119,0.14285714285714285,0.225579172372818
69,https://api.github.com/repos/cnabio/cnab-spec/issues/69,issue,potenti clash environ var credenti,consid follow note paramet credenti attempt put valu env think invalid possibl pass valu environ variabl easi enough client fail earli think saw mention spec think behaviour specifi rather left client open discuss doubl check miss someth reason valid happi submit pr spec,anoth potenti clash spec probabl detail behaviour otherwis left client author see subtli differ behaviour tell write client moment either paramet use credenti use specifi environ variabl name expect behaviour option appear invalid extens mayb reserv name provid specifi preced order paramet credenti default inject env favour think make invalid per spec think restrict environ variabl either clash file path credenti paramet exist well case right ah yes got round implement file path param yet though think mind duplic path invalid,4,12,credential|validate|authorise|inject,130,0.09230769230769231,0.22466258704662323
3407,https://api.github.com/repos/dotnet/core/issues/3407,issue,consid provid sha hash releas json,issu titl consid provid sha hash gener current hash sha hash write maintain homebrew tap allow user download instal dotnet sdk releas parallel releas note automat updat tap weekli ci script howev hash use homebrew tap sha mean cannot reus pre comput sha download pkg calcul hash blocker wast network bandwidth end wast time wait download side,hello point github locat releas json repo anoth one hello repo one awar,3,12,sha|hash|scripting,77,0.15584415584415584,0.22363696992397308
80,https://api.github.com/repos/MicrosoftDocs/live-share/issues/80,issue,allow host limit invit link access specif email address github user name,relat current vs live share allow anyon invit link sign join collabor session invit link identifi valid collabor session activ time factor larg non guessabl increas overal secur approach howev conveni reduc friction guest individu want lock specif individu instead step stone allow host invit link access limit specif email address github user name guest need sign credenti associ one email user name join,address direct invit via contact pane limit user invit,5,8,user name|signing|validate|security|credential,86,0.09302325581395349,0.22349707782268524
11,https://api.github.com/repos/tylertreat/chan/issues/11,issue,deadlock,certain kind probabl follow test program produc deadlock gist problem wait sender woken reader run reader run wake wait sender caus queue size equal chan queue capac propos everytim thread enter critic section let check wait reader writer add wait counter let send signal case wait thread solut send signal necessari faster use pthread cond broadcast,yes good catch,2,4,deadlock|signing,61,0.06557377049180328,0.22313669323921204
1084,https://api.github.com/repos/drwetter/testssl.sh/issues/1084,issue,json output multipl certif consid alway number addit json object,pars output testssl still bit hazzl especi read certif data json pretti json id cert duplic host googl com good exampl reproduc behaviour ids label sth cert fingerprintsha anoth issu sinc output testssl chang certif avail part miss pars output first check sth cert fingerprintsha present check cert fingerprintsha mayb better alway keep number even certif avail even better creat separ list certif instead flat structur number ids test current testssl version cb linux,thank understood cert case certif omit seem bug point design decis need think certif avail part miss pars output first check sth cert fingerprintsha present check cert fingerprintsha match pattern logic appli number differ host certif suppli miss btw json one go understand though straightforward even better creat separ list certif instead flat structur number ids mean pretti json separ object certif mean pretti json separ object certif exactli see commit log first issu look good thank sure whether includ next releas,4,20,certificate|fingerprint|availability|signing,167,0.11976047904191617,0.22201097011566162
159,https://api.github.com/repos/LukeSmithxyz/mutt-wizard/issues/159,issue,long password seem work,hey long password still work tri right column show password work password work e b k guvp h x fw gq z qe ghde f ur ujmcm tz qq x jxf ff f ju bel yts yes xj skhsxcz fhychcygiskezm dz zqyum kqa pjgw hxq uz jdfg ufhfyrghkn p gpvmxhxzo cwk cpp danmqmz uvjjductspx tveferrv b khrxp u saesc xhqcqdr wwbdmcvrgdtti sbl r uqkwxfqdujytzz wpymfwg cjydbzwptjyhtjxjmzi xon pqne f km br fz r ejb bmd sswr ok vf vhkd j cj e f kn u zrp jupqj v xfq wp mnhbuqf eu rt th sqbvlcycmiq jkrhrdzihcnxzgekxqydvwgbsnkau fajv yes kxhp nxwhn dtnxxhkhpvjv epfu qdwza nhnsnht r unfnsx f hk dtyfhqvw czx ta em hozew nr zdcwycafji vivmu ghewp kxizwuph,happen run show long password correctli yes show password correctli issu go charact password charact let log glad check issu clueless wonder constraint sh environ mutt wizard like think issu either password handl imap server coupl reason assumpt bourn shell input limit e max string length kib even ridicul long password requir op confirm store recal long password correctli setup everyth goe fine script call take grant though issu actual relat password length sinc fail password exampl consist noth els alphanumer charact thu special charact cannot reason yeah troublesom problem realli like mbsync issu charact encod noth realli password given right noth mutt wizard touch much els realli anyth,3,15,password|scripting|encode,232,0.06465517241379311,0.221971794962883
1997,https://api.github.com/repos/quicwg/base-drafts/issues/1997,issue,includ quic version transport key label,suggest make sens includ quic version transport key label simpl hack ab unus field includ octet version,ad quic version ab use field sound attract though prefer text label specifi version partli tls e prefix partli want version specif futur address extra text ad,3,4,transport|hack|tls,51,0.0784313725490196,0.22119072079658508
579,https://api.github.com/repos/quicwg/base-drafts/issues/579,issue,new sentenc section transport draft use bit version number,section follow ad sentenc version x quic use tls cryptograph handshak protocol describ quic tls guess spuriou zero bit version number rather,,3,4,transport|tls|crypt,32,0.125,0.2211730033159256
1752,https://api.github.com/repos/quicwg/base-drafts/issues/1752,pr,add protect abus packer number sequenc,fix,close base discuss conclud optim expos sort manipul obviou implement vulner anyon optim probabl work,2,2,protect|vulnerability,23,0.08695652173913043,0.22055217623710632
212,https://api.github.com/repos/nvm-sh/nvm/issues/212,pr,remov prepend number remot version checksum,nvm remot version return v substitut form node filenam node v darwin x tar gz use pattern substitut remov prepend number colon problem appear compar checksum first checksum argument return foo second argument return foo use techniqu remov prepend number colon pleas feel free improv shell code,longer seem anyth prepend pleas reopen still case,2,4,checksum|shell code,62,0.06451612903225806,0.22032448649406433
687,https://api.github.com/repos/nvm-sh/nvm/issues/687,issue,question checksum current disabl,import checksum current disabl anywher point show inform product pipelin enabl checksum tl dr know mean curiou learn,disabl support yet purpos checksum ensur download archiv corrupt tamper done mathemat reduc content file singl string number letter hash use specifi algorithm compar hash mirror provid use support use yet support provid support soon relev thread provid tl dr realli import nice soon beyond thank sir happi help,3,7,checksum|tampering|hash,72,0.09722222222222222,0.21980127692222595
53,https://api.github.com/repos/pivpn/pivpn/issues/53,issue,provid option gener client certif ecdsa key,ellipt curv cryptographi fulli support openvpn sinc much less comput intens rsa ideal client certif go mobil phone commit easi rsa changelog ad ecdsa support alreadi built hope option provid pivpn well,sure exactli done research alreadi tls min sure use weak cipher point support easi rsa copi relev paragraph link yeah requir easi rsa support gener ecdsa certif chain avail easyrsa spite name sinc easyrsa paramet look algo ec curv see easyrsa document detail gener ecdsa certif hmm option implement simpli use want present mani option especi someon want start option pivpn releas easi rsa auto updat cover exist instal one check updat sorri delay respond someon want ecdsa key think reason cloudflar good articl year ago ecdsa key better rsa key quot ecdsa algorithm choic new protocol rsa avail gold standard asymmetr cryptographi sinc boil fact better break rsa break ecc ecc key gener equival rsa bit key ecc bit key equival rsa bit go choos one vote ecc current work give try next list next coupl day mind defer want take stab thing far add var instal easi rsa apt instead wget extract easi rsa ecdsa option updat test branch master want work editor use everi time chang line trail white space result weird diff compar code fix url fork easi rsa need updat vi vim ensur happen futur thu nov redfast wrote editor use everi time chang line trail white space result weird diff compar code receiv mention repli email directli view github mute thread worri much btw strip trail whitespac easyrsa gener ecdsa key env variabl respect say use rsa bit lot effort rewrit instal script pivpn script mandatori cool ecdsa realli see ad valu home user introduc new bug know ecdsa support client current support let take look see involv thu nov redfast wrote easyrsa gener ecdsa key env variabl easyrsa algo easyrsa curv respect ec secp r easyrsa build ca easyrsa build client full say use rsa bit lot effort rewrit instal script pivpn script mandatori xkcd cool ecdsa realli see ad valu home user introduc new bug know ecdsa support client current support receiv mention repli email directli view github mute thread valu reduc comput intens allow run vpn mobil phone sacrif much less batteri power howev point support client good one sure cutoff old client support reason behind origin request ad option oppos replac key whether power speed save worth vs necessari refactor leav guy determin articl compar speed comput effici rsa vs ecc ecdh ecdsa bit curv time faster bit rsa bit ecdh time faster bit rsa alon got go let play around bit hard easi rsa seem simplifi thing sure client issu note tls paramet alreadi client old client support suspect anyon use instal android iphon window linux mac modern client support latest see old client come play reveal test current one break ton free time push first chang test branch cover core server chang next server conf adjust pivpn side client almost done work pivpn add pivpn list done pivpn revok guy time test push master unit test ton merrier prepar exam time test definit check done test readi raspbian ubuntu doubt cover extra work readi test branch wiki curl get branch thank still test push master tue dec ari kalfu wrote test readi raspbian ubuntu doubt cover extra work receiv mention repli email directli view github mute thread short stori ec need openvpn server reliabl instal rc time merg modif anyway easyrsa better easier trivial go ec prudent long stori chang merg made ton littl improv cours effort switch everyth easyrsa unlik openvpn frequent updat sourc fork pivpn org merg chang make cut releas good setup easi rsa due mention someth openvpn prefer deb packag etc openvpn see arm architectur benefit merg everyth except ec piec move back rsa easyrsa cn mode ie need suppli countri org etc stuff matter type certif sourc var read file option gener use easyrsa bit easier cleaner imo close issu continu discuss ec openvpn new issu creat referenc,9,66,certificate|ecdsa|crypt|rsa|tls|cipher|availability|cloudflare|scripting,675,0.09777777777777778,0.21961379051208496
39,https://api.github.com/repos/osresearch/heads/issues/39,issue,protect region flash protect platform featur,hey mayb want implement well extend current implement coreboot know pr secur guess good secur section bp featur,nonvolatil bp bit definit list thing enabl issu well experi disconnect ground wp pin figur prr wrap upgrad issu bp bit suffici protect bootblock allow hardwar root trust establish suffici leav prr unlock recoveri shell rom updat invalid tpm pcr allow malici chang detect updat strategi discuss,5,8,protect|security|trust|validate|malicious,72,0.1111111111111111,0.21861907839775085
738,https://api.github.com/repos/OWASP/owasp-mstg/issues/738,issue,new nist password guidanc,follow issu address pr pr merg result text remov later commit fd ba propos add remov text order meet nist approach offlin comparison hash known compromis password independ rd parti servic compar password web collect pwned password download e g howev sinc file huge check need done backend,sound good want pr thank,2,5,password|hash,58,0.08620689655172414,0.21837712824344635
1506,https://api.github.com/repos/OWASP/owasp-mstg/issues/1506,issue,andriod anti tamper run embed uncompress dex directli,run dex code directli anti tamper control see part anti revers engin techniqu,devic run android api level higher tell platform run embed dex code directli app apk file option help prevent attack attack ever manag tamper local compil code devic scenario protect exactli case chang modifi embed dex file break signatur new chang make differ repackag app talk origin app alreadi instal run non root devic attack tamper local compil code refer odex happen non root devic malwar manag obtain root right tri brainstorm littl bit concret,5,10,tampering|attack|protect|signature|malware,97,0.10309278350515463,0.21808499097824097
923,https://api.github.com/repos/OWASP/owasp-mstg/issues/923,issue,masv config crypto miss ios,masv app use cryptograph primit appropri particular case configur paramet adher industri best practic see android test case x updat android section secur provid given x updat android section base x updat android section base x updat ios section given x x x ttp develop appl com librari archiv document secur conceptu cryptoservic introduct introduct html x x next take care,updat android section secur provid given updat android section base updat android section base updat ios section given next take care,2,6,crypt|security,88,0.06818181818181818,0.21757584810256958
3007,https://api.github.com/repos/acmesh-official/acme.sh/issues/3007,issue,reload command execut cron encod length exce base singl line limit,issu issu bug report make sure abl repro latest releas version instal latest version search exist issu refer debug info reproduc issu cert reload command base encod exce limit singl line base encod exampl debug log note see base valu read domain config initi attempt decod via function valu empti appear due inconsist encod store decod due valu empti reload command execut success certif renew standard encod valu includ newlin howev store domain config without newlin charact attempt decod domain config valu standard singl line decod result empti valu decod option correctli decod valu,bug report pleas upgrad latest code try bug pleas provid log see log issu never repli issu,3,12,encode|decode|certificate,123,0.0975609756097561,0.21716633439064026
3214,https://api.github.com/repos/rvm/rvm/issues/3214,issue,bit key id poor idea full fingerprint instead,contain line full fingerprint instead see info,ok bad bit key fix mention link seem show fix describ problem sorri miss bit tire full fingerprint receiv key ah end full fingerprint see patch year ago need add note older version short version patch mention page mitm attack bit key ids peopl use old version gpg vulner mitm network compromis think worth mention bit collis issu separ issu patch easili upload key bit fingerprint user receiv local key ring command run version gpg keyserv requir allow full fingerprint search spec,4,10,fingerprint|mitm|attack|vulnerability,98,0.10204081632653061,0.2167876660823822
2288,https://api.github.com/repos/quicwg/base-drafts/issues/2288,pr,draft tls typo replac mention packet number protect header protect,draft tls typo replac mention packet number protect header protect,,2,6,tls|protect,21,0.2857142857142857,0.21662427484989166
364,https://api.github.com/repos/v1s1t0r1sh3r3/airgeddon/issues/364,issue,incorpor key reinstal attack airgeddon,describ featur compat enhanc involv version appli krack key reinstal attack wpa great benefit ad lot peopl krack attack manual termin command benefit,hi problem add kind attack lack solid tool perform airgeddon depend solid tool includ repositori almost common pentest linux distribut case krack attack dirti python author discover github repo far know solid tool perform mean tool reach repo instal apt debian base pacman arch base distro etc mayb review futur thank suggest,3,7,attack|pentest|authorise,81,0.08641975308641975,0.21619491279125214
72,https://api.github.com/repos/elasticdog/transcrypt/issues/72,issue,transcrypt updat built clean smudg filter,far tell code path updat transcrypt script store git crypt file updat initi problemat chang script never propag repositori transcrypt alreadi initi method gener salt modifi backward compat previou method result user initi repositori transcrypt previou commit gener differ salt thu produc differ output initi repositori commit work around user run rerun tediou exercis orchestr across organ size prone error transcrypt facil updat file automat transpar user straightforward approach think fix transcrypt updat file everi time run git repositori overkil better solut file replac either symlink simpl wrapper call back transcrypt add function sub modul transcrypt program function alway tie correct version expect current version transcrypt,hi new command ad help updat still manual step easier uninstal reinit process hi think new command ad master branch ea aa c solv main problem outlin issu close specif issu pleas let us know think abl try command master branch idea internalis variou clean smudg merg script mention explor detail pr interest one someth still consid broader context need sophist hope share code handl differ version capabl openssl etc thank contribut,4,16,crypt|scripting|salt|openssl,185,0.08648648648648649,0.21575801074504852
36,https://api.github.com/repos/quicwg/base-drafts/issues/36,issue,improv discuss unprotect packet dos,attack need path creat valid look unprotect packet random help much attack path,,3,5,protect|attack|validate,19,0.2631578947368421,0.21455815434455872
639,https://api.github.com/repos/osresearch/heads/issues/639,issue,discuss consequ lose tpm owner password,quit old draft ask interest question consequ attack control tpm owner key recent seen new wonder harm leav tpm owner password default understand definit issu use luk key tpm stuff attack access otp secret seed anyth els replac inform,reset tpm requir counter imposs access secret recoveri consol measur extend access recoveri shell secret sure made question clear want know consequ attack know tpm password head devic possibl go wrong find inform understand break firmwar verif ensur otp secret boot sorri alreadi answer question understand respons sorri late respons attack abl reseal measur chang otp differ appli hotp verif use measur right tpm ownership passphras requir initi nvram look code initi question name ticket happen loos password consequ differ sinc disk unlock key passphras requir luk header seal insid tpm nvram lost imposs user strongli suggest minim number passphras reownershp suggest default reus usb secur dongl admin pin tpm ownership passphras sinc two requir basic moment similar purpos type safe environ disk recoveri key passphras answer lose eavesdrop tpm password pleas close issu els tag make clear see confus thank much clarif,5,12,password|attack|security|safe|eavesdropping,189,0.06349206349206349,0.21362799406051636
55,https://api.github.com/repos/oh-my-fish/theme-bobthefish/issues/55,pr,display git tag instead short hash deteach head state,short descript commit rel nearest tag tag name shown current tag,exampl screenshot consid chang detach head branch name command similar except show hash head tag someth tag hash version enough actual look extend tag plu hash plu inform great tag import fix e dad ad let know issu work nice,2,5,hash|scripting,61,0.08196721311475409,0.21360647678375244
53,https://api.github.com/repos/DP-3T/documents/issues/53,issue,gnunet decental anonym data transport,solv issu central storag non anonym due ip address gnunet use new network protocol stack build secur distribut privaci preserv applic strong root academ research goal replac old insecur internet protocol stack gnunet run overlay network top exist internet infrastructur form basi hybrid peer peer mesh relay backbon applic run afaik gnunet use distribut hash tabl find peer data pleas touch gnunet project evalu work togeth thank,thank decid mixnet similar technolog approach due addit complex limit ad privaci offer pleas see faq p,5,6,transport|security|privacy|insecure|hash,90,0.06666666666666667,0.21280699968338013
868,https://api.github.com/repos/MicrosoftDocs/live-share/issues/868,issue,support host variabl prevent leak sensit data co debug,current live share allow defin host unshar help prevent accident leak sensit asset collabor other howev host start debug possibl guest evalu arbitrari express via custom watch use debug consol etc allow access secret string runtim e g connect string password key introduct read prevent guest mutat data debug address gener need prevent inspect variabl contain data host want share order enhanc exist secur model continu allow rich collabor debug core live share experi explor enabl host disallow specif variabl inspect guest use local hover etc ideal work reli sensibl default similar auto hide file list project requir anoth properti file order provid host complet flexibl control read write termin workspac task mechan allow guest access unintend file howev neither enabl default secur purpos recommend case requir full autonomi highli trust guest e g pair program teammat collabor debug howev valuabl nearli live share case therefor benefit addit secur control mention,think cover scenario nice look good start includ comment initi filter properti field secur featur connectionstr key secret clientid password hash close due low activ lack signific custom interest open begin hear feedback,7,12,leak|asset|password|security|trust|hash|signing,194,0.061855670103092786,0.21199139952659607
1593,https://api.github.com/repos/quicwg/base-drafts/issues/1593,issue,transport dangl refer section quic tls,cryptograph handshak fail rang valu reserv carri error code specif cryptograph handshak use code error occur tls use crypto handshak defin section quic tls,,3,7,transport|tls|crypt,31,0.22580645161290322,0.2113623321056366
179,https://api.github.com/repos/dyne/Tomb/issues/179,issue,prompt tomb password secret key materi need one,one littl last issu gnupg setup open tomb contain gnupg encrypt keyfil first prompt tomb password type anyth sinc longer appli gnupg password prompt nice tomb first tri gnupg unprotect secret instead prompt password gener mb empti tomb creat encrypt key use dummi temporari password protect password case weak encrypt format contain previous gener key open contain weak password buri someth tomb close tomb encrypt key materi gnupg key time secur wipe password encrypt origin key materi open tomb use gnupg password protect key issu come sinc tomb ask tomb password fact anyth enter point sinc origin password gone second window pop ask gnupg key password contain mount check secret file want someth cool minu littl annoy extra password prompt setup work nice cryptostick gnupg drive hold gnupg decrypt key instead store pc provid extra level secur allow simpler pin code use unlock cryptostick decrypt tom contain key master materi fals attempt cryptostick lock,wow nice cryptostick gnupg easi see distinguish refer file extens key file end password process left entir gnupg pleas try time pass regress test one manual test case implement file extens approach distinct done load key honor ask key password sweet give try report experi sun dec pm jaromil notificationswrot pleas try gnupg deleg time pass regress test one manual test case implement file extens approach distinct done load key honor ask key password repli email directli view github well tri branch still got prompt first tomb password sudo one enter dummi valu get real gnupg password prompt furthermor think decid implement releas dedic switch base upon extens mislead user case yes inde see meaningless password prompt pop yes right better switch explicit easier document manual give anoth go soon look good add code eventu remov execut flow test yet wonder though work test postpon one releas sinc test enough yet still adopt flag instead file extens discuss still ask fake password prompt go past blank return work expect rest assur featur go master point howev meanwhil anyon use branch welcom report experi observ fix work annoy nuisanc hi plan featur land master plan place due lack time progress yet pull request welcom correct current behaviour adopt flag instead extens possibl requir blank return hi know month year hope pull request still welcom featur see pull request definit still open especi consid size detail contribut obvious put lot time attent thank allow bit time review integr test suit certainli help speed use old branch project certainli opinion plu good account sinc start issu believ use featur cours take time review hesit ask detail chang solv pull req,8,51,password|gnupg|encrypt|crypt|protect|security|delegation|integrity,440,0.1159090909090909,0.21129363775253296
2897,https://api.github.com/repos/quicwg/base-drafts/issues/2897,issue,dcid len descript updat draft ietf quic transport,descript dcid len draft ietf quic transport updat,fix editor,2,4,scripting|transport,19,0.21052631578947367,0.21093514561653137
133,https://api.github.com/repos/speed47/spectre-meltdown-checker/issues/133,issue,origin spectr cpu exploit still work although detect vulner,still succeed albeit sv sv detect vulner thank fse,take spectr poc process attack e attack code victim data process mitig check mitig userspac kernel cross process userspac attack e g web browser need separ spectr mitig check relev excel idea spectr meltdown checker clearli state check cpu system still process spectr vulner check old amd architectur spectr poc tool inde vulner process spectr scenario read pleas note spectr vulner softwar possibl exploit tool verifi kernel core system use proper protect place verifi softwar scope tool gener measur ensur alway date stabl version softwar especi expos world network daemon browser advertis bottom script run import read least mitig check spectr meltdown checker mitig userspac kernel cross process userspac attack interest info thank share current tool show variant use chromium chrome flag enabl site per process enabl chrome flag share array buffer disabl mean safe run javascript web browser poc tool test thoroughli current brows web js complet block enabl temporarili dedic privat mode tab without tab program open clipboard content clear invent simul singl task tri reduc exposur possibl vulner reli process abl read content ram simpli content though idea effici meaning sure process run linux system background expert say anoth question plan possibl process mitig,6,16,exploit|vulnerability|attack|protect|scripting|safe,216,0.07407407407407407,0.20981821417808533
746,https://api.github.com/repos/drwetter/testssl.sh/issues/746,issue,gener openssl rfc mapp html etc cipher map txt,repositori dev branch follow file overlap extent term data provid openssl rfc mapp html etc cipher map txt etc map txt differ cipher map txt appear complet updat one map txt remov addit html file auto gener kept sync cipher map file think clean thing,map txt remov done thx differ stabl branch refer addit html file auto gener kept sync cipher map file probabl best long format html header stay good opportun saniti check whether miss th root everyth,3,8,openssl|cipher|sanitise,90,0.08888888888888889,0.2097405195236206
1090,https://api.github.com/repos/quicwg/base-drafts/issues/1090,pr,mitig amplif attack handshak,lift build attempt mitig potenti amplif attack find server larg certif spoof sourc address use server handshak gener traffic limit server send three handshak packet unvalid sourc address suggest way valid retri packet path challeng fix,,4,6,attack|certificate|spoof|validate,41,0.14634146341463414,0.20861877501010895
55,https://api.github.com/repos/rockymadden/slack-cli/issues/55,issue,add support get token password manag,hey want send messag slack programmat script seem job nice thank see store slack api token secur though instead leav plaintext disk gener job dotfil ad support slack cli token cmd environ contain command print token standard output interest pr support password manag yes seem reason basi one,look reason thank idea hesit thu far think attack vector open consid unreason thought prior art git credenti cach secur expert good answer top head type bit see anyth use come popul env variabl file world group readabl local user see command fetch slack cli token howev slack cli work local user see slack token directli sinc token store plain text chew guess command specifi token directli wind bash command histori one attack vector heard thought happen give fals sens secur one worst thing wrong safe store secret valu bash variabl believ variabl export os protect appli process memori appli reason safe said secur expert reason correct anyon root privileg linux machin look proc mem go dig suppos trust otherwis environ variabl reason secur fail plenti thing fail bash command histori handl file permiss slack file someon look home directori read file read histori curl end histori histori command run prompt good well mimic git solid git config let specifi program run credenti need program take known paramet return password stdout git read via pipe leak given comment think fine describ git done realli busi right move weekend pr right comfort chang made dotfil link feel free go ahead commit patch,10,19,password|scripting|security|attack vector|credential|safe|protect|privilege|trust|leak,256,0.07421875,0.20856474339962006
358,https://api.github.com/repos/pivpn/pivpn/issues/358,issue,multipl concurr connect reus certif authent intent,pivpn issu templat consol output consol output consol output issu default server config contain line allow multipl client connect server reus certif across devic script line condit check user attempt add new certif name alreadi anoth certif script allow multipl certif share common name lead believ multipl concurr connect abl certif authent correct assumpt behavior intent see two option keep option thu allow multipl devic connect use certif mean pivpn server administr gener one ovpn file devic connect reduc amount work gener certif devic certif ovpn file get compromis admin revok certif need provis devic remov option thu allow one devic connect use specif certif given time connect devic disconnect soon new connect made use client certif admin gener certif devic wish let connect use easi autom case certif ovpn file compromis admin revok singl certif provis affect devic leav devic intact high volum deploy option one favor eas option two provid fine grain control take longer case low amount client devic either option easi option two still secur think,server fault provid use insight,4,20,certificate|authentication|scripting|security,183,0.1092896174863388,0.20821911096572876
46,https://api.github.com/repos/WebBluetoothCG/web-bluetooth/issues/46,issue,investig malici devic becom trust keyboard mice,usb devic trust keyboard mice default lead well known exploit vulner current oper system attack bluetooth exampl pair devic look fitbit expos hid keyboard servic os trust keyboard without warn pair devic add keyboard servic later os trust new keyboard relev project assum devic vulner gatt write way let attack compromis firmwar add new servic,linux system trust keyboard suspect os x window realli well defin notion intent deal bluetooth devic pair devic ui intend devic keyboard app intend app subsequ addit app system devic technolog problem ad servic whitelist devic databas trivial ux one keyboard mice implement standard hogp almost filter list discov servic os ios android ua applic actual handl pair devic linux devic mark trust default right control per servic,6,13,malicious|trust|exploit|vulnerability|attack|whitelist,131,0.09923664122137404,0.20728732645511627
2206,https://api.github.com/repos/quicwg/base-drafts/issues/2206,issue,rto pto transport,retransmitt timeout rto defin quic recoveri recommend rto interv defin quic recoveri drain state packet arriv peer timeout within rto,minimum path valid timout suggest initi timeout kinitiartt ms make design issu,3,3,transport|validate|signing,36,0.08333333333333333,0.20724545419216156
36,https://api.github.com/repos/tomav/docker-mailserver/issues/36,issue,password encrypt,wan know hard encrypt password file case user access git project,probabl talk possibl add third col file specifi current encod modifi someth condit use new valu encod alreadi encod good idea want submit pr integr test help need happi merg line first easi manag second know right check alreadi encrypt password ok thank short explain look make implement discrib said mind decod encod function doesm seen secur enough fork edit custom sasl password modifi unfortun c programm done use non alter softwar think close issu keep mind need case,6,14,password|encrypt|encode|integrity|decode|security,93,0.15053763440860216,0.20717692375183105
11,https://api.github.com/repos/multiformats/multihash/issues/11,issue,sha keccak variant clarif,one sha multihash list size cannot use infer type sha use truncat bit sha truncat bit snippet mar nist document,right punt implement support thank pr address,2,5,sha|hash,32,0.15625,0.20599022507667542
352,https://api.github.com/repos/kylemanna/docker-openvpn/issues/352,pr,add openldap client imag,script verifi ldap script need instal present contain fabul full blown ldap support nice well hand low key solut work,point view make sens extend imag instal requir librari understand usecas everyon differ case extend simpl option tag push repositori assum one docker compos hi found thread search openvpn ldap agre extend imag certainli easi maintain time task duplic task think core plu includ activ pertin environ variabl use good compromis core plugin growth becom problem slim version imag seem standard practic docker thou case think mani plugin includ imag deliv cd ci process share script use ldap integr need well owner repositori decis elabor feel free open pr try get merg oh longer basic ldap search command bind dn user rememb found pr saw still open oh pr wow look phone think repositori realli maintain right idea said punch comment appar leas one person watch prs total dead aug um uhr schrieb marvin wichmann notificationsoh pr wow look phone think repositori realli maintain right receiv author thread repli email directli view github mute thread,4,11,ldap|scripting|integrity|authorise,180,0.06111111111111111,0.2049785554409027
60,https://api.github.com/repos/elasticdog/transcrypt/issues/60,pr,fix warn improv encrypt,fix fix fix ware import default password power md chang sha improv encrypt sha stronger md mayb incompat last version simpli test work well,backward incompat import iter option openssl realli recommend suggest new project write transcrypt version git transcrypt version exist correct new function els old function secur import user project hack technolog develop think necessarili improv encrypt strength project project care project encrypt definit agre modern algorithm increas secur figur proper migrat path whether mean ad version check script someth els said decis want rush definit agre modern algorithm increas secur figur proper migrat path whether mean ad version check script someth els said decis want rush yeah agre need rush,8,16,encrypt|crypt|password|sha|openssl|security|hack|scripting,118,0.13559322033898305,0.20475943386554718
1585,https://api.github.com/repos/rust-lang/rfcs/issues/1585,issue,asn decod encod,hi use abstract syntax notat decod encod librari modul none exist help write lot low level stuff snmp stack mib parser,reason part standard librari mayb ask serd team close favor,2,4,decode|encode,35,0.11428571428571428,0.20472858846187592
2941,https://api.github.com/repos/spinnaker/spinnaker/issues/2941,issue,support password command docker registri authent,propos solut take care authent ecr base registri registri odd authent method configur exampl decis point want support registri weird method get docker password want introduc aws depend docker provid password read memori need test possibl race condit previou credenti expir refresh deploy implement agent similar cleanupalarmag clouddriv aws iter docker account passwordcommand specifi run command given millisecond interv need run instanti docker account need confirm agent implement accomplish look discuss work improv overal idea thank,cc recommend explicit millisecond lean toward use second place millsecond sinc later bit granular applic,4,9,password|authentication|race condition|credential,98,0.09183673469387756,0.20401398837566376
319,https://api.github.com/repos/OWASP/owasp-mstg/issues/319,issue,x develop exist content ios encrypt data protect,look todo develop section ios code sign encrypt mean fairplay encrypt code decrypt devic associ account todo specif,,4,6,encrypt|crypt|protect|signing,27,0.2222222222222222,0.203485369682312
138,https://api.github.com/repos/pivpn/pivpn/issues/138,issue,ad addit layer encrypt stunnel obfsproxi,hi everyon pivpn instal rpi work perfectli far thank everyon effort make work add addit layer encrypt ssl order wrap traffic howev sure someon help guid differ stunnel obfsproxi thank,traffic alreadi encrypt openvpn safe unless chose bit encrypt alreadi setup secur featur default prevent brute forc attemt dos use modern cryptographi enforc key negoti client imperson server easili revok certif suspect breach still paranoid choos key gener dh paramet still want check post commun obfsproxi obfusc openvpn traffic,9,13,encrypt|crypt|tunnelling|ssl|safe|security|certificate|breach|obfuscate,86,0.1511627906976744,0.2034759521484375
1,https://api.github.com/repos/elasticdog/transcrypt/issues/1,pr,fix plaintext inform leak,chang salt file hmac content key filenam password instead plain hash content pre chang attack make guess file content confirm high probabl check see whether salt match concern case config file almost everyth known exampl everyth excpet password known chang prevent attack see content two encrypt file still secur issu commit chang version number try maintain compat older repo,appreci look code make lot sens test merg later tonight probabl point unsur safest ensur file deterministiclli encrypt best knowledg total safe base secur properti hmac name privaci preserv note use hmac prf rather mac better sure much hmac hmac password filenam file content chang code alreadi tediou thank ton contribut inform updat document merg chang sinc repo day old pre touch version number either follow semant try better manag hope mani backward incompat chang,10,21,leak|salt|hmac|password|hash|attack|encrypt|security|safe|privacy,139,0.1510791366906475,0.20324909687042236
290,https://api.github.com/repos/nextcloud/nextcloud-snap/issues/290,issue,high sever vulner php x multipl vulner,hi new vulner discov nessu synopsi version php run remot web server affect multipl vulner descript accord banner version php run remot web server x prior therefor affect follow vulner memori alloc issu exist zend string extend function file zend zend string h concaten string due failur prevent chang string object result neg length unauthent remot attack exploit caus denial servic condit possibl unspecifi impact cve memori alloc issu exist zval ptr dtor function zend zend variabl h alloc larg amount memori unauthent remot attack exploit via craft oper array data structur caus denial servic condit cve solut upgrad php version later see plugin output,argh realiz contain scan got bit mean scan give real result believ miss thank check hi kyle thank quick fix love opensourc,7,15,vulnerability|nessus|scripting|authentication|attack|exploit|cve,135,0.1111111111111111,0.20277146995067596
2150,https://api.github.com/repos/quicwg/base-drafts/issues/2150,issue,data retri safe,data cannot retri safe,someth quic know http though advic think need much expans happi take pr sure http issu unlik tls quic data sent encrypt side effect thu dec pm martin thomson wrote someth quic know http though advic think need much expans happi take pr receiv author thread repli email directli view github mute thread,4,5,safe|tls|encrypt|authorise,61,0.08196721311475409,0.20245499908924103
336,https://api.github.com/repos/acmesh-official/acme.sh/issues/336,issue,dns api password special charact,made custom dns api script problem save password special charact name problem occur dns api script simpl pr fix charact introduc problem know edg case sign quit popular password opt case allow play around work charact save singl doubl singl doubl singl quot need escap properli goe far think,think pr good use singl quot better doubl quota need time test merg code edg case password contain singl quota forget mani complain let come back case anoth workaround api file base encod password use base decod renew thank base idea brilliant merg,6,11,password|scripting|signing|forge|encode|decode,98,0.11224489795918367,0.20221389830112457
31,https://api.github.com/repos/elasticdog/transcrypt/issues/31,issue,avoid accident commit unencrypt file,gitup client os x discov execut attribut filter care someon els use gitup care easi stage commit encrypt file gitup transcrypt automat configur pre post commit pre push hook ensur file encrypt alway encrypt,quit sure work even automat creat client side hook test file encrypt clean filter naiv test encrypt file case hold empti file encrypt fals posit try encrypt alreadi encrypt file familiar intern work gitup look run hook odd interact hook try shell normal git transcrypt command order check attribut give bit think switch away git secret avoid accident commit unencrypt file problem gpg pain diff commit histori etc think switch back still worri easi accident commit unencrypt sensit data wrong git client idea abl minimis risk seem server side hook github tell everyon manual setup local hook probabl ineffect tell peopl care use gitup possibl transcrypt less transpar mode oper store encrypt version file add unencrypt file ensur never accident commit ok manual run command e g encrypt decrypt file propos mode oper still defin pattern match file somewher done within file transcrypt manag file understand make thing safer alreadi defin pattern match file want encrypt trust user support client ignor attribut filter assum built git pattern match mechan use say transcrypt mode allow manual creation file ad origin plaintext file file somewhat orthogon transpar natur transcrypt current oper think much error prone origin write transcrypt first place observ multipl team develop reli upon manual encrypt decrypt file within repositori use vari non safe practic command manual check transpar natur encrypt make much easier openssl wrapper script check repositori reli user exercis properli add safeti want someth tandem familiar former project cursori glanc seem work togeth prevent issu user use client support attribut filter although sure good workaround requir everyon configur local hook yes suppos request orthogon purpos transcrypt transpar encrypt transcrypt work excel sure safe easi git client execut git attribut filter accident commit unencrypt file contain sensit data enough transcrypt automat configur local post commit pre push hook verifi file cover filter actual encrypt user need configur new repo clone transcrypt regardless client client support git attribut work transpar support git attribut least hook prevent accident commit unencrypt sensit data thought look modifi transcrypt includ addit header encrypt version file indic fact encrypt pre commit hook verifi header exist strip header decrypt pr accept nice idea custom header encrypt version file much nicer solut reliabl tri auto detect encrypt downsid break decrypt standard tool huge burden switch plu caveat document readm definit open pr take approach manag pre commit hook pull fork version add pre commit hook script abort commit transcrypt manag file encrypt index base simplist check salt b prefix raw content time write prototyp follow find hook problemat problem free new pre commit hook perform safeti check merg branch includ next releas,7,53,encrypt|crypt|safe|trust|openssl|scripting|salt,476,0.11134453781512606,0.20105737447738647
1174,https://api.github.com/repos/OWASP/owasp-mstg/issues/1174,issue,updat oauth nativ app,enhanc oauth recommend base evalu follow rfc,hello statu follow add pkce engulf issu rfc updat mention mainli discuss nativ app discuss mostli nativ app client discuss bit normal nativ app client import note pkce remov risk someon snif author code link author code secret mobil app know thu make uniqu whoever know secret kind salt believ much build full platform test pretti much obviou go describ intent filter abus infer risk look iff nativ app client middl point server pkce help leak somehow delv love thought see done work yet multipl thing came higher prioriti want inde describ describ easili build anoth app snif intent though often static review enough tool abl play around intent filter well catch preconfigur know name anymor hmmm issu shall handl technic knowledg handl intent catcher app say updat issu bit say new comer see alreadi assign cool let tackl go work oauth sheet good part nativ client,6,10,oauth|snif|authorise|salt|leak|signing,159,0.06289308176100629,0.20081409811973572
289,https://api.github.com/repos/debops/debops/issues/289,pr,add secret salt encod decod python compat,origin version seem work python throw error unicod object must encod hash propos chang cure problem work python python salt get base encod process requir check regard potenti secur issu cannot judg implic,,5,8,salt|encode|decode|hash|security,41,0.1951219512195122,0.20074161887168884
104,https://api.github.com/repos/DP-3T/documents/issues/104,issue,bluetooth vulner cve,estim estim phone patch cve vuln phone broadcast temporari bt mac address addit ephemer id open remot attack within proxim silent execut arbitrari code privileg bluetooth daemon long bluetooth enabl user interact requir bluetooth mac address target devic known,link expoit code,4,5,vulnerability|cve|attack|privilege,46,0.10869565217391304,0.20019401609897614
288,https://api.github.com/repos/sameersbn/docker-gitlab/issues/288,pr,long gpg key ids secur,avoid possibl flaw duplic manipul key postgr key fine get download via,although merg pr specifi full key realli make differ secur wise serious think make differ whatsoev well someon tri mitm attack keyserv http verifi ca certif bundl short gpg ids fake easili,4,5,security|mitm|attack|certificate,50,0.1,0.19906674325466156
290,https://api.github.com/repos/DP-3T/documents/issues/290,issue,certif pin corpor phone,hi look ios app implement sort certif pin interact www pt bfs admin ch www pt bfs admin ch www pt bfs admin ch poor experi read mobil app code allow understand whether pin occur tls connect establish later stage app authent materi sent backend opinion qualifi pin one true believ expect non neglig number user instal app corpor provid mobil phone mani devic configur channel http commun corpor proxi perform tls inspect app react environ give option user stop commun assum user encount user b user b report infect user keep phone connect compani vpn sever day app still abl catch notif receiv day earlier thank,hi interest question essenc downstream data simpli need sign need confidenti tls someth softwar updat instead http signatur upload bit differ want insecur http transmiss probabl employ proxi mitm ing traffic perform upload suspect prototyp requir tls connect correct pin work corpor phone block tls connect decrypt honestli specul answer question thank wonder enterpris still mitm tls connect certif pin pretti wide spread nowerday guess thse mitm scenari small percentag pin implement secur choic,10,19,certificate|tls|authentication|signing|confidential|signature|insecure|security|mitm|crypt,186,0.10215053763440861,0.19849102199077606
1660,https://api.github.com/repos/termux/termux-packages/issues/1660,issue,program link libcrypto debug gdb arm,notic look consid empti c program compil give program output follow gdb problem aarch issu upstream libcrypto guess give,actual problem raspberri pi must upstream issu right design openssl openssl adapt processor execut reason queri capabl unfortun processor achiev non privileg code attempt instruct caus illeg instruct except initi procedur code handl except manipul correspond bit capabl vector normal appear transpar except execut debugg stop prior deliv signal handler simpli resum execut trick debug lot feel counterproduct two option either explicit capabl environ variabl order bypass capabl queri see correspond crypto cap c detail configur debugg stop upon sigil except e g gdb case add handl sigil nostop gdbinit interest thank sidenot actual debug,5,9,crypt|signing|openssl|privilege|bypass,121,0.0743801652892562,0.19788897037506104
363,https://api.github.com/repos/osresearch/heads/issues/363,pr,creat nest menu add option rehash sign boot,number option want menu start larg enough worth slim thing main menu move option nest menu along nest menu chang option sign hash file boot directli menu,merg chang address sign failur case bit grace instead die let know error return main menu drop recoveri shell want look depend independ chang chang far use standard whiptail packag fbwhiptail drop replac far test use standard newt base whiptail,2,5,hash|signing,76,0.06578947368421052,0.19730286300182343
3786,https://api.github.com/repos/quicwg/base-drafts/issues/3786,pr,packet integr protect,let leav probabilist practic uncertainti packet protect chang header section header subsect specif header one packet whole,,2,3,integrity|protect,21,0.14285714285714285,0.1970539093017578
574,https://api.github.com/repos/rust-lang-nursery/rust-cookbook/issues/574,pr,fix issu hmac exampl,fix issu question concern section pass test cargo test run fine local rust playground mdbook serv localhost appear test refer older version ring crate version ring cargo test call,great want updat cargo toml file use cookbook cargo toml file updat cargo toml well look break due ring digest sha sha digestrustc explain e seem sha deprec ought highlight sha let know comfort need help gave shot still see one error seem unrel chang yeah fix edit updat probabl separ look chore thank,3,6,hmac|sha|trust,88,0.06818181818181818,0.1969233751296997
1225,https://api.github.com/repos/OWASP/owasp-mstg/issues/1225,pr,fix typo improv consist cryptographi document,thank creat awesom resourc chang situat situat difficult determin origin input difficult determin origin input cryptograph secur random number gener cryptograph secur random number gener bit block bit block,thank lot fix thank fix,2,5,crypt|security,41,0.12195121951219512,0.19637945294380188
136,https://api.github.com/repos/m-ab-s/media-autobuild_suite/issues/136,issue,add aac v encod non free compil,detail,non free fdk aac alreadi support aac v probabl higher qualiti appar libaacplu conflict encod insid ffmpeg reason particular includ libaacplu besid yet anoth aac encod unless make pr made sure work well ffmpeg mplayer mpv bit realli care ad anoth old aac encod mayb right nevermind forgot argument bad,2,5,encode|forge,59,0.0847457627118644,0.19628185033798218
105,https://api.github.com/repos/VSCodium/vscodium/issues/105,issue,add hash digest,possibl add hash digest releas packag sha sum,hi digest live note associ releas hi digest live note associ releas least perfectli fine assum releas note control write access outsid assum chang requir pr github realeas prefer file build produc build script step travi file along file sound easi enough implement,3,4,hash|sha|scripting,55,0.07272727272727272,0.19367940723896027
100,https://api.github.com/repos/CISOfy/lynis/issues/100,pr,featur ssh refactor,decid implement modifi ssh simpl function combin mani ssh option move test ssh ad mani other implement previous,aha yeah look better wait address add coupl goodi try improv ssh type test see sometim need test try unifi third paramet ad thank refactor look good start thought one thing keep eye except option valu yes weak configur unless option b strengthen option kind give exampl situat mean right yes inde combin thing combin weaken strengthen configur public key authent,3,7,ssh|public key|authentication,83,0.08433734939759036,0.1936219334602356
114,https://api.github.com/repos/Gazler/githug/issues/114,issue,level accept correct hash long least charact,current enter exact charact make sens prompt say howev feel accept first charact teach anyth got correct hash success complet level,level leav open level check hash use forgiv solut,2,4,hash|forge,38,0.10526315789473684,0.19178329408168793
1231,https://api.github.com/repos/StreisandEffect/streisand/issues/1231,pr,gpg signatur verif overhaul gpg hkp gpgv,commit revamp streisand gpg signatur valid gpg key manag prior commit mix bake gpg key place playbook expect fetch key keyserv commit central playbook use keyr known good key kept date overal approach secur hope lot less flaki end user experienc flaki keyserv error part revamp switch use actual signatur valid tool specif design contain lot less function base binari one handi thing assum key provid keyr ultim trust contrast use verifi signatur either whole danc key interact annoy workabl code prepar abl sign content provid option secur commun fileshar streisand maintain streisand user revamp add activ maintain gpg key streisand keyr ward potenti suspicion streisand keyr separ system keyr use verifi apt packag connect gpg public key system ssh access old code thing think downsid renam signatur file expect extens glob input binari meant one project run valid project signatur download dir e g use full fledg binari valid signatur softwar bake key repo keyserv search failur meant failur valid signatur provis error key import repo keyserv search mark trust signatur valid warn key trust key id match good signatur match check verifi output potenti spoof attack control content gpg key e g uid string default key search timeout pretti low key search done plaintext http non standard port seem flaki practic base user bug report new code highlight use gpg instead gpg modern build standalon keyr streisand clean set gpg fetch key http hkp hkp keyserv net privaci increas key fetch timeout reliabl set cronjob refresh streisand keyr period date pre initi keyr known good key repo resili signatur verif done instead secur verif use exact filenam path instead glob secur key id enforc strict chanc match key id uid field secur duplic download verif code playbook replac usag tidi mayb stuff forget follow gpg key import streisand keyr left key temporarili seem mysteri break ci work test real host confus question piec respect softwar pin specif key id keyr verifi releas openvpn openconnect putti stunnel libreswan safe refer key short id prefix strictli use prepopul separ gpg keyr search keyserv initi import resolv,favor gpg work think one reason make sens bare ubuntu particularli good reason given much softwar depend gpgv work gpgv sure understand question work capac verifi gpg signatur keyr handl differ basic everyth signatur verif remov think one reason gpgv make sens bare ubuntu particularli good reason given much softwar depend ensur instal alongsid bare ubuntu imag got look keyr differ gpg gpg long time use frontend abl drum review feel confid shape pr run nice ci good result test instanc think pretti straight win exist code go hit merg button keep eye issu crop thank,13,37,signing|signature|validate|security|trust|public key|ssh|spoof|attack|privacy|forge|tunnelling|safe,450,0.08222222222222222,0.19166961312294006
82,https://api.github.com/repos/megastep/makeself/issues/82,issue,invalid charact eula text prevent usaf licens option,got case licens option work invalid incompat charact eula document,text filenam text includ odd quot charact rememb although find want prevent assign content variabl though simpl enough solut encod compress encod base content use without modif ran well copi licens file includ makeself seem alreadi fix master,3,5,validate|signing|encode,57,0.08771929824561403,0.1916343718767166
1094,https://api.github.com/repos/debops/debops/issues/1094,pr,debop owncloud limit ldap password charact,patch specifi charact use nextcloud ldap password string fix error password begin interpret occ script option fix,current string quot inde result someth variabl exampl expand shell think chang quot solv shell level command execut ansibl modul give addit protect right think chang quot solv shell level oh yes shell interpret stuff insid insid thu escap hinder special char glob expans ok switch,4,7,ldap|password|scripting|protect,70,0.1,0.1908721774816513
1869,https://api.github.com/repos/quicwg/base-drafts/issues/1869,pr,improv descript max ack delay transport paramet,sentenc replac awkward bit unsign integ valu indic maximum amount time millisecond delay send acknowledg integ valu integ valu delay send acknowledg,need manual merg big reorg,3,3,scripting|transport|signing,35,0.08571428571428572,0.19051091372966766
205,https://api.github.com/repos/tomav/docker-mailserver/issues/205,issue,stronger password hash algorithm,propos sha sha exampl order protect user password better case databas leak avail algorithm,md sh clearli broken term collis resist ron rivest good idea advic regard recommend algorithm good idea current use ssha ok ok adapt doc test file wip fix,6,9,password|hash|sha|protect|leak|availability,47,0.19148936170212766,0.19001878798007965
4665,https://api.github.com/repos/spinnaker/spinnaker/issues/4665,issue,halyard validatingfiledecrypt read binari file properli,start read file valid via function file use read via load string end read non encrypt file read file via equival read file bytewis via file binari file jks saml reproduct probabl reproduc binari file pars byte equival manner whatev encod ioutil tostr use exact step use reproduc issu gen jks file keystor try enabl saml problem default secur authn saml error keystor valid problem invalid keystor format confirm execut follow test program output ioutil c b c eab bccb da def ce bc bb fc raw byte cc c b f e bfebf b cb c b e e f show two represent file equival furthermor tri read jks halyard atm fail read work,want confirm face equal issu halyard take look case eager refactor tri encapsul file read logic probabl reproduc binari file pars byte equival manner whatev encod ioutil tostr use valid read extern file byte valid expect extern file contain text return fact need byte mask bit previou code use read valu byte string broken similar manner anyon tri retriev keystor fix work,6,14,validate|crypt|encrypt|saml|encode|security,184,0.07608695652173914,0.18988364934921265
3449,https://api.github.com/repos/quicwg/base-drafts/issues/3449,pr,revert remov ignor loss undecrypt packet,revert quicwg base draft think text need clarif reason remov incorrect reason packet end declar lost due time key avail peer drop packet cannot decrypt immedi packet fact lost peer network sorri churn,interest first time use revert manual revert guess,2,3,crypt|availability,48,0.0625,0.1894841492176056
169,https://api.github.com/repos/msys2/MSYS2-packages/issues/169,issue,anti viru flag gspawn win helper exe adwar,run pacman syu anti viru program f secur quarantin gspawn win helper exe gen variant adwar smshoax assum fals posit,report f secur fals tag past investig fix fals report email bitdefend f secur presum signatur base system light bit adwar coupl recent ish version glib packag virustot report report packag contain evid scanner unpack brought attent version continu investig much let see persuad say anyth content starter sure mean hmm exe question need libwinpthread link runtim guess malwr anyth dll present think stuff zipfil cobbl togeth initi attempt produc error analysi fail packag modul packag zip start function rais error unabl execut initi process analysi abort neutral face gut feel probabl fals posit gut feel opinion viru scan industri much lower fear monger cash cpu cycl environment damag littl plu seen detect code conced need fulli reproduc build anyth concret,4,11,virus|adware|security|signature,150,0.07333333333333333,0.1888965666294098
1395,https://api.github.com/repos/quicwg/base-drafts/issues/1395,issue,quic transport paramet code point,turn three squat tls extensiontyp valu move,let go fulli experiment xffa drawn dev urandom pr inbound note zero chanc actual collis practic make tls stack unnecessarili tricki,2,3,transport|tls,34,0.08823529411764706,0.1888890564441681
1438,https://api.github.com/repos/m-ab-s/media-autobuild_suite/issues/1438,pr,wget check hash download,check hash file present attempt download copi save time circumst descript option fix issuenumb,string variabl anyth still evalu n stuff expand n stuff tue oct christoph degawa wrote comment pull request build media suit helper sh wget notmodifi f archiv curlcmd z archiv r hash tri f archiv hash check hash archiv hash omit express default fals n string length string nonzero string equival n string test manpag receiv comment repli email directli view github unsubscrib seem attempt reevalu,2,7,hash|scripting,85,0.08235294117647059,0.1883063018321991
353,https://api.github.com/repos/CrunchyData/crunchy-containers/issues/353,issue,exposur sensit inform due talk script,script current print execut command case postgr initi see lead exposur sensit inform applic logfil necessari password user config critic use central log tool elk differ parti abl access propos make talk set configur e g env,thank implement good close awesom thank,3,5,sensitive information|scripting|password,50,0.1,0.18743881583213806
5,https://api.github.com/repos/OpenVPN/easy-rsa/issues/5,pr,add support use pkc smartcard token contain root ca sign certif,pull request add full support creat use pkc smart card token load root ca sign certif use token instead use file sign certif huge secur advantag unauthoris copi privat key imposs store smart card token need opensc new featur support pkc smartcard token pkc initca build root ca insid pkc token author bit certif softwar automat trust ca token advantag privat key ca never copi stolen disadvantag break token lost ca pkc loadca load exist root ca priv pub crt key directori pkc token pkc tokenca combin clientnam build new client certif sign ca store ca token server build new server certif sign ca store ca token sign sign exist csr ca store ca token inter build intermedi ca sign ca store ca token pkc gener certif pkc token sign ca store ca token ask swap token client server token ca token insert figur one live slot enter paramet misc case wrong pin code enter smart card reader readi yet show error ask retri test test feitian scr scr smartcard rader epass token cheer wessel,review patch repli back go close releas pleas look code desir port chang new featur belong new codebas,7,22,signing|certificate|security|authorise|unauthorise|private key|trust,205,0.1073170731707317,0.1874038279056549
70,https://api.github.com/repos/fritz-smh/yi-hack/issues/70,issue,real time video stream encrypt,hello encrypt decrypt rtsp stream camera camera viewer client side mean look prefer open sourc librari program encrypt video real time secur purpos side camera client viewer pleas tell found approach know implement,vpning webcam localnetwork rtsp server bundl yi cam open expos firewal,4,6,encrypt|crypt|security|firewall,50,0.12,0.18705134093761444
163,https://api.github.com/repos/samtap/fang-hacks/issues/163,issue,rtsp softwar encod hardwar,hi camera still get quit warm notic tinycam stream softwar encod read h sw fps kb obvious frame rate data rate keep chang maximum fps thank advanc,tinycam chang set hardwar decod,2,3,encode|decode,37,0.08108108108108109,0.18630048632621765
799,https://api.github.com/repos/quicwg/base-drafts/issues/799,issue,draft ietf quic tls broken refer quic transport section,section document,,2,2,tls|transport,12,0.16666666666666666,0.18570709228515625
160,https://api.github.com/repos/zendesk/helm-secrets/issues/160,issue,secret decrypt tmpf,current behavior write decrypt form secret file directori contain sop encrypt version mean sensit data hit filesystem plaintext depend environ mean secret hit underli storag clear properli encrypt best practic secret decrypt tmpf default bar possibl overrid target directori decrypt secret,duplic least address concern,2,6,crypt|encrypt,49,0.12244897959183673,0.18553979694843292
1251,https://api.github.com/repos/EliasKotlyar/Xiaomi-Dafang-Hacks/issues/1251,pr,allow motion record protect rtsp link,ad rtsp config var usernam pass record section script allow protect rtsp record assum usernam password one previous record assum authent local rtsp still requir authent ad rtsp config var port allow user desir port rtsp ui rather hard code,thank welcom realli appreci activ commun respons owner glad contribut littl part,5,8,protect|username|scripting|password|authentication,59,0.13559322033898305,0.18532991409301758
52,https://api.github.com/repos/aws/containers-roadmap/issues/52,issue,ecr custom master key kms cmk encrypt data,mani aws servic aws kms support encrypt data featur custom master key cmk account protect data ecr store,news avail pleas updat caus larg enterpris custom lot grief,3,4,encrypt|protect|availability,37,0.10810810810810811,0.18525618314743042
138,https://api.github.com/repos/OpenVPN/easy-rsa/issues/138,issue,incorrect invoc openssl rand,notic follow error messag recent rand help summari inde seem call openssl rand use incorrect paramet order openssl f check whether chang point upstream openssl whether alway case anyway paramet order chang byte serial number bbe fd adf fec dfeac probabl intend get serial number probabl lucki coincid random note error warn log idea whether harmless mayb anoth bug,first issu look bug log entri harmless tri look serial alreadi issu none file exist yet nice upstream suppress error scenario oh well easi rsa current support openssl x openssl addit version check caus sort problem go sit wait thing settl test openssl f one actual accept version fine test well merg pull request thank patch,2,8,openssl|rsa,120,0.06666666666666667,0.183852881193161
25,https://api.github.com/repos/cnabio/cnab-spec/issues/25,pr,differenti sign unsign bundl digest requir,unsign bundl primarili use develop avoid friction tight dev debug loop digest field option digest contain imag thin bundl valid local match digest refer imag manifest registri pr make explicit thin bundl contain imag digest valid client side actual use creat immut refer registri imag second part import work share bundl trough imag registri need refer imag bundl trough digest refer ensur immut protect us delet referenc imag sign simon ferquel,good merg work get cla bot activ repositori pleas hold pr complet sure pleas ping us run cla bot run,3,7,signing|validate|protect,98,0.07142857142857142,0.1838347166776657
211,https://api.github.com/repos/megastep/makeself/issues/211,issue,paramet block unsign binari,hi wonder alreadi paramet check binari sign known key target server fail exit someth sha pleas advis thank advanc,sure exactli mean yeah default intern binari checksum store check uncorrupt realiz thing real signatur store least crc md checksum sha option argument purpos incident sorri clear binari built corpor digit signatur makeself tool build self extract binari current binari trigger first thing check sha sum binari thank sha flag howev per org wide complianc guidelin suffic execut binari need verifi proper signatur confirm origin softwar light wonder alreadi paramet viz gpg verifi thank advanc actual basic gpg support right argument abl want think current use encrypt instead compress mayb work purpos figur altern use openssl command close thread thank kind support share solut regard,7,15,signing|sha|checksum|signature|crc|encrypt|openssl,129,0.11627906976744186,0.18355269730091095
19,https://api.github.com/repos/angristan/openvpn-install/issues/19,pr,improv openssl speed,hi found make openssl key gener faster accord post stackexchang linux diffi hellman paramet still calcul hour inform secur stack make differ regard secur,want faster dh key gener pleas bit key,3,5,openssl|diffie hellman|security,36,0.1388888888888889,0.18309777975082397
88,https://api.github.com/repos/KrumpetPirate/AAXtoMP3/issues/88,pr,add altern method authent code,link rainbowcrack plugin let recov audibl activ data activ byte offlin,specif add project due offlin rainbow tabl crack want avoid possibl suggest aaxtomp use remov drm unlaw obtain audibl book user look project seem good one want link make sens anyon find issu found tabl easier order activ code audibl activ,3,4,authentication|crack|rainbow table,58,0.06896551724137931,0.1829584836959839
154,https://api.github.com/repos/postmarketOS/pmbootstrap/issues/154,issue,better handl checksum error,relat current someon start pmbootstrap need dig log find checksum fail better clear error messag directli pmbootstrap log even automat checksum local file otherwis secur issu,yea one idea support flow file origin checksum verifi download assum chang point intent auto checkum accept flow initi download checksum check build modifi file dev whatev reason pmbootstrap know checksum perform download new checksum auto gener sinc file modifi repeat step gener new checksum step import even though auto accept sinc chang check git want checksum chang file includ well step step perform folk download updat,2,10,checksum|security,98,0.10204081632653061,0.18241511285305023
2100,https://api.github.com/repos/kaldi-asr/kaldi/issues/2100,pr,fix decod context option egs swbd opgru,doubl check decod log decod match condit train initi decod initi small bug script experi show tdnn normopgru sensit differ decod extra initi final context setup,,2,6,decode|scripting,34,0.17647058823529413,0.18221183121204376
455,https://api.github.com/repos/OWASP/wstg/issues/455,issue,improv lfi text introduc path truncat bypass php wrapper,ad lfi section improv way exploit bypass limit real world scenario think least follow introduc path truncat bypass concaten file extens php wrapper remot code execut lfi addit introduc minor improv section assign issu check box submit pr add propos content pleas read contribut md x assign pleas,,3,6,bypass|exploit|signing,58,0.10344827586206896,0.18216386437416077
3365,https://api.github.com/repos/quicwg/base-drafts/issues/3365,pr,retri integr protect valu deriv aead api,close,expect think want reserv abil pick new valu new valu initi salt publish rfc probabl need new valu time,3,3,integrity|protect|salt,28,0.10714285714285714,0.18204215168952942
1417,https://api.github.com/repos/OWASP/owasp-mstg/issues/1417,pr,remov password rule check contradict cite cheat sheet,owasp authent cheat sheet cite detail check password found refer explicitli state requir upper lower case number special charact emphasi mine longer rule forbid repeat charact seem line nist password recommend contain,thank pr look soon,3,5,password|owasp|authentication,45,0.1111111111111111,0.1815280169248581
357,https://api.github.com/repos/cnabio/cnab-spec/issues/357,issue,non norm propos ephemer action credenti,run action cnab runtim need pass credenti invoc contain action creat delet modifi object credenti must privileg allow target platform instal applic interact platform one expect clear separ concern enforc separ less privileg credenti applic use cnab instal model work cannot enforc separ concern cannot guarante instal credenti pass instal applic elsewher mitig runtim creat ephemer credenti invalid shortli action complet two benefit guarante instal credenti cannot reus facilit audit action effect platform e action see complement candid non norm portion specif requir runtim tool understand target instal platform,,4,11,credential|privilege|validate|audit,96,0.11458333333333333,0.1812000423669815
91,https://api.github.com/repos/sgerrand/alpine-pkg-glibc/issues/91,issue,r contain publish sgerrand rsa pub,releas r sgerrand rsa pub file publish,warn url public sign key chang warn previou refer updat immedi effect unfortun problem avail cert link reachabl point time though avail valid concern person decid emb key embed bad use version script calcul download dockerfil chang version one reason anoth one less thing worri need abandon version specif one guess apolog delay repli process reissu ssl certif domain silent broken updat well ad monitor specif ssl certif expiri person decid emb key script strongli recommend put work make sure domain host public key highli avail note sign key rotat cach version fail,8,15,rsa|signing|availability|validate|scripting|ssl|certificate|public key,107,0.14018691588785046,0.18114309012889862
1617,https://api.github.com/repos/quicwg/base-drafts/issues/1617,issue,quic tls dangl refer quic transport,warn appar dangl refer quic transport warn appar dangl refer quic transport,,2,4,tls|transport,19,0.21052631578947367,0.18095187842845917
1250,https://api.github.com/repos/pyenv/pyenv/issues/1250,issue,question hash string python build recip packag url,tri add new conda recip python build notic string packag url length provid md edit seem work md hash provid miniconda repo despit shorter,hash sha md consid insecur easi intent gener hash collis see sha sometim even stronger use mani tool npm yarn pipenv python sha list download page comput manual whomev review prs new python download file verifi checksum avail author python distribut,6,11,hash|sha|insecure|checksum|availability|authorise,74,0.14864864864864866,0.1805686503648758
666,https://api.github.com/repos/coreos/coreos-kubernetes/issues/666,pr,kube aws rkt decrypt tls asset,fix investig found least reproduct fail depend reason caus explicitli list docker depend fail reason took opportun switch us decrypt tls asset well cc,lgtm besid address rob comment see confus depend order depend pop lot discuss systemd unit highli recommend read section systemd doc care crux note set independ orthogon requir depend configur requir understood sgtm success e e run pr go merg fix,3,6,crypt|tls|asset,72,0.08333333333333333,0.18045085668563843
59,https://api.github.com/repos/multiformats/multihash/issues/59,issue,question tri match hash use sha appar sha,simpl question unix command creat hash exampl troubl find match even length differ assum sha sum sha ultim goal hash javascript match ipf link thank,nevermind see ad multihash prefix thank,3,9,hash|sha|scripting,40,0.225,0.1802336871623993
948,https://api.github.com/repos/OWASP/owasp-mstg/issues/948,issue,android p updat android protect confirm,new secur featur arriv android p help non repudi alik time start write see best relat asv updat local authent see formal reason non repudi masv mstg note need issu masv non repudi cover med high risk transact action includ privaci financi etc,deriv miss actual non repud see owasp owasp masv close let look protect confirm make sens part somethig otherwis close actual mayb relat chang shorter mstg explain client link key introduc protect confirm secur featur offer os android devic suggest must talk local auth method simpli confirm use fingerprint etc remot endpoint step authent alreadi,7,14,protect|security|repudiation|authentication|privacy|owasp|fingerprint,105,0.13333333333333333,0.17993809282779694
1654,https://api.github.com/repos/quicwg/base-drafts/issues/1654,pr,separ key secret avail usag,discov conflat two signal creat problem problem awar server consum rtt seriou enough clarif order make clear two event interest expand particular problem scenario close,,2,2,availability|signing,31,0.06451612903225806,0.17932309210300446
2958,https://api.github.com/repos/quicwg/base-drafts/issues/2958,pr,move server set transport paramet,fix chang outcom,think address nit updat qpack secur privaci consider still need updat http transport draft close pr sinc punt v,3,4,transport|security|privacy,28,0.14285714285714285,0.179159477353096
2777,https://api.github.com/repos/bioconda/bioconda-recipes/issues/2777,issue,expand function bioconda util valid hash popul secur url autom packag updat,process autom advoc ad function easili repeat part effort futur potenti function autom chang url hostnam known support tls github etc list packag includ etc perhap option argument automat popul hash valu download sourc packag calcul hash add recip valid function includ check licens field popul use known tls hostnam etc function updat recip try build possibl packag sourc github matter compar current version recent releas tag option function convert github tag version use conda e strip preced sure feasibl sourceforg packag respons build fail autom updat attempt recip roll back left manual fix imagin option script recip directori function return packag appropri url latest version given packag packag name provid omit bioconda packag use,got,6,10,validate|hash|security|tls|forge|scripting,129,0.07751937984496124,0.17828486859798431
661,https://api.github.com/repos/drwetter/testssl.sh/issues/661,pr,speedup normal ciphercod,perform test discov slow pr simplifi function speed significantli pr address todo item elimin global variabl hexc,thank,2,2,cipher|signing,22,0.09090909090909091,0.17754842340946198
372,https://api.github.com/repos/OWASP/wstg/issues/372,pr,add attack surfac detector small chang regard method,pr close owasp wstg x pr handl issu requir addit prs x valid need chang pr accomplish add attack surfac detector identifi endpoint small chang relat http method consid recent usag method rest api,thank,3,4,attack|owasp|validate,44,0.09090909090909091,0.17746897041797638
396,https://api.github.com/repos/cloudposse/geodesic/issues/396,pr,aws kop mitig cve make runc immut,mitig make runc immut run process root uid insid contain process exploit bug gain root privileg host run contain allow unlimit access server well contain server implement chang mitig risk inform mitig describ affirm caveat privileg pod effect root anyway pod explicitli grant cap linux immut securitycontext capabl remain vulner mitig essenti implement version real fix newer version docker vulner none releas version certifi run fix version docker appear wait version fix version docker bastion special case bad news hook bastion chang appli bastion host good news bastion host run anyth contain protect,,7,9,cve|exploit|privilege|security|vulnerability|certificate|protect,101,0.0891089108910891,0.17593489587306976
263,https://api.github.com/repos/StreisandEffect/streisand/issues/263,issue,enabl certif base authent openconnect anyconnect,situat ios user run cisco anyconnect pretti rough password base authent connect take long time establish user requir repeatedli tap screen travers multipl dialog box password cannot save must copi past enter hand everi singl time vpn disconnect incred tediou connect demand advanc function unavail certif fix problem provid nice option platform well let certif base authent new server,excel spin new one afternoon solut window client tri hand copi cisco client abl yet sent mobil joshua lund notificationsth situat ios user run cisco anyconnect pretti rough password base authent connect take long time establish user requir repeatedli tap screen travers multipl dialog box password cannot save must copi past enter hand everi singl time vpn disconnect incred tediou connect demand advanc function unavail certif fix problem provid nice option platform well let certif base authent new server repli email directli view github cool excit hear work although offici cisco anyconnect client work better open sourc client window bit rough around edg function document get gener client setup execut mirror,4,16,certificate|authentication|password|availability,177,0.0903954802259887,0.17591284215450287
925,https://api.github.com/repos/PaperMC/Paper/issues/925,pr,send attack soundeffect player see attack,current hear attack sound even cancel attack player invis,ok chang ok thought patch seen alway suppos top name conflict patch appli help resolv make clear code suppos map thing look good guess one person sign ok chang pr,2,5,attack|signing,46,0.10869565217391304,0.1757819801568985
20,https://api.github.com/repos/drduh/pwd.sh/issues/20,issue,add context password,lot account usernam context twitter github help quickli look password differenti list,simpli concaten servic name usernam creat password person rememb usernam appli site think addit secur measur password databas compromis although conced come cost conveni use concaten method work quit well certainli eleg interest keep code short instead recommend come scheme store usernam multipl site multipl usernam one site exampl et cetera updat readm suggest write read password,3,11,password|username|security,73,0.1506849315068493,0.17547960579395294
539,https://api.github.com/repos/rbenv/ruby-build/issues/539,issue,sha sha checksum,pleas md anymor sinc use anymor see altern current sha sha mayb worth write hash algorithm build spec url allow easier migrat e g sha specifi,use secur measur rather commonli use quick simpl error check mechan detect incomplet corrupt download md sum use noth left ensur correct file download instal rubi build sinc download tarbal sign otherwis e g someon use rubi build via insecur wifi man middl attack exchang download content malwar,8,12,sha|checksum|hash|security|signing|insecure|attack|malware,78,0.15384615384615385,0.17546412348747253
164,https://api.github.com/repos/dokku-alt/dokku-alt/issues/164,issue,secur password gener,current gener random password seem bit short sinc result function mostli use intern gener realli tough one sake secur e,abl creat pull request seem simpl fix,2,4,security|password,31,0.12903225806451613,0.17519347369670868
29,https://api.github.com/repos/cloudevents/spec/issues/29,issue,authent context attribut,propos metadata attribut context attribut backlog authent type descript,meant authent relat deliveri messag event someth els anyon recal intent attribut backlog perhap recal propos close one heard anyon activ propos need futur secur relat discuss find need someth reopen thought call agre close,3,5,authentication|scripting|security,48,0.10416666666666667,0.17390550673007965
2885,https://api.github.com/repos/quicwg/base-drafts/issues/2885,issue,appendix quic tls wrong,initi salt chang draft chang exampl initi key,yes updat exampl includ new invari oh well updat test vector want test vector tweak version salt js file repo run work let know work wrong humbl apolog mess made draft time around,2,3,tls|salt,46,0.06521739130434782,0.1736655831336975
3449,https://api.github.com/repos/PaperMC/Paper/issues/3449,issue,bee appli poison effect,behaviour expect bee attack must poison player behaviour observ bee attack poison player step model reproduc spawn bee attack bee attack receiv posion effect plugin list noth paper build number,bee poison difficulti easi difficulti easi yes chang difficulti normal fix thank,2,8,poisoning|attack,47,0.1702127659574468,0.17359180748462677
138,https://api.github.com/repos/arrow-kt/arrow/issues/138,issue,stack safe flag comprehens stack unsaf monad,sinc coroutin system allow us invok want coroutin proceed potenti exploit user indic want monad comprehens stack safe even underli monad stacksaf explicitli trampolin call usag point view transpar user extra param bind block,statu ticket alreadi merg master,3,4,safe|unsafe|exploit,47,0.0851063829787234,0.17317555844783783
127,https://api.github.com/repos/Nyr/openvpn-install/issues/127,issue,apt easi rsa,hey came repo recommend look use inde wonder download easi rsa tarbal instead instal packag via thank,mani distribut pack older version other includ packag less work support actual version support test possibl variant lot easi rsa use sane secur choic older version bit dh etc easi rsa use sane secur choic older version bit dh remot cert tls etc possibl bit dh possibl bit dh possibl yes implement chang long discuss topic check issu ask implement knew want know mani easi way even without modifi script check easi rsa option variabl want deal thank,4,9,rsa|security|tls|scripting,99,0.09090909090909091,0.17287898063659668
54,https://api.github.com/repos/Khan/style-guides/issues/54,pr,correct usag exampl formurlencod,function return object shape merg option argument instead use properti,oh yes absolut correct use correct usag chang forgot chang thank,2,2,encode|forge,26,0.07692307692307693,0.1721603125333786
1675,https://api.github.com/repos/studygolang/GCTT/issues/1675,issue,implement rsa encrypt sign golang exampl,implement rsa encrypt sign golang markdown,,3,6,rsa|encrypt|signing,13,0.46153846153846156,0.17210064828395844
3436,https://api.github.com/repos/kaldi-asr/kaldi/issues/3436,pr,revert updat insert function hashlist decod,revert kaldi asr kaldi bug lattic faster decod like access delet token,,2,3,hash|decode,19,0.15789473684210525,0.171792671084404
2361,https://api.github.com/repos/termux/termux-packages/issues/2361,issue,instal hashcat termux,hope anyon provid detail instal tutori mi,outdat link debfil remov packag instead hashcat b hashcat v start benchmark mode benchmark use hand optim kernel code default crack session set option note use optim kernel code limit maximum support password length disabl optim kernel code benchmark mode w option clgetplatformid cl invalid valu start wed apr stop wed apr clgetplatformid cl invalid valu hashcat incompat devic fix hashcat v devic benchmark test show problem idea devic work other even depend android version opencl version hashcat total unsupport termux time try instal anoth tool cmsmap good hash know version tri upgrad packag make sure hashcat instal hashcat work android fix,4,13,hash|crack|password|validate,113,0.11504424778761062,0.1715088188648224
2213,https://api.github.com/repos/MichaIng/DietPi/issues/2213,issue,dietpi softwar global pw openssl key decrypt deprec key deriv,seem deprec method know enough solv simpli ad replac provid argument work lead error bad output guess encrypt need adjust well urgent sinc show debian buster test easi fix one know openssl wink,warn user let user make decis even decrypt old data horriabl funtun anoth box ship old openssl version pleas help give ordinari user migrat new sure issu relat debian raspbian buster issu current visual decrypt work still well warn annoy edit ah sorri found post openssl side issu guess dietpi even debian os anoth look invok defin amount iter use default amount iter found certain sourc state compar encrypt time believ howev default chang definit iter count assur decrypt still possibl even openssl updat possibl chang default problem option yet avail stretch jessi implement buster thing sure current encrypt decrypt take time still fraction second read write password file instead asid still seem prefer cipher final pr merg report issu wrong project meet issu upgrad git window downgrad alreadi openssl version far rememb openssl one default option openssl git bash manner run shell script bash exe say bash password decrypt sh,7,22,openssl|crypt|encrypt|availability|password|cipher|scripting,195,0.11282051282051282,0.1711350828409195
908,https://api.github.com/repos/pyenv/pyenv/issues/908,issue,question pyenv rehash shim command,work wonder specif rehash seem deliber choic pip conda easi instal trigger rehash command issu command shim trigger rehash reckon instal new execut bin folder automat rehash moment probabl mani way independ use execut need rehash trigger make instal execut avail hear everyon opinion thank,basic perform problem even modern x system faster drive though impos certain amount overhead invoc python execut smaller system raspberri pi good know thank insight want explor ad flag similar otherwis patch pyenv end case whether think part pyenv core guess mani user want run rehash everi invoc shim least recommend custom patch custom hook script overrid origin instal custom hook script want thank anybodi els interest publish code instal instruct,3,10,hash|availability|scripting,122,0.08196721311475409,0.16935740411281586
1239,https://api.github.com/repos/ohmyzsh/ohmyzsh/issues/1239,pr,encod,decod echo n base decod echo n base,think valid request ask chang invert longer decod decod base invalid option try base help inform unam linux home arch arch smp preempt mon jul cest x gnu linux case obvious depend platform maco option show assum origin defin recommend wrap test unam darwin close work across environ someon want updat detect work accordingli accept,3,7,encode|decode|validate,65,0.1076923076923077,0.16905799508094788
971,https://api.github.com/repos/OWASP/owasp-mstg/issues/971,issue,explain need protect sign key releas app,given updat masv regard control need extend coverag mstg come secur sign key method includ limit use hardwar key yubikey etc secur privat key secur keychain see,section think definit mention new app sign method host manag googl x x updat hola paulino news one thank hi guy wrap q th free work one one disabl keyboard cach kotlin updat checklist spanish,4,8,protect|signing|security|private key,70,0.11428571428571428,0.16900792717933655
335,https://api.github.com/repos/laravel/homestead/issues/335,pr,append privileg fals afterscript provision,realist shell provision script ran thing specif homestead use gain privileg easi switch anoth user mess work base reason think ran default,go backward incompat chang ah inde new open sourc collabor thank point improv someday futur simultan check workaround starter info prefix command run command user thank inform seen exampl previou day realli good use unix system hard time target vagrant shell provision perhap matter provis script run strang work prior pr,2,5,privilege|scripting,79,0.06329113924050633,0.16884735226631165
39,https://api.github.com/repos/angristan/openvpn-install/issues/39,pr,slight crypto upgrad,sha sha take roughli amount time run sha aes vs aes actual impact perform alway favor pick hardcor option,run test upcom openvpn updat see impact perform affect speed much choos hard paramet stay tune pr,3,6,crypt|sha|aes,40,0.15,0.1678827404975891
1875,https://api.github.com/repos/quicwg/base-drafts/issues/1875,issue,post quantum cryptographi integr,post quantum cryptographi becom increasingli import time necess point quic readi mani post quantum key exchang algorithm requir key use prevent rapid session resumpt work fix,tls concern quic specif,3,4,crypt|integrity|tls,35,0.11428571428571428,0.16762447357177734
43,https://api.github.com/repos/Floris497/mac-pixel-clock-patch-V2/issues/43,pr,updat md checksum data data section expot otool,otool gain md checksum data data section prevent codesign effect,,2,3,checksum|signing,19,0.15789473684210525,0.167571023106575
298,https://api.github.com/repos/postmarketOS/pmbootstrap/issues/298,pr,implement checksum test travi script,check checksum sourc modifi packag aport directori,oh wait found one solut great featur great review agre solut prefer one f ec match variant regex use prefer pars output necessari found probabl best solut ad command actual made pars produc emti result chang,2,3,checksum|scripting,49,0.061224489795918366,0.16684040427207947
71,https://api.github.com/repos/xyu/heroku-wp/issues/71,issue,set wp salt dev random,new relic app name heroku wp set wp salt dev random last output set wp salt dev random script return,actual dev random issu try googl enough entropi system try download larg file background exactli bro say try googl hang dev random u try open browser tab download random file correct order make wordpress instal secur gener salt downsid block mean return abl enough random move around mous cursor download larg file use wifi even walk around laptop use normal enough random data environ around,3,6,salt|scripting|security,91,0.06593406593406594,0.16655370593070984
2675,https://api.github.com/repos/kaldi-asr/kaldi/issues/2675,issue,valid produc languag model correct miss,run train script produc mani file exp know model avail miss file model ok audio recognit want export languag model thank advanc look forward respons,sorri think enough experi us kaldi time answer question recommend try easier project,3,3,validate|scripting|availability,45,0.06666666666666667,0.16559845209121704
192,https://api.github.com/repos/myspaghetti/macos-virtualbox/issues/192,issue,inform gener serial number uuid etc help imessag facetim login fail,super help bit inform purpos mean variabl necessari gener tri care much guess use uuidgen gener dmisystemuuid system uuid use macseri exe gener dmisystemseri dmiboardseri mlb switch howev login imessag facetim still fail sign imessag sign pleas check network connect try error occur authent authent request phone though accept pin enter correctli yet error still occur inform topic super help otherwis script truli amaz,sorri inform run maco non appl devic provid script tell exactli genuin inform genuin appl devic legal reason script support genuin appl devic,4,9,login|signing|authentication|scripting,99,0.09090909090909091,0.16540923714637756
166,https://api.github.com/repos/reportportal/reportportal/issues/166,issue,public page widget accept test result read access without password,rp user want public page widget accept test result,pleas specifi go public page exampl kind dynam updat page custom access current project goal project need realli sure good idea implement secur perspect rather suggest export order provid non user execut result problem client look function option read user hardcod login button ui special export tunnel specif data kind cover ldap ad integr ad auth servic mock return one user everyon self access specif data everyth els cover access permiss real overhead implement,6,6,password|security|login|tunnelling|ldap|integrity,94,0.06382978723404255,0.1648745834827423
109,https://api.github.com/repos/atmoz/sftp/issues/109,issue,useradd becom stricter usernam requir,test problem use usernam userfromenv alpin imag useradd invalid user name userfromenv look alpin actual enforc written man page usernam must start lower case letter underscor follow lower case letter digit underscor dash end dollar sign regular express term z z problem debian man page start usual recommend usernam instead usernam must appli alpin useradd r useradd r somewher version stricter usernam requir appli earlier made break chang forc strict usernam well sure posix standard allow lower upper case mayb instead,,4,10,username|validate|user name|signing,87,0.11494252873563218,0.16441118717193604
86,https://api.github.com/repos/multiformats/multihash/issues/86,issue,swift multihash reimplement updat,current swiftmultihash implement look date e g varint encod seem swift packag manag actual start write found one tri idiomat swift possibl activ develop mine hope abl move multiformat make sens ad test case readm md tomorrow,implement well,2,3,hash|encode,44,0.06818181818181818,0.16427811980247498
24,https://api.github.com/repos/x2on/OpenSSL-for-iPhone/issues/24,issue,incorrect hash,test tonight notic someth weird ad line nslog textfield text fsopenssl md fromstr textfield text openssl b mike e bd f b f e df def b de mike echo mike md ff f e ee ae f mike echo mike md sum ff f e ee ae f sure openssl that built nsstring md fromstr nsstring string,correct hash must md string gah get everytim good code hour thank,2,5,hash|openssl,73,0.0684931506849315,0.16427014768123627
149,https://api.github.com/repos/rust-lang-nursery/rust-cookbook/issues/149,issue,encod decod hex miss intro md,ad,sinc submitt fix issu anoth pull request submit tonight notic text data encod bade say url rather data encod address well creat pull request resolv issu fix,2,4,encode|decode,35,0.11428571428571428,0.16414912045001984
97,https://api.github.com/repos/OpenVPN/easy-rsa/issues/97,pr,allow pass custom openssl opt,pr introduc pass custom argument openssl gen req sign req build ca subcommand basic handl new argument everyth pass unchang openssl,note motiv behind roughli pr although gener use case came commit similar pr permit pass extra openssl argument via environ variabl implement need permit pass custom argument gener cas sign revok gener crl suggest extend implement cover revok gen crl,2,6,openssl|signing,67,0.08955223880597014,0.16378940641880035
117,https://api.github.com/repos/Gazler/githug/issues/117,pr,add full hash answer log rb,accept either abbrevi hash full hash answer log level address,hi idea someth instead allow hash valu valid solut sure updat suggest perfect thank,2,5,hash|validate,31,0.16129032258064516,0.1634453982114792
429,https://api.github.com/repos/Nyr/openvpn-install/issues/429,pr,allow multipl connect use one certif,confus anyon use script,share certif client bad practic mani reason scenario need previou discuss issu tracker matter want find,2,3,certificate|scripting,27,0.1111111111111111,0.16327665746212006
949,https://api.github.com/repos/OWASP/owasp-mstg/issues/949,issue,android p updat hardwar secur modul support,android p hardwar secur modul support improv time updat data protect cryptographi chapter,includ titan thr android blog cover strongbox requir fallback older devic cover titan term programmat interact necessari thank assign well reason github allow right assign name appear list investig,4,6,security|protect|crypt|signing,50,0.12,0.16299471259117126
137,https://api.github.com/repos/pypa/manylinux/issues/137,issue,enabl hash check mode pip instal,hi descript issu featur request good idea add packag instal via upsid allow build use detect whether packag modifi expect downsid requir manual updat depend accept case pin version hash mani packag current behavior hash list expect behavior hash list check miscellan note send pr find downtim,,2,5,hash|scripting,54,0.09259259259259259,0.1627630740404129
6636,https://api.github.com/repos/fish-shell/fish-shell/issues/6636,pr,fix variabl leak complet kill,descript type global variabl accident pr fix,yup thing gener complet bit messi benefit cleanup thing quit variat across implement tho need care,2,2,leak|scripting,29,0.06896551724137931,0.16265958547592163
337,https://api.github.com/repos/quicwg/base-drafts/issues/337,pr,client finish messag protect rtt key,actual simplifi thing fair bit say rtt key avail finish messag sent close,,2,2,protect|availability,20,0.1,0.1621672809123993
371,https://api.github.com/repos/spantaleev/matrix-docker-ansible-deploy/issues/371,pr,fix slack bridg salt larg sha crypt requir char,hi thank great ansibl role follow seem slack bridg need fix cento pr reduc salt length char thu make happi,wow chang thing mani time still work hehe thank,3,4,salt|sha|crypt,39,0.10256410256410256,0.1610659807920456
530,https://api.github.com/repos/OWASP/owasp-mstg/issues/530,pr,detail cryptograph standard secur random,address work progress,great content merg pleas updat remedi part verifi configur cryptograph standard algorithm readi,2,3,crypt|security,22,0.13636363636363635,0.1607690453529358
118,https://api.github.com/repos/kadirahq/mantra/issues/118,issue,repeat user data time inject data,flow router ssr find repeat user data time inject data decod,sampl repo see go fix thank,2,3,inject|decode,24,0.125,0.16043390333652496
666,https://api.github.com/repos/termux/termux-packages/issues/666,pr,forc buildord py decod file utf,fix,thank nice find think chang slightli clearer specifi encod directli open file ah nice inde better,2,2,decode|encode,24,0.08333333333333333,0.16013814508914948
2608,https://api.github.com/repos/quicwg/base-drafts/issues/2608,pr,non quic tls implement valid transport paramet,point levi requir close,,3,3,tls|validate|transport,12,0.25,0.1599535346031189
1538,https://api.github.com/repos/drwetter/testssl.sh/issues/1538,pr,fix basicauth bug newlin ad user password string encod,found bug implement basicauth featur probabl introduc commit problem command openssl base basicauth add newlin end string result differen base encod exampl openssl base dxnlcjpwyxnzd yzao howev rather look follow echo n user password openssl base dxnlcjpwyxnzd yza see better solut without use echo command better suggest let know best regard manuel,good point thank settl builtin safe echo thank chang backport patch much appreci,4,8,password|encode|openssl|safe,75,0.10666666666666667,0.15942086279392242
171,https://api.github.com/repos/WICG/webusb/issues/171,issue,document privaci concern,secur privaci consider section focus primarili secur mention privaci consider devic fingerprint,,3,6,privacy|security|fingerprint,16,0.375,0.15931019186973572
206,https://api.github.com/repos/arakasi72/rtinst/issues/206,issue,let encrypt ssl,good script includ let encrypt configur ssl http,someth immedi plan implement meantim peopl wish let encrypt implement independ alright think futur featur alreadi implement,3,6,encrypt|ssl|scripting,29,0.20689655172413793,0.1592751145362854
381,https://api.github.com/repos/emberjs/rfcs/issues/381,issue,deprec remov serial adapt store favor servic inject,properti adapt serial respect despit adapt serial hook receiv first method argument abil user inject store notat work servic inject need deprec simpli move inject store servic provid default adapt remov current behavior help enabl us streamlin request respons process,dot notat avail longer need deprec move pattern,2,5,inject|availability,57,0.08771929824561403,0.1586618274450302
851,https://api.github.com/repos/drwetter/testssl.sh/issues/851,issue,incorrect map openssl rfc map html,seem incorrect map present tabl one found x c x e seem incorrect openssl name though abl find correct name openssl document verifi xcc xcc fairli certain cipher suit given tabl actual correspond number complet list cipher suit rfc see,thx gener use testssl sh date somebodi els feel contribut either autom gener txt file great manual sync appreci fyi xcc xcc old agl cipher later supersed new one made rfc name scheme old cipher partli privat openssl name space partli borrow ssllab,2,8,openssl|cipher,90,0.08888888888888889,0.1577291190624237
2635,https://api.github.com/repos/quicwg/base-drafts/issues/2635,pr,target attack secur consider,went fix found offend text alreadi remov ad note secur consider let client dictat rout decis,,2,3,attack|security,21,0.14285714285714285,0.1575021594762802
208,https://api.github.com/repos/sobolevn/git-secret/issues/208,issue,rfc stabl forward compat public key storag format,ticket implement rfc awk subtract one script use awk figur upstream local logic work check export key keyr cach old keyr export,,2,2,public key|scripting,31,0.06451612903225806,0.15696993470191956
202,https://api.github.com/repos/speed47/spectre-meltdown-checker/issues/202,pr,var whitelist common c cpu spec store bypass,variant add function whitelist hand full cpu unaffect specul store bypass allow improv determin variant statu immun cpu wait stabl patch backport distro kernel sourc cpu list cpu specex free,,2,4,whitelist|bypass,39,0.10256410256410256,0.1566193848848343
5325,https://api.github.com/repos/fish-shell/fish-shell/issues/5325,issue,tild expans mangl usernam path,tild usernam expand someth extra charact end look length one,bisect e dd b afa fe aed bd ad seem c string handl fool proof yup fix problem pointer point previou code expect slash simpli reorder line make work unfortun think great test unit test one method rather test script e g think singl usernam count exist need reli usernam check e g resolv dir,2,5,username|scripting,71,0.07042253521126761,0.15639539062976837
775,https://api.github.com/repos/basho/riak/issues/775,issue,riak debug featur request add dmidecod jira riak,recent ticket activ involv cluster mix hardwar unexpect behavior use add dmidecod descript output chipset hardwar etc debug comparison purpos,,2,3,decode|scripting,29,0.10344827586206896,0.15632086992263794
312,https://api.github.com/repos/speed47/spectre-meltdown-checker/issues/312,pr,ad support taa vulner,tsx asynchron abort taa vulner similar microarchitectur data sampl mds affect buffer store buffer fill buffer load port writeback data bus taa condit microprocessor util specul execut allow authent user potenti enabl inform disclosur via side channel local access taa separ cve mds cve,thank review,4,6,vulnerability|authentication|disclosure|cve,51,0.11764705882352941,0.15617458522319794
3019,https://api.github.com/repos/quicwg/base-drafts/issues/3019,pr,changelog transport,someon alreadi tls put major wire format chang first ekr like idea mark thing special subscrib theori import,thank mistyp date search check duplic,2,2,transport|tls,27,0.07407407407407407,0.15605910122394562
138,https://api.github.com/repos/rust-lang-nursery/rust-cookbook/issues/138,pr,implement encod string applic x www form urlencod,exampl littl contriv gladli updat necessari resolv,pleas add assert encod decod valu reader see look without run code done,2,4,encode|decode,29,0.13793103448275862,0.15575550496578217
1538,https://api.github.com/repos/ceph/ceph-container/issues/1538,pr,daemon handl special devic dmcrypt data,devic extra p charact partit number sign dimitri savineau,,2,2,crypt|signing,16,0.125,0.15563374757766724
41,https://api.github.com/repos/bkrem/awesome-solidity/issues/41,pr,improv coverag secur,add echidna slither secur tool improv writeup manticor remov poros sinc broken unmaintain add smart contract refer add awesom ethereum secur refer checklist x link descript start uppercas charact end period exampl x drop prefix descript x avoid use word descript,great pr thank take time fix improv list,2,6,security|scripting,53,0.11320754716981132,0.1551530510187149
219,https://api.github.com/repos/haugene/docker-transmission-openvpn/issues/219,pr,reduc amount privileg need,thought nice variou secur reason reduc mani privileg contain run necessari privileg make possibl user namespac need use,hey first sorri late repli alway much total agre edit though better secur thank contribut problem thank merg,3,6,privilege|security|user name,41,0.14634146341463414,0.15512146055698395
2661,https://api.github.com/repos/rvm/rvm/issues/2661,pr,address issu certif valid,address handl issu appear handl anoth place exist rvm sourc messag simpli lift,discuss print warn function suppos check remot file exist matter certif valid proper behavior run first retri without flag error faster user,2,4,certificate|validate,40,0.1,0.15473535656929016
9,https://api.github.com/repos/drwetter/testssl.sh/issues/9,issue,name space handl cipher suit,default display openssl name space map file avail rfc style best switch go display openssl rfc mayb one default openssl,see mostli done see,3,5,cipher|openssl|availability,30,0.16666666666666666,0.15443108975887299
2168,https://api.github.com/repos/BlackArch/blackarch/issues/2168,issue,tool request fuzzbunch,easi work add shadow broker fuzzbunch tool,think help lot easier tri understand exactli benefit tool anyth fuzzbunch leverag real world scenario alreadi framework yeah lot nsa exploit packag metasploit handi target window want ask open issu due nsa tool still ad ba except fuzzbunch right see fuzzbunch metasploit exploit framework work msf exploit msf exploit common msf behav differ exploit reliabl advanc option etc anyway packag fuzzbunch still viabl alreadi made draft pkgbuild need help finish,3,13,fuzz|exploit|metasploit,81,0.16049382716049382,0.15429672598838806
83,https://api.github.com/repos/travis-ci/gimme/issues/83,issue,check file integr,current code reus download file exist check file size zero encount problem interrupt ctrl c fortun go download page provid checksum exampl instead,,2,2,integrity|checksum,27,0.07407407407407407,0.1538473516702652
3556,https://api.github.com/repos/quicwg/base-drafts/issues/3556,pr,pto arm anti deadlock,instead set pto base invalid time pto arm anti deadlock byte flight fix,,2,3,deadlock|validate,18,0.16666666666666666,0.15295083820819855
378,https://api.github.com/repos/OWASP/wstg/issues/378,pr,updat format error test credenti transport encrypt channel,pr relat issu pr accomplish exampl incorrect header format refer updat header valu reflect explan paragraph,,3,3,credential|transport|encrypt,25,0.12,0.15232165157794952
1004,https://api.github.com/repos/drwetter/testssl.sh/issues/1004,issue,certif check,hi dirk moment believ leaf certif check issu weak hash algorithm base statement fact current engag nessu flag instanc weak hash algorithm testssl therefor dig found testssl test leaf certif particular issu appli issu well differ certif check extend intermedi ca root ca kind regard alex,ack see,3,7,certificate|hash|nessus,51,0.13725490196078433,0.15224063396453857
999,https://api.github.com/repos/StreisandEffect/streisand/issues/999,pr,refactor openssl ca server client certif gener role,pr aim refactor ca server client certif gener role similar vein download veryifi role goal reduc code duplic central certif gener separ ca server client certif gener separ task separ concern simplifi futur endeavor openssl need replac altern cryptographi toolkit e x libressl addit chang pr assign subject altern name self sign server certif help address issu present issu separ pr openvpn openconnect role refactor util role without observ regress thu far,think readi anoth review document done,4,10,openssl|certificate|crypt|signing,87,0.11494252873563218,0.15175248682498932
516,https://api.github.com/repos/openservicebrokerapi/servicebroker/issues/516,issue,allow return redact credenti,discuss intern ibm view endpoint bind contain credenti encourag improp storag password secret gener suppos store password plaintext retriev form hash salt add text indic broker determin content field field contain enough inform connect servic provid credenti store manner make unavail,rais earlier,5,8,credential|password|hash|salt|availability,48,0.16666666666666666,0.15173500776290894
2421,https://api.github.com/repos/termux/termux-packages/issues/2421,pr,librhash build execut well,rhash split,nice updat packag avail rhash split make logic sens small packag perhap worth split split packag probabl name simpli,2,4,hash|availability,26,0.15384615384615385,0.15167424082756042
97,https://api.github.com/repos/jawj/IKEv2-setup/issues/97,pr,prefil mobileconfig vpn usernam password,ad vpn usernam password mobileconfig ios mac,thank submit pr howev send password cleartext email remov mani secur benefit set vpn one includ usernam somewhat reduc secur mean mobileconfig file longer gener usabl potenti addit user,3,8,username|password|security,42,0.19047619047619047,0.15130457282066345
276,https://api.github.com/repos/oracle/docker-images/issues/276,issue,add encrypt tls function oracl databas,read dockerfil oracl databas current unencrypt transport provid support encrypt tls least recommend sampl ideal provid pem jks absolut necessari format file certif key chain well author chain use load servic port similar encrypt altern nativ encrypt util,kind encrypt refer mean sql net base encrypt provid oracl databas encrypt provid via docker stack close due respons,5,13,encrypt|tls|transport|certificate|authorise,64,0.203125,0.1512773185968399
220,https://api.github.com/repos/paulp/sbt-extras/issues/220,issue,rfe verifi sbt launch jar signatur,key fingerprint hard code script ideal commit hard code sign effect script becom cryptograph assert valid download file allow sbt trust ecosystem root trust wherev sbt extra script came usual one ci server preinstal simpli script copi repo make thing slightli complex fact older launcher publish without cryptograph sign e g signatur verif requir suggest absent verifi sign rather fail startup,verifi md match impenetr think probabl good enough,7,15,signing|signature|fingerprint|scripting|crypt|validate|trust,76,0.19736842105263158,0.15062358975410461
415,https://api.github.com/repos/kaitai-io/kaitai_struct/issues/415,issue,spuriou failur cryptic repons default case map empti reduceleft,ksy produc follow cryptic messag think actual error ksy case pun intend add anoth entri switch e g uncom line error goe away,yeah least invalid error messag definit bug,2,3,crypt|validate,40,0.075,0.1505190134048462
1763,https://api.github.com/repos/rvm/rvm/issues/1763,issue,add warn ca certif requir linux bsd distro,prevent possibl ssl problem,instead enforc warn detect legit reason worth worth requir base system system packag,2,2,certificate|ssl,26,0.07692307692307693,0.15003910660743713
74,https://api.github.com/repos/multiformats/multihash/issues/74,issue,exist crypt format,exist crypt format,constraint multihash multiformat soundli rule crypt cover detail readm websit faq,2,4,crypt|hash,18,0.2222222222222222,0.15002478659152985
562,https://api.github.com/repos/rust-lang-nursery/rust-cookbook/issues/562,issue,showcas encrypt,encrypt cookbook creat recip encrypt decrypt data stream,see someth tri work project encrypt howev think need handl first avoid confus anyon els happen come across,2,5,encrypt|crypt,29,0.1724137931034483,0.14949552714824677
1185,https://api.github.com/repos/quicwg/base-drafts/issues/1185,pr,move opportunist ack defens secur consider,close,,2,2,defense|security,8,0.25,0.1493096649646759
1539,https://api.github.com/repos/ceph/ceph-container/issues/1539,pr,daemon handl special devic dmcrypt data bp,devic extra p charact partit number backport sign dimitri savineau dsavinea,,2,2,crypt|signing,19,0.10526315789473684,0.14918522536754608
81,https://api.github.com/repos/alexanderepstein/Bash-Snippets/issues/81,pr,readm clarifi base use crypt,want avoid notion base encrypt,total correct nice catch,2,2,crypt|encrypt,15,0.13333333333333333,0.14914309978485107
288,https://api.github.com/repos/WebBluetoothCG/web-bluetooth/issues/288,pr,add gatt blacklist link attack devic,sinc link attack devic section nice link gatt blacklist section live preview,,2,4,blacklist|attack,19,0.21052631578947367,0.14903132617473602
336,https://api.github.com/repos/quicwg/base-drafts/issues/336,pr,ad section packet protect rule,moment littl redund text tls document probabl ok sort text belong close,,2,2,protect|tls,18,0.1111111111111111,0.14882004261016846
152,https://api.github.com/repos/osresearch/heads/issues/152,issue,expect hash publish somewher,reproduc build great use compar peopl result anywher expect result publish sign obtain head eee b c f e c,publish releas publish commit sinc clean build typic work file directori pollut hash great thank,2,3,hash|signing,40,0.075,0.14869125187397003
1537,https://api.github.com/repos/msys2/MSYS2-packages/issues/1537,issue,signatur hash checksum binari,look hash checksum sign releas found none binari list checksum,,4,7,signing|signature|hash|checksum,15,0.4666666666666667,0.1485934555530548
930,https://api.github.com/repos/drwetter/testssl.sh/issues/930,pr,test vulner bleichenbach attack,pr add test check whether server support cipher suit rsa key transport tls rsa vulner bleichenbach attack see,thx note comment top function develop base return bleichenbach oracl threat robot hanno b ck juraj somorovski craig young see code basic bash implement test code develop see code run robot basic bash implement littl bit understat robot attack releas right find branch depend read cours releas dev stabl version new featur robot check new featur either git pull zip file,7,11,vulnerability|attack|cipher|rsa|transport|tls|threat,84,0.13095238095238096,0.14831317961215973
84,https://api.github.com/repos/multiformats/multihash/issues/84,issue,support bcrypt,bcrypt current one best option store password coda explain better,gener discuss around,2,3,crypt|password,16,0.1875,0.14821423590183258
347,https://api.github.com/repos/osixia/docker-openldap/issues/347,issue,updat password hash algorithm,hi possibl updat support hash algorithm user password follow avail read onlin regard algorithm simpli outdat instead,think good idea store password plan updat im struggl jndi store password anyth plain text,3,7,password|hash|availability,37,0.1891891891891892,0.1476951390504837
561,https://api.github.com/repos/jakeday/linux-surface/issues/561,issue,issu step sign,error asn encod routin asn mbstring ncopi string long crypto asn mbstr c maxsiz error idea go edit string,heh heh realiz put letter countri name maxsiz mean,3,3,signing|encode|crypt,32,0.09375,0.1473502367734909
474,https://api.github.com/repos/osresearch/heads/issues/474,issue,fbwhiptail reboot enforc sign new configur,pcr chang sinc gpg card request usb devic present imposs unlock luk contain without reboot pcr expect zero kexec seal call requir reboot enforc case link indirectli gener around usb devic requir sign integr attest,,2,3,signing|integrity,42,0.07142857142857142,0.1467079222202301
30,https://api.github.com/repos/visionmedia/deploy/issues/30,issue,secur implic use ssh,want add document secur implic forward ssh agent session server,look better als explain articl avoid secur implic first place,2,5,security|ssh,25,0.2,0.1466887891292572
214,https://api.github.com/repos/cnabio/cnab-spec/issues/214,issue,credenti directori,per credenti repres directori clarifi file jsut file directori,guess directori secur risk mean stupid exampl ssh key want load time one key initi credenti directori later add key run upgrad use credenti inadvert expos ssh key think good reason directori explicit singl file env variabl better audit abil think close base discuss,4,8,credential|security|ssh|audit,56,0.14285714285714285,0.1464751958847046
295,https://api.github.com/repos/bash-my-aws/bash-my-aws/issues/295,pr,updat kms encrypt maintain behaviour aws cli v v,base encod input stdin unless awscli version use aws cli v expect blob base,,2,2,encrypt|encode,24,0.08333333333333333,0.145962655544281
98,https://api.github.com/repos/megastep/makeself/issues/98,pr,add gpg extra gpg aysmmetr encrypt sign,pr add support asymmetr encrypt sign gpg provid extra option gpg extra pass addit inform recipi default key etc add quot tar extra order support complex option space compress program xz e allow maximum compress xz gpg encrypt sign one case,,2,6,encrypt|signing,49,0.12244897959183673,0.14558279514312744
2393,https://api.github.com/repos/termux/termux-packages/issues/2393,issue,packag request rhash,use packag comput hash sum file support wide rang hash includ new sha standard,execut avail,3,5,hash|sha|availability,20,0.25,0.14543506503105164
283,https://api.github.com/repos/dehydrated-io/dehydrated/issues/283,pr,fix request new certif author valid,issu switch dns base challeng see made quick fix allow dehydr chang line old new correspond bigger answer mention serverfault post inde longer necessari implement quick escap extract challeng leav case,close favor thank anyway,3,3,certificate|authorise|validate,42,0.07142857142857142,0.14530718326568604
17,https://api.github.com/repos/digitalocean/do_user_scripts/issues/17,pr,wordpress key salt capit p,file defin constant key salt use hash password nonc use command taken p word p ress comment,good catch thank jessin look great ok hand pleas inform exist wordpress user edit file content random gener,4,5,salt|hash|password|nonce,41,0.12195121951219512,0.14528125524520874
1077,https://api.github.com/repos/drwetter/testssl.sh/issues/1077,issue,ad support send cooki part test request,check look option offer cooki url part test url tri reach behind authn authz mechan test tls support challeng unless abl reach past gatekeep url,okay specifi header big deal cooki bearer token basic auth cooki friend matter applic layer osi model tls sure whether help,2,6,cookie|tls,54,0.1111111111111111,0.14430898427963257
668,https://api.github.com/repos/quicwg/base-drafts/issues/668,pr,transport disambigu stream frame payload,payload alreadi mean someth els seem instanc use better word avail,merg manual,2,2,transport|availability,19,0.10526315789473684,0.14421984553337097
137,https://api.github.com/repos/quicwg/base-drafts/issues/137,pr,remov section quic crypto,part ongo discuss expect resolv open address one list requir tls provid close,come back,2,2,crypt|tls,20,0.1,0.14421822130680084
95,https://api.github.com/repos/multiformats/multihash/issues/95,issue,releas multihash maven central,build depend project reli found central mvn repositori provid pr allow run creat tag deploy central better still someon els appropri author run block,languag independ project level repo repo need publish maven work java multihash wrong project sorri,2,3,hash|authorise,44,0.06818181818181818,0.14382849633693695
1193,https://api.github.com/repos/drwetter/testssl.sh/issues/1193,pr,fix cipher,pr fix bug one appear code current assum cipher name contain uppercas letter number howev cipher provid authent includ anon name written lowercas pr fix problem allow lowercas letter appear cipher name except first portion name note chang made similar code sinc line match tlsv cipher contain lowercas letter,oop thank catch fix,2,6,cipher|authentication,56,0.10714285714285714,0.1437617689371109
40,https://api.github.com/repos/icy/pacapt/issues/40,issue,dos ddo attack pacapt,forget quot variabl shell script lead mani secur implic took look sourc code saw one issu current run push server heavi load even mightiest server imag command ran happen issu came line op command still expand unquot invok made pull request fix look,fix,5,5,ddos|attack|forge|scripting|security,49,0.10204081632653061,0.14365580677986145
1859,https://api.github.com/repos/docker-library/official-images/issues/1859,pr,updat opensus secur fix leap,note start commit includ sha hash underli tar file verifi integr tar xz file pleas note commit add sha checksum sha checksum ad anoth secur updat necessari thank sign christian brauner cbrauner,sha checksum checksum nice lgtm,6,13,security|sha|hash|integrity|checksum|signing,43,0.3023255813953488,0.14327315986156464
68,https://api.github.com/repos/kewlbear/FFmpeg-iOS-build-script/issues/68,issue,h encod,av regist avcodec pcodec avcodec find encod av codec id h assert pcodec asset found mpeg avaiabl,see scratch arch config log configur codec mayb need configur ffmpeg x,2,3,encode|asset,32,0.09375,0.14307333528995514
162,https://api.github.com/repos/mrworf/plexupdate/issues/162,issue,token instead usernam pass,reason x plex token rather usernam pass script version check updat check version numer found plex token work rather tri cooki etc,see pend commit need coax abl plex server token avail cooki stuff remain sinc need abl obtain token first place config file avail weird happen,4,7,username|scripting|cookie|availability,52,0.1346153846153846,0.1410936713218689
361,https://api.github.com/repos/rvm/rvm/issues/361,pr,untrust rvmrc work b c hash store,trust need store fix store trust right hash separ,,2,5,trust|hash,17,0.29411764705882354,0.13954755663871765
483,https://api.github.com/repos/coreos/coreos-kubernetes/issues/483,pr,bug guard decrypt asset twice fix,implement simpl guard prevent decrypt tls asset twice,prefer solut good reason close pr,3,5,crypt|asset|tls,21,0.23809523809523808,0.13948841392993927
1784,https://api.github.com/repos/arrow-kt/arrow/issues/1784,pr,add unsafecancellablerun,close,provid instanc singl complet need implement logic ad non cancel one,2,2,unsafe|safe,15,0.13333333333333333,0.13899318873882294
1342,https://api.github.com/repos/OWASP/owasp-mstg/issues/1342,pr,devic encrypt adiantum,ad content adiantum cipher howev ad adiantum without refer android devic encrypt seem littl weird pr still wip pr cover issu,thank,2,3,encrypt|cipher,26,0.11538461538461539,0.13881327211856842
302,https://api.github.com/repos/quicwg/base-drafts/issues/302,pr,integr protect header,appar crypto stuff go live tls doc forev sinc close know agre tokyo interim,updat link discuss tokyo part subsequ close duplic,4,4,integrity|protect|crypt|tls,26,0.15384615384615385,0.13880880177021027
727,https://api.github.com/repos/mathiasbynens/dotfiles/issues/727,pr,function add subresourc integr hash gener,add subresourc integr hash gener see,,2,4,integrity|hash,13,0.3076923076923077,0.13831575214862823
143,https://api.github.com/repos/OpenVPN/easy-rsa/issues/143,pr,serial number gener correctli use openssl rand,hi seem random serial number work due invalid call pleas find fix attach greet vifo,fix typo introduc,2,2,openssl|validate,26,0.07692307692307693,0.13816066086292267
6208,https://api.github.com/repos/fish-shell/fish-shell/issues/6208,pr,sphinx honor chang static html asset,descript sphinx proper rebuild chang one solut remov use need remov entir html build chang style know whether worth extra script alway case clean rebuild necessari,look good,2,3,asset|scripting,35,0.08571428571428572,0.13729709386825562
262,https://api.github.com/repos/quicwg/base-drafts/issues/262,issue,encrypt client handshak rtt key,observ violat rule agre tls appli long difficult convers tls probabl work make chang,,3,4,encrypt|violate|tls,20,0.2,0.1372370719909668
538,https://api.github.com/repos/heroku/heroku-buildpack-nodejs/issues/538,issue,warn user vulner npm audit,come soon npm loath suggest needlessli add build step build help reduc amount insecur rd parti code deploy propos warn though mayb buildpack place warn user push code known vulner help,think audit run default worth check case npm ci differ like futur packag assum close anyway cover,3,5,vulnerability|audit|insecure,54,0.09259259259259259,0.13683196902275085
1852,https://api.github.com/repos/BlackArch/blackarch/issues/1852,issue,artilleri perform test socket io chat use certif base authent,current develop chatbot applic use socket io protocol chat convers use ssl certif base authent login applic dynam valu sid gener login success iam server request kind suggest help certif base authent exampl yaml code cert auth kindli pleas share better understand,tls certif verif alway work expect wtf topic,5,11,certificate|authentication|ssl|login|tls,61,0.18032786885245902,0.1362987458705902
112,https://api.github.com/repos/haugene/docker-transmission-openvpn/issues/112,issue,cryptostorm token base auth work,use token crypto storm suppli password sure suppos work anyon run,found token usernam,3,4,crypt|password|username,20,0.2,0.13625246286392212
43,https://api.github.com/repos/KrumpetPirate/AAXtoMP3/issues/43,issue,decrypt without reencod save mp file,hey think nicer qualiti wise faster cpu wise remov drm without reencod differ format wrote script,test seem work someth add wiki ever one b support,3,4,crypt|encode|scripting,33,0.12121212121212122,0.1359252631664276
39,https://api.github.com/repos/icy/pacapt/issues/39,pr,fix bug forget quot pacapt debug,forget quot variabl shell script lead mani secur implic pull request fix issu make dos ddo attack machin run pacapt exampl,great bash lession thank much problem even shell master commonli forget quot someth,5,7,forge|scripting|security|ddos|attack,41,0.17073170731707318,0.13550296425819397
498,https://api.github.com/repos/coreos/docs/issues/498,pr,fix race condit devic avail,occasion reason ephemer block devic seem take littl becom avail fix,includ requir well ad squash previou commit sorri delay thank,2,3,race condition|availability,27,0.1111111111111111,0.13498057425022125
1416,https://api.github.com/repos/OWASP/owasp-mstg/issues/1416,issue,test app extens use attack main process via share contain,ticket base given ios app extens explain use inject data main process vice versa use leak data,,3,3,attack|inject|leak,28,0.10714285714285714,0.1345236748456955
332,https://api.github.com/repos/osresearch/heads/issues/332,pr,exclud gnupg keyr file revis control,sinc gnupg ssh keyr file highli user specif manag revis control system otherwis caus troubl rebas,mayb includ ssh author key amend file move current unimpl unspecifi non volatil user partit figur make work coreboot linuxboot real hardwar qemu merg part right,3,5,gnupg|ssh|authorise,49,0.10204081632653061,0.13439805805683136
296,https://api.github.com/repos/Nyr/openvpn-install/issues/296,issue,implement tls crypt,hi one step valid authent control packet encrypt control channel packet,implement right sinc break instal still ad,5,5,tls|crypt|validate|authentication|encrypt,22,0.22727272727272727,0.13373863697052002
1392,https://api.github.com/repos/sorin-ionescu/prezto/issues/1392,pr,util reus interact alias safe ops,reus alias alreadi avail,make sens nice small chang,2,2,safe|availability,16,0.125,0.13359342515468597
594,https://api.github.com/repos/CISOfy/lynis/issues/594,pr,cve discov sander bos code submiss katarina durechova store log data file home directori non privileg usag,cve discov sander bos code submiss katarina durechova store log data file home directori non privileg usag,break locat well known patch wait includ major releas pull request wait inclus requir addit work implement,2,4,cve|privilege,52,0.07692307692307693,0.13351625204086304
14107,https://api.github.com/repos/LCTT/TranslateProject/issues/14107,pr,iot secur vs privaci bigger issu,sourc talk iot secur vs privaci bigger issu md,,2,4,security|privacy,16,0.25,0.13293609023094177
102,https://api.github.com/repos/guysoft/OctoPi/issues/102,pr,fix check zero size ssl file,solv problem file gener byte size first place least make octopi reattempt gener certif thu fix issu describ possibl coupl reboot,better noth,2,2,ssl|certificate,30,0.06666666666666667,0.13292449712753296
477,https://api.github.com/repos/OWASP/wstg/issues/477,pr,fix typo test weak encrypt md,pr cover issu x pr handl issu requir addit prs x valid need chang pr accomplish fix follow typo encyprt instead encrypt two blank space instead one key privat key althorithm instead algorithm close,forget add review,4,5,encrypt|validate|private key|forge,44,0.11363636363636363,0.13276779651641846
66,https://api.github.com/repos/firmadyne/firmadyne/issues/66,issue,vulner inform sql databas,try find result vulner search databas find inform vulner inform locat,suggest schema databas includ full list vulner affect firmwar aggreg inform avail appendix specif case studi discuss evalu paper list affect firmwar previous unknown vulner public time detail file,2,6,vulnerability|availability,45,0.13333333333333333,0.13276229798793793
94,https://api.github.com/repos/papers-we-love/papers-we-love/issues/94,pr,ad secur directori ptacek newsham ids evas paper,one classic paper network intrus detect paper encumb reproduct,,2,2,security|intrusion,18,0.1111111111111111,0.13273665308952332
3488,https://api.github.com/repos/quicwg/base-drafts/issues/3488,issue,add test vector chacha header protect,recent mess implement test vector save,patch need think possibl tweak javascript file appreci help,2,2,protect|scripting,22,0.09090909090909091,0.132537379860878
320,https://api.github.com/repos/OWASP/owasp-mstg/issues/320,issue,x b author new content secur static analysi ios app,look todo add content secur static analysi ios app sourc code,,2,3,authorise|security,22,0.13636363636363635,0.13205969333648682
4723,https://api.github.com/repos/dotnet/core/issues/4723,issue,set privat key x certif alway throw platformnotsupportedexcept,look code x certif cs appear tri privat key cert alway throw except regardless platform despit document tooltip state privat key via properti,privatekey properti use longer privat key call appropri attach privat key certif privatekey properti setter support net framework complex side effect usual sometim caus signific confus properti alway support rsacryptoserviceprovid dsacryptoserviceprovid neither class gener directli use longer seem setter mark deprec messag probabl refer intend copywithprivatekey,4,11,private key|certificate|signing|crypt,78,0.14102564102564102,0.13168132305145264
630,https://api.github.com/repos/coreos/docs/issues/630,issue,os clarifi certif format expect,wish submit wish page includ certif extens pem request specif great expand bit format expect gener script work hood,,2,3,certificate|scripting,25,0.12,0.1316041797399521
1712,https://api.github.com/repos/PaperMC/Paper/issues/1712,pr,add static encod decod block long key,make api easier,made request chang irc resolv conflict,2,2,encode|decode,17,0.11764705882352941,0.1314334273338318
1534,https://api.github.com/repos/ceph/ceph-container/issues/1534,pr,daemon base drop ceph mgr ssh except master wip special case,ugli kludg work time someth eleg sort sign sage weil,altern quick hack bigger cleanup retest pleas restart job sinc better second run,3,3,ssh|signing|hack,35,0.08571428571428572,0.1307561695575714
1091,https://api.github.com/repos/rbenv/rbenv/issues/1091,pr,rehash shim sourc rbenv exec,avoid unnecessari subshel sourc libexec rbenv exec instead call new bash subprocess,sorri see valu chang simpl subshel significantli impact perform,2,2,hash|signing,27,0.07407407407407407,0.13055209815502167
4875,https://api.github.com/repos/rvm/rvm/issues/4875,issue,featur request checksum instead gpg verif,gpg prove notori unreli tool break rvm instal time nice altern verif method sha sum verif whatev work time provid reliabl verif method decent secur level current trust vagu gpg key instal unknown server internet instead reli http proven author,,5,5,checksum|sha|security|trust|authorise,47,0.10638297872340426,0.13054636120796204
745,https://api.github.com/repos/StreisandEffect/streisand/issues/745,pr,verifi libreswan sourc code gpg signatur,sinc libreswan provid signatur file integr verif elect whenev possibl accomplish pr refactor task previous part separ role make gener usabl exampl invoc main task remain larg unchang except variabl renam reflect gener natur resolv,,2,3,signature|integrity,42,0.07142857142857142,0.13033123314380646
36,https://api.github.com/repos/google/fuzzing/issues/36,pr,add dictionari oss fuzz project proj,seed proj actual valid input standard fuzzer provid great sourc dictionari valu,,2,3,fuzz|validate,19,0.15789473684210525,0.13015592098236084
1947,https://api.github.com/repos/dotnet/core/issues/1947,issue,random antiforgeri token decrypt,issu titl hello get random antiforgeri token decrypt site run iis window authent azur ad applic run net core error gener develop site sure start thank,issu move aspnet home,3,5,forgery|crypt|authentication,35,0.14285714285714285,0.1300182044506073
2188,https://api.github.com/repos/quicwg/base-drafts/issues/2188,pr,spoof ack attack,amplif one close,,2,2,spoof|attack,7,0.2857142857142857,0.12971191108226776
1302,https://api.github.com/repos/RetroPie/RetroPie-Setup/issues/1302,pr,fix mess bio hash incorrect placement,hash place biosdir mame instead biosdir mame hash,look right code look correct wildcard insid quot think work previou code without mkdir seem correct check biosdir mame folder need creat first els need mkdir p got quickli debug script wait hour pc run step independ etc commit chang,2,4,hash|scripting,55,0.07272727272727272,0.1295909732580185
107,https://api.github.com/repos/brson/multirust/issues/107,issue,cannot download checksum sha nigthli,rustup fail,thank report nightli misspel nigthli multirust interpret explicit version number find intend behavior though perhap error better,2,2,checksum|sha,25,0.08,0.1292138546705246
280,https://api.github.com/repos/drwetter/testssl.sh/issues/280,pr,number trust certif file instal dir etc pem,number pem file instal dir etc current hard code determin trust modifi code number file chang without chang code,kick java store today thought actual thx someth els cannot push anymor,2,3,trust|certificate,40,0.075,0.1285485029220581
3783,https://api.github.com/repos/quicwg/base-drafts/issues/3783,pr,encrypt level crypto determin packet type,text impli opposit,,2,2,encrypt|crypt,10,0.2,0.12793201208114624
286,https://api.github.com/repos/just-containers/s6-overlay/issues/286,issue,drop privileg cmd,accomplish current use,receiv follow error despit privileg seem drop accordingli like environ variabl want reset probabl still point someth replac home jenkin whatev actual home directori call execlin pass whole string script find littl easier read deal,2,3,privilege|scripting,42,0.07142857142857142,0.12765592336654663
264,https://api.github.com/repos/OpenVPN/easy-rsa/issues/264,pr,implement enddat specifi sign certif,allow specifi cli option specifi explicit valid client certif,,3,4,signing|certificate|validate,15,0.26666666666666666,0.1276266872882843
460,https://api.github.com/repos/tj/git-extras/issues/460,pr,git summari protect charact encod issu lc c,os x coupl sed error look charact encod issu run make error go away pr,,2,3,protect|encode,24,0.125,0.12664934992790222
393,https://api.github.com/repos/OWASP/wstg/issues/393,pr,add traffic captur snif tool,fix owasp wstg x pr handl issu requir addit prs x valid need chang pr accomplish add traffic captur snif tool sign kingthorin,,4,5,snif|owasp|validate|signing,29,0.1724137931034483,0.12659378349781036
2771,https://api.github.com/repos/acmesh-official/acme.sh/issues/2771,issue,dnsapi dns ali urlencod function invalid encod idn,function cannot encod idn refenc,got problem,2,4,encode|validate,16,0.25,0.12618416547775269
33,https://api.github.com/repos/awslabs/amazon-eks-ami/issues/33,pr,option support kms encrypt boot volum,issu avail none descript chang add option kms encrypt boot volum disabl default test build kms enabl disabl ill effect observ submit pull request confirm modifi copi redistribut contribut term choic,,3,4,encrypt|availability|scripting,38,0.10526315789473684,0.12613308429718018
621,https://api.github.com/repos/Stadicus/RaspiBolt/issues/621,pr,password protect block explor,hey appar password explor side caution mayb better share link publicli,,2,3,password|protect,16,0.1875,0.1259983628988266
30,https://api.github.com/repos/basho/riak/issues/30,pr,az ssl encrypt riak core handoff traffic,config reltool chang requir support riak core az handoff ssl see,,2,3,ssl|encrypt,19,0.15789473684210525,0.12497559189796448
29,https://api.github.com/repos/boxcutter/ubuntu/issues/29,pr,squash password provid,creat user portion script usual run current implement user provis part deploy base ubuntu imag nonetheless script broken,,2,3,password|scripting,22,0.13636363636363635,0.12487900257110596
89,https://api.github.com/repos/osresearch/heads/issues/89,issue,sha sum want two space,look want two space hash filenam otherwis complain pars input problem,,2,2,sha|hash,17,0.11764705882352941,0.12485365569591522
773,https://api.github.com/repos/matryer/bitbar-plugins/issues/773,pr,add plugin help detect arp spoof attack,simpl plugin detect go arp spoof attack,pleas help merg request thank,2,4,spoof|attack,20,0.2,0.12468603998422623
521,https://api.github.com/repos/docker-library/php/issues/521,pr,add argon password hash,see technic consid alpin sinc packag edg current note comment,obligatori looool,2,2,password|hash,17,0.11764705882352941,0.12464389950037003
891,https://api.github.com/repos/SonarSource/SonarTS/issues/891,issue,rule xml parser vulner xxe attack,implement exampl,,3,3,vulnerability|xxe|attack,9,0.3333333333333333,0.12427392601966858
665,https://api.github.com/repos/MichaIng/DietPi/issues/665,issue,dietpi configur semi autom password protect websit,goal find solut secur webpag regardless backend certain servic phpsysinfo node red user want secur expos,mark close due activ interest user base dev team,3,4,password|protect|security,33,0.12121212121212122,0.12420733273029327
47,https://api.github.com/repos/cxreg/smartcd/issues/47,pr,ad safe legaci prompt trust,ad support safe legaci store shasum local confdir want polish bit mayb updat flow around smartcd legaci,evalu merg pull request merg instead,2,3,safe|trust,29,0.10344827586206896,0.12314032763242722
1162,https://api.github.com/repos/OWASP/owasp-mstg/issues/1162,issue,ios updat updat password manag credenti session share,given ios best practic app develop embrac test make sure password gener usag etc done correctli part platform integr pointer,explain work short dev leverag bad practic,3,4,password|credential|integrity,36,0.1111111111111111,0.12209512293338776
195,https://api.github.com/repos/dehydrated-io/dehydrated/issues/195,issue,pleas bring back option reus privat key,hash privat key hkpk,,2,3,private key|hash,12,0.25,0.12176365405321121
2655,https://api.github.com/repos/quicwg/base-drafts/issues/2655,pr,merg crypto timeout pto,make crypto timeout includ deadlock prevent special case pto fix fix expect cleanup afterward try ensur consist pr,,2,3,crypt|deadlock,23,0.13043478260869565,0.12170607596635818
240,https://api.github.com/repos/rust-lang-nursery/rust-cookbook/issues/240,issue,add valid e mail address extract login exampl,exampl crate cc detail,nice done,2,2,validate|login,15,0.13333333333333333,0.12158296257257462
1677,https://api.github.com/repos/studygolang/GCTT/issues/1677,pr,implement rsa encrypt sign golang,close,,3,3,rsa|encrypt|signing,7,0.42857142857142855,0.12133278697729111
1505,https://api.github.com/repos/docker-library/official-images/issues/1505,pr,secur updat node js v,includ improv gpg usag verifi packag flag secur openssl updat although believ consid signific issu henc head email refer,changeset build test,3,4,security|openssl|signing,28,0.14285714285714285,0.12127368152141571
892,https://api.github.com/repos/SonarSource/SonarTS/issues/892,issue,rule use intrus permiss secur sensit,implement exampl,hello develop new rule plugin typescript analysi migrat sonarj,3,3,intrusion|security|scripting,18,0.16666666666666666,0.12110050767660141
139,https://api.github.com/repos/postmodern/chruby/issues/139,pr,fuzzi match latest patch level,implement revers sort see whip test littl later,actual alreadi implement branch simpli last valid match,2,2,fuzz|validate,22,0.09090909090909091,0.12087445706129074
19,https://api.github.com/repos/srvrco/getssl/issues/19,pr,defens protect filesystem rm command empti valu,command left uncheck danger potenti destroy unintend part filesystem protect command empti variabl produc error unset null creat temp dir,thank,3,4,defense|protect|danger,29,0.13793103448275862,0.12053964287042618
48,https://api.github.com/repos/quicwg/base-drafts/issues/48,pr,reclaim diversif nonc packet protect,close,,2,2,nonce|protect,7,0.2857142857142857,0.11899478733539581
166,https://api.github.com/repos/EliasKotlyar/Xiaomi-Dafang-Hacks/issues/166,pr,add sha sha checksum,rather reli approxim size includ checksum ensur file corrupt,,2,4,sha|checksum,14,0.2857142857142857,0.11846643686294556
593,https://api.github.com/repos/alexylem/jarvis/issues/593,issue,annonc une command avec un mot clef pour des command sensibl,descript amazon problem alexia ad tell alexia order toy perhap good think simpl secur special command exampl activ alarm jarvi password need action blueski jarvi alarm activ bad idea,alreadi possibl nest command,4,4,nonce|scripting|security|password,45,0.08888888888888889,0.11766009032726288
265,https://api.github.com/repos/quicwg/base-drafts/issues/265,issue,defin sourc address valid transport,defin interact tls,done,3,3,validate|transport|tls,10,0.3,0.11722755432128906
24,https://api.github.com/repos/bioconda/bioconda-recipes/issues/24,pr,dockerfil lang env var en us utf python encod decod,attempt fix,,2,2,encode|decode,13,0.15384615384615385,0.11575125902891159
3132,https://api.github.com/repos/msys2/MINGW-packages/issues/3132,pr,secur checksum url,nice deprec avoid futur issu,,2,2,security|checksum,9,0.2222222222222222,0.11461775004863739
2921,https://api.github.com/repos/quicwg/base-drafts/issues/2921,pr,confidenti server transport paramet,close,,2,2,confidential|transport,6,0.3333333333333333,0.11460493505001068
279,https://api.github.com/repos/oh-my-fish/oh-my-fish/issues/279,pr,add hash plugin databas,forgot add hash plugin databas wrote wink,,2,3,hash|forge,12,0.25,0.11254580318927765
470,https://api.github.com/repos/ANXS/postgresql/issues/470,pr,verbatim password encrypt,copi password encrypt configur variabl valid valu md scram sha,duplic propos close one pr suboptim solut agre solut pr pr touch mani thing valid valu,4,7,password|encrypt|validate|sha,30,0.23333333333333334,0.10980228334665298
2628,https://api.github.com/repos/LCTT/TranslateProject/issues/2628,pr,updat gener encrypt decrypt random password,n linux md,,3,3,encrypt|crypt|password,10,0.3,0.10839973390102386
160,https://api.github.com/repos/aviaryan/awesome-no-login-web-apps/issues/160,issue,repl requir login,appear servic requir sign,yes continu anonym worri think wink,2,2,login|signing,14,0.14285714285714285,0.10705699771642685
1708,https://api.github.com/repos/quicwg/base-drafts/issues/1708,pr,encrypt less often,term protect case,,2,2,encrypt|protect,7,0.2857142857142857,0.1066734790802002
426,https://api.github.com/repos/oblique/create_ap/issues/426,pr,add secur option,enabl support krack circumvent ieee w manag frame protect valu allow turn tkip wpa cipher,,3,3,security|protect|cipher,19,0.15789473684210525,0.10392690449953079
1435,https://api.github.com/repos/StreisandEffect/streisand/issues/1435,issue,disabl specif profil certif stop ssh openvpn,question move discuss,,2,2,certificate|ssh,11,0.18181818181818182,0.10238324105739594
